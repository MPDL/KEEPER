{"version":3,"sources":["components/history-trash-file-view/download.js","components/history-trash-file-view/file-view.js","components/history-trash-file-view/file-view-tip.js","components/file-content-view/text.js","components/file-content-view/markdown.js","history-trash-file-view.js","components/file-content-view/image.js","components/file-content-view/svg.js","components/file-content-view/pdf.js","components/file-content-view/video.js","components/file-content-view/audio.js"],"names":["window","app","pageOptions","fileName","repoID","objID","path","Download","href","siteRoot","encodeURIComponent","className","gettext","fromTrash","commitTime","canDownloadFile","enableWatermark","userNickName","FileView","props","this","content","React","Component","watermark","init","watermark_txt","siteName","watermark_alpha","err","UNSUPPORTED","FileViewTip","errorMsg","fileExt","fileContent","options","lineNumbers","mode","Utils","chooseLanguage","extraKeys","theme","textWrapping","lineWrapping","readOnly","cursorBlinkRate","FileContent","ref","value","markdownContent","showTOC","scriptSource","mediaUrl","fileType","HistoryTrashFileView","tip","ReactDOM","render","document","getElementById","previousImageUrl","nextImageUrl","repoEncrypted","filePath","thumbnailSizeForOriginal","previousImage","nextImage","rawPath","xmindImageSrc","encodePath","handleLoadFailure","setState","loadFailed","state","addEventListener","e","keyCode","location","thumbnailURL","canUseThumbnail","includes","xmindSrc","id","title","src","alt","onError","videoJsOptions","autoplay","controls","preload","sources"],"mappings":"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","file":"static/js/historyTrashFileView.chunk.js","sourcesContent":["import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  fileName, repoID, objID, path\n} = window.app.pageOptions;\n\nfunction Download() {\n  return (\n    <a href={`${siteRoot}repo/${repoID}/${objID}/download/?file_name=${encodeURIComponent(fileName)}&p=${encodeURIComponent(path)}`} className=\"btn btn-secondary\">{gettext('Download')}</a>\n  );\n}\n\nexport default Download;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport watermark from 'watermark-dom';\nimport { gettext, siteName } from '../../utils/constants';\nimport Download from './download';\n\nimport '../../css/file-view.css';\n\nconst propTypes = {\n  content: PropTypes.object.isRequired\n};\n\nconst {\n  fromTrash,\n  fileName, commitTime,\n  canDownloadFile,\n  enableWatermark, userNickName\n} = window.app.pageOptions;\n\n\nclass FileView extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"file-view-header d-flex justify-content-between align-items-center\">\n          <div>\n            <h2 className=\"file-title\">{fileName}</h2>\n            <p className=\"meta-info m-0\">{fromTrash ? `${gettext('Current Path: ')}${gettext('Trash')}`: commitTime}</p>\n          </div>\n          {canDownloadFile && <Download />}\n        </div>\n        <div className=\"file-view-body flex-auto d-flex o-hidden\">\n          {this.props.content}\n        </div>\n      </div>\n    );\n  }\n}\n\nif (enableWatermark) {\n  watermark.init({\n    watermark_txt: `${siteName} ${userNickName}`,\n    watermark_alpha: 0.075\n  });\n}\n\nFileView.propTypes = propTypes;\n\nexport default FileView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport Download from './download';\n\nconst propTypes = {\n  err: PropTypes.string\n};\nconst { canDownloadFile, err } = window.app.pageOptions;\nconst UNSUPPORTED = 'File preview unsupported';\n\nclass FileViewTip extends React.Component {\n\n  render() {\n    let errorMsg;\n    if (err == UNSUPPORTED || this.props.err == UNSUPPORTED) {\n      errorMsg = <p>{gettext('Online view is not applicable to this file format')}</p>;\n    } else {\n      errorMsg = <p className=\"error\">{err}</p>;\n    }\n\n    return (\n      <div className=\"file-view-content flex-1 o-auto\">\n        <div className=\"file-view-tip\">\n          {errorMsg}\n          {canDownloadFile && <Download />}\n        </div>\n      </div>\n    );\n  }\n}\nFileViewTip.propTypes = propTypes;\n\nexport default FileViewTip;\n","import React from 'react';\nimport { Utils } from '../../utils/utils';\n\nimport CodeMirror from 'react-codemirror';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/php/php';\nimport 'codemirror/mode/sql/sql';\nimport 'codemirror/mode/vue/vue';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/go/go';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/htmlmixed/htmlmixed';\nimport 'codemirror/lib/codemirror.css';\n\nimport '../../css/text-file-view.css';\n\nconst {\n  fileExt, fileContent\n} = window.app.pageOptions;\n\nconst options = {\n  lineNumbers: true,\n  mode: Utils.chooseLanguage(fileExt),\n  extraKeys: {'Ctrl': 'autocomplete'},\n  theme: 'default',\n  textWrapping: true,\n  lineWrapping: true,\n  readOnly: true,\n  cursorBlinkRate: -1 // hide the cursor\n};\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 text-file-view\">\n        <CodeMirror\n          ref=\"code-mirror-editor\"\n          value={fileContent}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport MarkdownViewer from '@seafile/seafile-editor/dist/viewer/markdown-viewer';\nimport { mediaUrl } from '../../utils/constants';\n\nimport '../../css/md-file-view.css';\n\nconst { fileContent } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 o-auto\">\n        <div className=\"md-content\">\n          <MarkdownViewer\n            markdownContent={fileContent}\n            showTOC={false}\n            scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FileView from './components/history-trash-file-view/file-view';\nimport FileViewTip from './components/history-trash-file-view/file-view-tip';\nimport Image from './components/file-content-view/image';\nimport SVG from './components/file-content-view/svg';\nimport PDF from './components/file-content-view/pdf';\nimport Text from './components/file-content-view/text';\nimport Markdown from './components/file-content-view/markdown';\nimport Video from './components/file-content-view/video';\nimport Audio from './components/file-content-view/audio';\n\nconst {\n  fileType, err\n} = window.app.pageOptions;\n\nclass HistoryTrashFileView extends React.Component {\n\n  render() {\n    if (err) {\n      return (\n        <FileView content={<FileViewTip />} />\n      );\n    }\n\n    let content;\n    switch (fileType) {\n      case 'Image':\n        content = <Image tip={<FileViewTip />} />;\n        break;\n      case 'SVG':\n        content = <SVG />;\n        break;\n      case 'PDF':\n        content = <PDF />;\n        break;\n      case 'Text':\n        content = <Text />;\n        break;\n      case 'Markdown':\n        content = <Markdown />;\n        break;\n      case 'Video':\n        content = <Video />;\n        break;\n      case 'Audio':\n        content = <Audio />;\n        break;\n      default:\n        content = <FileViewTip err='File preview unsupported' />;\n    }\n\n    return (\n      <FileView content={content} />\n    );\n  }\n}\n\nReactDOM.render (\n  <HistoryTrashFileView />,\n  document.getElementById('wrapper')\n);\n","import React from 'react';\nimport { Utils } from '../../utils/utils';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nimport '../../css/image-file-view.css';\n\nconst {\n  repoID, repoEncrypted,\n  fileExt, filePath, fileName,\n  thumbnailSizeForOriginal,\n  previousImage, nextImage, rawPath,\n  xmindImageSrc // for xmind file\n} = window.app.pageOptions;\n\nlet previousImageUrl, nextImageUrl;\nif (previousImage) {\n  previousImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(previousImage)}`;\n}\nif (nextImage) {\n  nextImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(nextImage)}`;\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadFailed: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', (e) => {\n      if (previousImage && e.keyCode == 37) { // press '<-'\n        location.href = previousImageUrl;\n      }\n      if (nextImage && e.keyCode == 39) { // press '->'\n        location.href = nextImageUrl;\n      }\n    });\n  }\n\n  handleLoadFailure = () => {\n    this.setState({\n      loadFailed: true\n    });\n  }\n\n  render() {\n    if (this.state.loadFailed) {\n      return this.props.tip;\n    }\n\n    // request thumbnails for some files\n    // only for 'file view'. not for 'history/trash file view'\n    let thumbnailURL = '';\n    const fileExtList = ['tif', 'tiff', 'psd'];\n    if (this.props.canUseThumbnail && !repoEncrypted && fileExtList.includes(fileExt)) {\n      thumbnailURL = `${siteRoot}thumbnail/${repoID}/${thumbnailSizeForOriginal}${Utils.encodePath(filePath)}`;\n    }\n\n    // for xmind file\n    const xmindSrc = xmindImageSrc ? `${siteRoot}${xmindImageSrc}` : '';\n\n    return (\n      <div className=\"file-view-content flex-1 image-file-view\">\n        {previousImage && (\n          <a href={previousImageUrl} id=\"img-prev\" title={gettext('you can also press ← ')}><span className=\"fas fa-chevron-left\"></span></a>\n        )}\n        {nextImage && (\n          <a href={nextImageUrl} id=\"img-next\" title={gettext('you can also press →')}><span className=\"fas fa-chevron-right\"></span></a>\n        )}\n        <img src={xmindSrc || thumbnailURL || rawPath} alt={fileName} id=\"image-view\" onError={this.handleLoadFailure} />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\n\nimport '../../css/svg-file-view.css';\n\nconst {\n  fileName, rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 svg-file-view\">\n        <img src={rawPath} alt={fileName} id=\"svg-view\" />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport PDFViewer from '../pdf-viewer';\n\nimport '../../css/pdf-file-view.css';\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport VideoPlayer from '../video-player';\n\nimport '../../css/video-file-view.css';\n\nconst {\n  rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 video-file-view\">\n        <VideoPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport AudioPlayer from '../audio-player';\n\nimport '../../css/audio-file-view.css';\n\nconst { rawPath } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 audio-file-view\">\n        <AudioPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n"],"sourceRoot":""}