{"version":3,"sources":["view-file-spreadsheet.js"],"names":["_window$app$pageOptio","window","app","pageOptions","repoID","filePath","err","commitID","fileType","fileName","ViewFileSpreadsheet","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsx","FileView","content","FileContent","React","Component","_React$Component2","_super2","props","_this","call","setIframeHeight","e","iframe","currentTarget","height","contentDocument","body","scrollHeight","state","isLoading","errorMsg","_this2","queryStatus","seafileAPI","queryOfficeFileConvertStatus","toLowerCase","then","res","data","setState","setTimeout","gettext","catch","error","response","_this$state","this","FileViewTip","Loading","className","children","id","title","src","concat","siteRoot","encodeURIComponent","onLoad","ReactDOM","render","document","getElementById"],"mappings":"2SAUAA,EAGIC,OAAOC,IAAIC,YAFbC,EAAMJ,EAANI,OAAQC,EAAQL,EAARK,SAAUC,EAAGN,EAAHM,IAClBC,EAAQP,EAARO,SAAUC,EAAQR,EAARQ,SAAUC,EAAQT,EAARS,SAGhBC,EAAmB,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAKtB,OALsBC,YAAAR,EAAA,EAAAS,IAAA,SAAAC,MACvB,WACE,OACEC,cAACC,IAAQ,CAACC,QAASF,cAACG,EAAW,KAEnC,KAACd,CAAA,CALsB,CAASe,IAAMC,WAQlCF,EAAW,SAAAG,GAAAf,YAAAY,EAAAG,GAAA,IAAAC,EAAAd,YAAAU,GAEf,SAAAA,EAAYK,GAAQ,IAADC,EAKf,OALef,YAAA,KAAAS,IACjBM,EAAAF,EAAAG,KAAA,KAAMF,IAqDRG,gBAAkB,SAACC,GACjB,IAAMC,EAASD,EAAEE,cACjBD,EAAOE,OAASF,EAAOG,gBAAgBC,KAAKC,YAC9C,EAvDET,EAAKU,MAAQ,CACXC,WAAYnC,EACZoC,SAAU,IACVZ,CACJ,CAyEC,OAzEAZ,YAAAM,EAAA,EAAAL,IAAA,oBAAAC,MAED,WAAqB,IAADuB,EAAA,KAClB,IAAIrC,EAAJ,EAIkB,SAAdsC,IACFC,IAAWC,6BAA6B1C,EAAQG,EAAUF,EAAUG,EAASuC,eAAeC,MAAK,SAACC,GAEhG,OADsBA,EAAIC,KAAa,QAErC,IAAK,SACL,IAAK,aACHP,EAAKQ,SAAS,CACZV,WAAW,IAEbW,WAAWR,EAAa,KACxB,MACF,IAAK,QACHD,EAAKQ,SAAS,CACZV,WAAW,EACXC,SAAUW,aAAQ,iCAEpB,MACF,IAAK,OACHV,EAAKQ,SAAS,CACZV,WAAW,EACXC,SAAU,KAGlB,IAAGY,OAAM,SAACC,GACJA,EAAMC,SACRb,EAAKQ,SAAS,CACZV,WAAW,EACXC,SAAUW,aAAQ,iCAGpBV,EAAKQ,SAAS,CACZV,WAAW,EACXC,SAAUW,aAAQ,8BAGxB,GACF,CAEAT,EAxCA,CAyCF,GAAC,CAAAzB,IAAA,SAAAC,MAOD,WACE,IAAAqC,EAAgCC,KAAKlB,MAA7BC,EAASgB,EAAThB,UAAWC,EAAQe,EAARf,SAEnB,OAAIpC,EACKe,cAACsC,IAAW,IAGjBlB,EACKpB,cAACuC,IAAO,IAGblB,EACKrB,cAACsC,IAAW,CAACjB,SAAUA,IAI9BrB,cAAA,OAAKwC,UAAU,iDAAgDC,SAC7DzC,cAAA,UAAQ0C,GAAG,wBAAwBC,MAAOvD,EAAUwD,IAAG,GAAAC,OAAKC,KAAQ,0BAAAD,OAAyB9D,EAAM,KAAA8D,OAAI3D,GAAQ2D,OAAGE,mBAAmB/D,GAAS,eAAegE,OAAQX,KAAK1B,mBAGhL,KAACR,CAAA,CAjFc,CAASC,IAAMC,WAoFhC4C,IAASC,OACPlD,cAACX,EAAmB,IACpB8D,SAASC,eAAe,W","file":"static/js/viewFileSpreadsheet.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { seafileAPI } from './utils/seafile-api';\nimport { siteRoot, gettext } from './utils/constants';\nimport FileView from './components/file-view/file-view';\nimport FileViewTip from './components/file-view/file-view-tip';\nimport Loading from './components/loading';\n\nimport './css/spreadsheet-file-view.css';\n\nconst {\n  repoID, filePath, err,\n  commitID, fileType, fileName\n} = window.app.pageOptions;\n\nclass ViewFileSpreadsheet extends React.Component {\n  render() {\n    return (\n      <FileView content={<FileContent />} />\n    );\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: !err,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    if (err) {\n      return;\n    }\n\n    let queryStatus = () => {\n      seafileAPI.queryOfficeFileConvertStatus(repoID, commitID, filePath, fileType.toLowerCase()).then((res) => {\n        const convertStatus = res.data['status'];\n        switch (convertStatus) {\n          case 'QUEUED':\n          case 'PROCESSING':\n            this.setState({\n              isLoading: true\n            });\n            setTimeout(queryStatus, 2000);\n            break;\n          case 'ERROR':\n            this.setState({\n              isLoading: false,\n              errorMsg: gettext('Document convertion failed.')\n            });\n            break;\n          case 'DONE':\n            this.setState({\n              isLoading: false,\n              errorMsg: ''\n            });\n        }\n      }).catch((error) => {\n        if (error.response) {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Document convertion failed.')\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Please check the network.')\n          });\n        }\n      });\n    };\n\n    queryStatus();\n  }\n\n  setIframeHeight = (e) => {\n    const iframe = e.currentTarget;\n    iframe.height = iframe.contentDocument.body.scrollHeight;\n  }\n\n  render() {\n    const { isLoading, errorMsg } = this.state;\n\n    if (err) {\n      return <FileViewTip />;\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <FileViewTip errorMsg={errorMsg} />;\n    }\n\n    return (\n      <div className=\"file-view-content flex-1 spreadsheet-file-view\">\n        <iframe id=\"spreadsheet-container\" title={fileName} src={`${siteRoot}office-convert/static/${repoID}/${commitID}${encodeURIComponent(filePath)}/index.html`} onLoad={this.setIframeHeight}></iframe>\n      </div>\n    );\n  }\n}\n\nReactDOM.render (\n  <ViewFileSpreadsheet />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}