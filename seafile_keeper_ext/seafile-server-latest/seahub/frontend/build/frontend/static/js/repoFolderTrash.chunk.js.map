{"version":3,"sources":["components/dialog/clean-trash.js","repo-folder-trash.js"],"names":["CleanTrash","props","handleInputChange","value","setState","inputValue","formSubmit","state","repoID","submitBtnDisabled","seafileAPI","deleteRepoTrash","then","res","toaster","success","gettext","refreshTrash","toggleDialog","catch","error","errorMsg","Utils","getErrorMsg","formErrorMsg","options","label","this","isOpen","centered","toggle","Fragment","defaultValue","autoFocus","onChange","placeholder","className","disabled","onClick","React","Component","window","app","pageOptions","repoFolderName","path","enableClean","RepoFolderTrash","getItems","scanStat","getRepoFolderTrash","data","more","scan_stat","length","isLoading","items","concat","getMore","onSearchedClick","selectedItem","is_dir","url","siteRoot","repo_id","repo_name","navigate","repalce","encodePath","open","location","href","goBack","e","preventDefault","history","back","cleanTrash","toggleCleanTrashDialog","isCleanTrashDialogOpen","showFolder","renderFolder","commitID","baseDir","folderPath","folderItems","listCommitDir","substr","dirent_list","response","status","clickRoot","clickFolderPath","renderFolderPath","pathList","split","map","item","index","bind","slice","join","src","mediaUrl","logoPath","height","logoHeight","width","logoWidth","title","siteTitle","alt","dangerouslySetInnerHTML","__html","generateDialogTitle","Content","theadData","text","Item","handleMouseOver","isIconShown","handleMouseOut","restoreItem","commit_id","parent_dir","obj_name","restoreFolder","restoreFile","restored","error_msg","danger","joinPath","onMouseOver","onMouseOut","getFolderIconUrl","moment","deleted_time","format","getFileIconUrl","obj_id","encodeURIComponent","target","bytesToSize","size","FolderItem","name","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/repoFolderTrash.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Select from 'react-select/lib/Creatable';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  refreshTrash: PropTypes.func.isRequired,\n  toggleDialog: PropTypes.func.isRequired\n};\n\nclass CleanTrash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = [\n      {label: gettext('3 days ago'), value: 3},\n      {label: gettext('1 week ago'), value: 7},\n      {label: gettext('1 month ago'), value: 30},\n      {label: gettext('all'), value: 0}\n    ];\n    this.state = {\n      inputValue: this.options[0],\n      submitBtnDisabled: false\n    };\n  }\n\n  handleInputChange = (value) => {\n    this.setState({\n      inputValue: value\n    });\n  }\n\n  formSubmit = () => {\n    const inputValue = this.state.inputValue;\n    const { repoID } = this.props;\n\n    this.setState({\n      submitBtnDisabled: true\n    });\n\n    seafileAPI.deleteRepoTrash(repoID, inputValue.value).then((res) => {\n      toaster.success(gettext('Clean succeeded.'));\n      this.props.refreshTrash();\n      this.props.toggleDialog();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        formErrorMsg: errorMsg,\n        submitBtnDisabled: false\n      });\n    });\n  }\n\n  render() {\n    const { formErrorMsg } = this.state;\n    return (\n      <Modal isOpen={true} centered={true} toggle={this.props.toggleDialog}>\n        <ModalHeader toggle={this.props.toggleDialog}>{gettext('Clean')}</ModalHeader>\n        <ModalBody>\n          <React.Fragment>\n            <p>{gettext('Clear files in trash and history：')}</p>\n            <Select\n              defaultValue={this.options[0]}\n              options={this.options}\n              autoFocus={false}\n              onChange={this.handleInputChange}\n              placeholder=''\n            />\n            {formErrorMsg && <p className=\"error m-0 mt-2\">{formErrorMsg}</p>}\n          </React.Fragment>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-primary\" disabled={this.state.submitBtnDisabled} onClick={this.formSubmit}>{gettext('Submit')}</button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nCleanTrash.propTypes = propTypes;\n\nexport default CleanTrash;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { navigate } from '@reach/router';\nimport moment from 'moment';\nimport { Utils } from './utils/utils';\nimport { gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport ModalPortal from './components/modal-portal';\nimport toaster from './components/toast';\nimport CommonToolbar from './components/toolbar/common-toolbar';\nimport CleanTrash from './components/dialog/clean-trash';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/repo-folder-trash.css';\n\nconst {\n  repoID,\n  repoFolderName,\n  path,\n  enableClean\n} = window.app.pageOptions;\n\nclass RepoFolderTrash extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      items: [],\n      scanStat: null,\n      more: false,\n      isCleanTrashDialogOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  getItems = (scanStat) => {\n    seafileAPI.getRepoFolderTrash(repoID, path, scanStat).then((res) => {\n      const { data, more, scan_stat } = res.data;\n      if (!data.length && more) {\n        this.getItems(scan_stat);\n      } else {\n        this.setState({\n          isLoading: false,\n          items: this.state.items.concat(data),\n          more: more,\n          scanStat: scan_stat\n        });\n      }\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      });\n    });\n  }\n\n  getMore = () => {\n    this.setState({\n      isLoading: true\n    });\n    this.getItems(this.state.scanStat);\n  }\n\n  onSearchedClick = (selectedItem) => {\n    if (selectedItem.is_dir === true) {\n      let url = siteRoot + 'library/' + selectedItem.repo_id + '/' + selectedItem.repo_name + selectedItem.path;\n      navigate(url, {repalce: true});\n    } else {\n      let url = siteRoot + 'lib/' + selectedItem.repo_id + '/file' + Utils.encodePath(selectedItem.path);\n      let newWindow = window.open('about:blank');\n      newWindow.location.href = url;\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n    window.history.back();\n  }\n\n  cleanTrash = () => {\n    this.toggleCleanTrashDialog();\n  }\n\n  toggleCleanTrashDialog = () => {\n    this.setState({\n      isCleanTrashDialogOpen: !this.state.isCleanTrashDialogOpen\n    });\n  }\n\n  refreshTrash = () => {\n    this.setState({\n      isLoading: true,\n      errorMsg: '',\n      items: [],\n      scanStat: null,\n      more: false,\n      showFolder: false\n    });\n    this.getItems();\n  }\n\n  renderFolder = (commitID, baseDir, folderPath) => {\n    this.setState({\n      showFolder: true,\n      commitID: commitID,\n      baseDir: baseDir,\n      folderPath: folderPath,\n      folderItems: [],\n      isLoading: true\n    });\n\n    seafileAPI.listCommitDir(repoID, commitID, `${baseDir.substr(0, baseDir.length - 1)}${folderPath}`).then((res) => {\n      this.setState({\n        isLoading: false,\n        folderItems: res.data.dirent_list\n      });\n    }).catch((error) => {\n      if (error.response) {\n        if (error.response.status == 403) {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Permission denied')\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Error')\n          });\n        }\n      } else {\n        this.setState({\n          isLoading: false,\n          errorMsg: gettext('Please check the network.')\n        });\n      }\n    });\n  }\n\n  clickRoot = (e) => {\n    e.preventDefault();\n    this.refreshTrash();\n  }\n\n  clickFolderPath = (folderPath, e) => {\n    e.preventDefault();\n    const { commitID, baseDir } = this.state;\n    this.renderFolder(commitID, baseDir, folderPath);\n  }\n\n  renderFolderPath = () => {\n    const pathList = this.state.folderPath.split('/');\n    return (\n      <React.Fragment>\n        <a href=\"#\" onClick={this.clickRoot}>{repoFolderName}</a>\n        <span> / </span>\n        {pathList.map((item, index) => {\n          if (index > 0 && index != pathList.length - 1) {\n            return (\n              <React.Fragment key={index}>\n                <a href=\"#\" onClick={this.clickFolderPath.bind(this, pathList.slice(0, index+1).join('/'))}>{pathList[index]}</a>\n                <span> / </span>\n              </React.Fragment>\n            );\n          }\n        }\n        )}\n        {pathList[pathList.length - 1]}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { isCleanTrashDialogOpen, showFolder } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <CommonToolbar onSearchedClick={this.onSearchedClick} />\n          </div>\n          <div className=\"flex-auto container-fluid pt-4 pb-6 o-auto\">\n            <div className=\"row\">\n              <div className=\"col-md-10 offset-md-1\">\n                <h2 dangerouslySetInnerHTML={{__html: Utils.generateDialogTitle(gettext('{placeholder} Trash'), repoFolderName)}}></h2>\n                <a href=\"#\" className=\"go-back\" title={gettext('Back')} onClick={this.goBack}>\n                  <span className=\"fas fa-chevron-left\"></span>\n                </a>\n                <div className=\"d-flex justify-content-between align-items-center op-bar\">\n                  <p className=\"m-0\">{gettext('Current path: ')}{showFolder ? this.renderFolderPath() : repoFolderName}</p>\n                  {(path == '/' && enableClean && !showFolder) &&\n                  <button className=\"btn btn-secondary clean\" onClick={this.cleanTrash}>{gettext('Clean')}</button>\n                  }\n                </div>\n                <Content\n                  data={this.state}\n                  getMore={this.getMore}\n                  renderFolder={this.renderFolder}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {isCleanTrashDialogOpen &&\n        <ModalPortal>\n          <CleanTrash\n            repoID={repoID}\n            refreshTrash={this.refreshTrash}\n            toggleDialog={this.toggleCleanTrashDialog}\n          />\n        </ModalPortal>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.theadData = [\n      {width: '5%', text: ''},\n      {width: '45%', text: gettext('Name')},\n      {width: '20%', text: gettext('Delete Time')},\n      {width: '15%', text: gettext('Size')},\n      {width: '15%', text: ''}\n    ];\n  }\n\n  render() {\n    const { isLoading, errorMsg, items, more, showFolder, commitID, baseDir, folderPath, folderItems } = this.props.data;\n\n    return (\n      <React.Fragment>\n        <table className=\"table-hover\">\n          <thead>\n            <tr>\n              {this.theadData.map((item, index) => {\n                return <th key={index} width={item.width}>{item.text}</th>;\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {showFolder ?\n              folderItems.map((item, index) => {\n                return <FolderItem\n                  key={index}\n                  item={item}\n                  commitID={commitID}\n                  baseDir={baseDir}\n                  folderPath={folderPath}\n                  renderFolder={this.props.renderFolder}\n                />;\n              }) :\n              items.map((item, index) => {\n                return <Item\n                  key={index}\n                  item={item}\n                  renderFolder={this.props.renderFolder}\n                />;\n              })}\n          </tbody>\n        </table>\n        {isLoading && <Loading />}\n        {errorMsg && <p className=\"error mt-6 text-center\">{errorMsg}</p>}\n        {(more && !isLoading && !showFolder) && (\n          <button className=\"btn btn-block more mt-6\" onClick={this.props.getMore}>{gettext('More')}</button>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nclass Item extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      restored: false,\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  restoreItem = (e) => {\n    e.preventDefault();\n\n    const item = this.props.item;\n    const { commit_id, parent_dir, obj_name } = item;\n    const path = parent_dir + obj_name;\n    const request = item.is_dir ?\n      seafileAPI.restoreFolder(repoID, commit_id, path) :\n      seafileAPI.restoreFile(repoID, commit_id, path);\n    request.then((res) => {\n      this.setState({\n        restored: true\n      });\n      toaster.success(gettext('Successfully restored 1 item.'));\n    }).catch((error) => {\n      let errorMsg = '';\n      if (error.response) {\n        errorMsg = error.response.data.error_msg || gettext('Error');\n      } else {\n        errorMsg = gettext('Please check the network.');\n      }\n      toaster.danger(errorMsg);\n    });\n  }\n\n  renderFolder = (e) => {\n    e.preventDefault();\n    const item = this.props.item;\n    this.props.renderFolder(item.commit_id, item.parent_dir, Utils.joinPath('/', item.obj_name));\n  }\n\n  render() {\n    const item = this.props.item;\n    const { restored, isIconShown } = this.state;\n\n    if (restored) {\n      return null;\n    }\n\n    return item.is_dir ? (\n      <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt={gettext('Directory')} width=\"24\" /></td>\n        <td><a href=\"#\" onClick={this.renderFolder}>{item.obj_name}</a></td>\n        <td title={moment(item.deleted_time).format('LLLL')}>{moment(item.deleted_time).format('YYYY-MM-DD')}</td>\n        <td></td>\n        <td>\n          <a href=\"#\" className={isIconShown ? '': 'invisible'} onClick={this.restoreItem}>{gettext('Restore')}</a>\n        </td>\n      </tr>\n    ) : (\n      <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <td className=\"text-center\"><img src={Utils.getFileIconUrl(item.obj_name)} alt={gettext('File')} width=\"24\" /></td>\n        <td><a href={`${siteRoot}repo/${repoID}/trash/files/?obj_id=${item.obj_id}&commit_id=${item.commit_id}&base=${encodeURIComponent(item.parent_dir)}&p=${encodeURIComponent('/' + item.obj_name)}`} target=\"_blank\">{item.obj_name}</a></td>\n        <td title={moment(item.deleted_time).format('LLLL')}>{moment(item.deleted_time).format('YYYY-MM-DD')}</td>\n        <td>{Utils.bytesToSize(item.size)}</td>\n        <td>\n          <a href=\"#\" className={isIconShown ? '': 'invisible'} onClick={this.restoreItem}>{gettext('Restore')}</a>\n        </td>\n      </tr>\n    );\n  }\n}\n\nclass FolderItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  renderFolder = (e) => {\n    e.preventDefault();\n\n    const item = this.props.item;\n    const { commitID, baseDir, folderPath } = this.props;\n    this.props.renderFolder(commitID, baseDir, Utils.joinPath(folderPath, item.name));\n  }\n\n  render() {\n    const item = this.props.item;\n    const { isIconShown } = this.state;\n    const { commitID, baseDir, folderPath } = this.props;\n\n    return item.type == 'dir' ? (\n      <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt={gettext('Directory')} width=\"24\" /></td>\n        <td><a href=\"#\" onClick={this.renderFolder}>{item.name}</a></td>\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    ) : (\n      <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <td className=\"text-center\"><img src={Utils.getFileIconUrl(item.name)} alt={gettext('File')} width=\"24\" /></td>\n        <td><a href={`${siteRoot}repo/${repoID}/trash/files/?obj_id=${item.obj_id}&commit_id=${commitID}&base=${encodeURIComponent(baseDir)}&p=${encodeURIComponent(Utils.joinPath(folderPath, item.name))}`} target=\"_blank\">{item.name}</a></td>\n        <td></td>\n        <td>{Utils.bytesToSize(item.size)}</td>\n        <td></td>\n      </tr>\n    );\n  }\n}\n\nReactDOM.render(\n  <RepoFolderTrash />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}