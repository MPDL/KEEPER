{"version":3,"sources":["view-file-document.js"],"names":["_window$app$pageOptio","window","app","pageOptions","repoID","filePath","err","commitID","fileType","ViewFileDocument","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsx","FileView","content","FileContent","React","Component","_React$Component2","_super2","props","_this","call","state","isLoading","errorMsg","_this2","queryStatus","seafileAPI","queryOfficeFileConvertStatus","toLowerCase","then","res","data","setState","setTimeout","gettext","scriptNode","document","createElement","type","src","concat","mediaUrl","body","append","catch","error","response","_this$state","this","FileViewTip","Loading","className","children","PDFViewer","ReactDOM","render","getElementById"],"mappings":"oTAWAA,EAGIC,OAAOC,IAAIC,YAFbC,EAAMJ,EAANI,OAAQC,EAAQL,EAARK,SAAUC,EAAGN,EAAHM,IAClBC,EAAQP,EAARO,SAAUC,EAAQR,EAARQ,SAGNC,EAAgB,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAKnB,OALmBC,YAAAR,EAAA,EAAAS,IAAA,SAAAC,MACpB,WACE,OACEC,cAACC,IAAQ,CAACC,QAASF,cAACG,EAAW,KAEnC,KAACd,CAAA,CALmB,CAASe,IAAMC,WAQ/BF,EAAW,SAAAG,GAAAf,YAAAY,EAAAG,GAAA,IAAAC,EAAAd,YAAAU,GAEf,SAAAA,EAAYK,GAAQ,IAADC,EAKf,OALef,YAAA,KAAAS,IACjBM,EAAAF,EAAAG,KAAA,KAAMF,IACDG,MAAQ,CACXC,WAAY1B,EACZ2B,SAAU,IACVJ,CACJ,CAyEC,OAzEAZ,YAAAM,EAAA,EAAAL,IAAA,oBAAAC,MAED,WAAqB,IAADe,EAAA,KAClB,IAAI5B,EAAJ,EAIkB,SAAd6B,IACFC,IAAWC,6BAA6BjC,EAAQG,EAAUF,EAAUG,EAAS8B,eAAeC,MAAK,SAACC,GAEhG,OADsBA,EAAIC,KAAa,QAErC,IAAK,aACHP,EAAKQ,SAAS,CACZV,WAAW,IAEbW,WAAWR,EAAa,KACxB,MACF,IAAK,QACHD,EAAKQ,SAAS,CACZV,WAAW,EACXC,SAAUW,aAAQ,iCAEpB,MACF,IAAK,OACHV,EAAKQ,SAAS,CACZV,WAAW,EACXC,SAAU,KAGZ,IAAIY,EAAaC,SAASC,cAAc,UACxCF,EAAWG,KAAO,kBAClBH,EAAWI,IAAG,GAAAC,OAAMC,KAAQ,wBAC5BL,SAASM,KAAKC,OAAOR,GAE3B,IAAGS,OAAM,SAACC,GACJA,EAAMC,SACRtB,EAAKQ,SAAS,CACZV,WAAW,EACXC,SAAUW,aAAQ,iCAGpBV,EAAKQ,SAAS,CACZV,WAAW,EACXC,SAAUW,aAAQ,8BAGxB,GACF,CAEAT,EA5CA,CA6CF,GAAC,CAAAjB,IAAA,SAAAC,MAGD,WACE,IAAAsC,EAAgCC,KAAK3B,MAA7BC,EAASyB,EAATzB,UAAWC,EAAQwB,EAARxB,SAEnB,OAAI3B,EACKc,cAACuC,IAAW,IAGjB3B,EACKZ,cAACwC,IAAO,IAGb3B,EACKb,cAACuC,IAAW,CAAC1B,SAAUA,IAI9Bb,cAAA,OAAKyC,UAAU,yCAAwCC,SACrD1C,cAAC2C,IAAS,KAGhB,KAACxC,CAAA,CAjFc,CAASC,IAAMC,WAoFhCuC,IAASC,OACP7C,cAACX,EAAgB,IACjBqC,SAASoB,eAAe,W","file":"static/js/viewFileDocument.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { seafileAPI } from './utils/seafile-api';\nimport { gettext, mediaUrl} from './utils/constants';\nimport FileView from './components/file-view/file-view';\nimport FileViewTip from './components/file-view/file-view-tip';\nimport Loading from './components/loading';\nimport PDFViewer from './components/pdf-viewer';\n\nimport './css/pdf-file-view.css';\n\nconst {\n  repoID, filePath, err,\n  commitID, fileType\n} = window.app.pageOptions;\n\nclass ViewFileDocument extends React.Component {\n  render() {\n    return (\n      <FileView content={<FileContent />} />\n    );\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: !err,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    if (err) {\n      return;\n    }\n\n    let queryStatus = () => {\n      seafileAPI.queryOfficeFileConvertStatus(repoID, commitID, filePath, fileType.toLowerCase()).then((res) => {\n        const convertStatus = res.data['status'];\n        switch (convertStatus) {\n          case 'PROCESSING':\n            this.setState({\n              isLoading: true\n            });\n            setTimeout(queryStatus, 2000);\n            break;\n          case 'ERROR':\n            this.setState({\n              isLoading: false,\n              errorMsg: gettext('Document convertion failed.')\n            });\n            break;\n          case 'DONE':\n            this.setState({\n              isLoading: false,\n              errorMsg: ''\n            });\n\n            let scriptNode = document.createElement('script');\n            scriptNode.type = 'text/javascript';\n            scriptNode.src = `${mediaUrl}js/pdf/web/viewer.js`;\n            document.body.append(scriptNode);\n        }\n      }).catch((error) => {\n        if (error.response) {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Document convertion failed.')\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Please check the network.')\n          });\n        }\n      });\n    };\n\n    queryStatus();\n  }\n\n\n  render() {\n    const { isLoading, errorMsg } = this.state;\n\n    if (err) {\n      return <FileViewTip />;\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <FileViewTip errorMsg={errorMsg} />;\n    }\n\n    return (\n      <div className=\"file-view-content flex-1 pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nReactDOM.render (\n  <ViewFileDocument />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}