{"version":3,"sources":["view-file-text.js"],"names":["_window$app$pageOptio","window","app","pageOptions","err","fileExt","fileContent","repoID","filePath","fileName","canEditFile","username","FileContent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsx","FileViewTip","className","children","SeafileCodeMirror","this","props","content","readOnly","onChange","updateContent","React","Component","ViewFileText","_React$Component2","_super2","_this","call","setState","needSave","addParticipant","seafileAPI","addFileParticipants","then","res","status","isParticipant","getParticipants","listFileParticipants","participants","data","participant_list","length","every","participant","email","onParticipantsChange","state","isSaving","onSave","bind","_assertThisInitialized","_this2","getUpdateLink","uploadLink","updateFile","toaster","success","gettext","duration","FileView","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/viewFileText.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport PropTypes from 'prop-types';\nimport toaster from './components/toast';\nimport { gettext } from './utils/constants';\nimport FileView from './components/file-view/file-view';\nimport SeafileCodeMirror from './components/seafile-codemirror';\nimport FileViewTip from './components/file-view/file-view-tip';\nimport { seafileAPI } from './utils/seafile-api';\n\nimport './css/text-file-view.css';\nconst {\n  err, fileExt, fileContent, repoID, filePath, fileName, canEditFile, username\n} = window.app.pageOptions;\n\nconst propTypes = {\n  updateContent: PropTypes.func.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nclass FileContent extends React.Component {\n  render() {\n    if (err) {\n      return <FileViewTip />;\n    }\n\n    return (\n      <div className=\"file-view-content flex-1 text-file-view\">\n        <SeafileCodeMirror\n          fileExt={fileExt}\n          value={this.props.content}\n          readOnly={!canEditFile}\n          onChange={this.props.updateContent}\n        />\n      </div>\n    );\n  }\n}\n\nFileContent.propTypes = propTypes;\n\nclass ViewFileText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: fileContent,\n      needSave: false,\n      isSaving: false,\n      participants: [],\n    };\n    this.onSave=this.onSave.bind(this);\n    this.isParticipant = false;\n  }\n\n\n  updateContent = (value) => {\n    this.setState({\n      needSave: true,\n      content: value,\n    });\n  }\n\n  onSave () {\n    if (!this.isParticipant) {\n      this.addParticipant();\n    }\n    let dirPath = '/';\n    return (\n      seafileAPI.getUpdateLink(repoID, dirPath).then((res) => {\n        const uploadLink = res.data;\n        this.setState({\n          isSaving: true\n        });\n        return seafileAPI.updateFile(\n          uploadLink,\n          filePath,\n          fileName,\n          this.state.content\n        ).then(() => {\n          toaster.success(gettext('Successfully saved'), {\n            duration: 2\n          });\n          this.setState({\n            isSaving: false,\n            needSave: false\n          });\n        });\n      })\n    );\n  }\n\n  addParticipant = () => {\n    seafileAPI.addFileParticipants(repoID, filePath, [username]).then((res) => {\n      if (res.status === 200) {\n        this.isParticipant = true;\n        this.getParticipants();\n      }\n    });\n  }\n\n  getParticipants = () => {\n    seafileAPI.listFileParticipants(repoID, filePath).then((res) => {\n      const participants = res.data.participant_list;\n      this.setState({ participants: participants });\n      if (participants.length > 0) {\n        this.isParticipant = participants.every((participant) => {\n          return participant.email == username;\n        });\n      }\n    });\n  }\n\n  onParticipantsChange = () => {\n    this.getParticipants();\n  }\n\n  componentDidMount() {\n    this.getParticipants();\n  }\n\n  render() {\n    return (\n      <FileView\n        content={\n          <FileContent\n            content={this.state.content}\n            updateContent={this.updateContent}\n          />\n        }\n        isSaving={this.state.isSaving}\n        needSave={this.state.needSave}\n        onSave={this.onSave}\n        participants={this.state.participants}\n        onParticipantsChange={this.onParticipantsChange}\n      />\n    );\n  }\n}\n\nReactDom.render(<ViewFileText />, document.getElementById('wrapper'));\n"],"sourceRoot":""}