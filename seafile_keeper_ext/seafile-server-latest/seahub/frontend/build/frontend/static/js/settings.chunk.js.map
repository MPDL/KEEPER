{"version":3,"sources":["components/user-settings/side-nav.js","components/user-settings/user-avatar-form.js","components/user-settings/user-basic-info-form.js","components/user-settings/web-api-auth-token.js","components/dialog/update-webdav-password.js","components/user-settings/webdav-password.js","components/user-settings/language-setting.js","components/user-settings/list-in-address-book.js","components/user-settings/email-notice.js","components/user-settings/two-factor-auth.js","components/dialog/confirm-disconnect-wechat.js","components/user-settings/social-login.js","components/dialog/confirm-disconnect-dingtalk.js","components/user-settings/social-login-dingtalk.js","components/dialog/confirm-delete-account.js","components/user-settings/delete-account.js","settings.js"],"names":["SideNav","props","className","this","data","map","item","index","show","curItemID","href","substr","text","React","Component","window","app","pageOptions","avatarURL","csrfToken","UserAvatarForm","fileInputChange","fileInput","current","files","length","file","fileName","name","lastIndexOf","toaster","danger","gettext","duration","fileExt","toLowerCase","allowedExt","indexOf","errorMsg","replace","join","size","seafileAPI","updateUserAvatar","then","res","setState","avatarSrc","avatar_url","success","catch","error","Utils","getErrorMsg","openFileInput","click","handleMouseOver","isEditShown","handleMouseOut","createRef","form","state","ref","encType","method","action","siteRoot","type","value","onMouseOver","onMouseOut","src","width","height","alt","onChange","onClick","nameLabel","enableUpdateUserInfo","enableUserSetContactEmail","UserBasicInfoForm","handleNameInputChange","e","target","handleContactEmailInputChange","contactEmail","handleSubmit","preventDefault","contact_email","updateUserInfo","userInfo","login_id","loginID","onSubmit","htmlFor","id","disabled","readOnly","WebAPIAuthToken","getAuthToken","getAuthTokenBySession","authToken","token","errMessage","createAuthToken","createAuthTokenBySession","isAuthTokenVisible","deleteAuthToken","deleteAuthTokenBySession","toggleAuthTokenVisible","Fragment","Math","max","UpdateWebdavPassword","submit","btnDisabled","updatePassword","password","handleInputChange","passwd","trim","togglePasswordVisible","isPasswordVisible","generatePassword","randomPassword","possible","i","charAt","floor","random","toggle","centered","isOpen","autoComplete","addonType","color","webdavPasswd","WebdavPassword","updateWebdavSecret","toggleDialog","isDialogOpen","currentLang","langList","LanguageSetting","onSelectChange","selectedItem","location","options","langCode","label","langName","defaultValue","ListInAddressBook","checked","inputChecked","list_in_address_book","toString","fileUpdatesEmailInterval","collaborateEmailInterval","EmailNotice","inputFileUpdatesEmailIntervalChange","parseInt","inputCollaborateEmailIntervalChange","formSubmit","updateEmailNotificationInterval","fileUpdatesOptions","interval","collaborateOptions","defaultDevice","backupTokens","TwoFactorAuthentication","renderEnabled","renderDisabled","ConfirmDisconnectWechat","disconnect","formActionURL","socialConnected","socialNextPage","SocialLogin","confirmDisconnect","isConfirmDialogOpen","encodeURIComponent","ConfirmDisconnectDingtalk","socialConnectedDingtalk","SocialLoginDintalk","ConfirmDeleteAccount","DeleteAccount","confirmDelete","canUpdatePassword","passwordOperationText","enableGetAuthToken","enableWebdavSecret","enableAddressBook","twoFactorAuthEnabled","enableWechatWork","enableDingtalk","enableDeleteAccount","Settings","onSearchedClick","is_dir","url","repo_id","repo_name","path","navigate","repalce","encodePath","open","handleContentScroll","scrollTop","scrolled","sideNavItems","filter","document","getElementById","offsetTop","isPro","getUserInfo","mediaUrl","logoPath","logoHeight","logoWidth","title","siteTitle","onScroll","ReactDOM","render"],"mappings":"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","file":"static/js/settings.chunk.js","sourcesContent":["import React from 'react';\n\nclass SideNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <ul className=\"nav flex-column user-setting-nav\">\n        {this.props.data.map((item, index) => {\n          return item.show ?\n            <li key={index} className={`nav-item ${this.props.curItemID == item.href.substr(1) && 'active'}`}><a className=\"nav-link\" href={item.href}>{item.text}</a></li> : null;\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default SideNav;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport toaster from '../toast';\nimport { Utils } from '../../utils/utils';\n\nconst { avatarURL, csrfToken } = window.app.pageOptions;\n\nclass UserAvatarForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n    this.form = React.createRef();\n    this.state = {\n      avatarSrc: avatarURL,\n      isEditShown: false\n    };\n  }\n\n  fileInputChange = () => {\n\n    // no file selected\n    if (!this.fileInput.current.files.length) {\n      return;\n    }\n\n    const file = this.fileInput.current.files[0];\n    const fileName = file.name;\n\n    // no file extension\n    if (fileName.lastIndexOf('.') == -1) {\n      toaster.danger(gettext('Please choose an image file.'), {\n        duration: 5\n      });\n      return false;\n    }\n\n    const fileExt = fileName.substr((fileName.lastIndexOf('.') + 1)).toLowerCase();\n    const allowedExt = ['jpg','jpeg', 'png', 'gif'];\n    if (allowedExt.indexOf(fileExt) == -1) {\n      const errorMsg = gettext('File extensions can only be {placeholder}.')\n        .replace('{placeholder}', allowedExt.join(', '));\n      toaster.danger(errorMsg, {duration: 5});\n      return false;\n    }\n\n    // file size should be less than 1MB\n    if (file.size > 1024*1024) {\n      const errorMsg = gettext('The file is too large. Allowed maximum size is 1MB.');\n      toaster.danger(errorMsg, {duration: 5});\n      return false;\n    }\n\n    //this.form.current.submit();\n    seafileAPI.updateUserAvatar(file, 160).then((res) => {\n      this.setState({\n        avatarSrc: res.data.avatar_url\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  openFileInput = () => {\n    this.fileInput.current.click();\n  }\n\n  handleMouseOver = () => {\n    this.setState({\n      isEditShown: true\n    });\n  }\n\n  handleMouseOut = () => {\n    this.setState({\n      isEditShown: false\n    });\n  }\n\n  render() {\n    return (\n      <form ref={this.form} className=\"form-group row\" encType=\"multipart/form-data\" method=\"post\" action={`${siteRoot}avatar/add/`}>\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n        <label className=\"col-sm-1 col-form-label\">{gettext('Avatar:')}</label>\n        <div className=\"col-auto position-relative\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n          <img src={this.state.avatarSrc} width=\"80\" height=\"80\" alt=\"\" className=\"user-avatar\" />\n          <input type=\"file\" name=\"avatar\" className=\"d-none\" onChange={this.fileInputChange} ref={this.fileInput} />\n          <span className={`avatar-edit fas fa-edit ${!this.state.isEditShown && 'd-none'}`} onClick={this.openFileInput}></span>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default UserAvatarForm;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\n\nconst {\n  nameLabel,\n  enableUpdateUserInfo,\n  enableUserSetContactEmail\n} = window.app.pageOptions;\n\nclass UserBasicInfoForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const {\n      contact_email,\n      login_id,\n      name\n    } = this.props.userInfo;\n    this.state = {\n      contactEmail: contact_email,\n      loginID: login_id,\n      name: name\n    };\n  }\n\n  handleNameInputChange = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleContactEmailInputChange = (e) => {\n    this.setState({\n      contactEmail: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {\n      name: this.state.name\n    };\n    if (enableUserSetContactEmail) {\n      data.contact_email = this.state.contactEmail;\n    }\n    this.props.updateUserInfo(data);\n  }\n\n  render() {\n    const {\n      contactEmail,\n      loginID,\n      name\n    } = this.state;\n\n    return (\n      <form action=\"\" method=\"post\" onSubmit={this.handleSubmit}>\n\n        <div className=\"form-group row\">\n          <label className=\"col-sm-1 col-form-label\" htmlFor=\"name\">{nameLabel}</label>\n          <div className=\"col-sm-5\">\n            <input className=\"form-control\" id=\"name\" type=\"text\" name=\"nickname\" value={name} disabled={!enableUpdateUserInfo} onChange={this.handleNameInputChange} />\n          </div>\n        </div>\n\n        {loginID && (\n          <div className=\"form-group row\">\n            <label className=\"col-sm-1 col-form-label\" htmlFor=\"user-name\">{gettext('Username:')}</label>\n            <div className=\"col-sm-5\">\n              <input className=\"form-control\" id=\"user-name\" type=\"text\" name=\"username\" value={loginID} disabled={true} readOnly={true} />\n            </div>\n            <p className=\"col-sm-5 m-0 input-tip\">{gettext('You can use this field at login.')}</p>\n          </div>\n        )}\n\n        {(contactEmail || enableUserSetContactEmail) && (\n          <div className=\"form-group row\">\n            <label className=\"col-sm-1 col-form-label\" htmlFor=\"contact-email\">{gettext('Contact Email:')}</label>\n            <div className=\"col-sm-5\">\n              <input className=\"form-control\" id=\"contact-email\" type=\"text\" name=\"contact_email\" value={contactEmail} disabled={!enableUserSetContactEmail} readOnly={!enableUserSetContactEmail} onChange={this.handleContactEmailInputChange} />\n            </div>\n            <p className=\"col-sm-5 m-0 input-tip\">{gettext('Your notifications will be sent to this email.')}</p>\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"btn btn-outline-primary offset-sm-1\" disabled={!enableUpdateUserInfo}>{gettext('Submit')}</button>\n      </form>\n    );\n  }\n}\n\nexport default UserBasicInfoForm;\n","import React from 'react';\nimport ModalPortal from '../modal-portal';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nclass WebAPIAuthToken extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      authToken: '',\n      isAuthTokenVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getAuthToken();\n  }\n\n  getAuthToken = () => {\n    seafileAPI.getAuthTokenBySession().then((res) => {\n      this.setState({\n        authToken: res.data.token\n      });\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  createAuthToken = () => {\n    seafileAPI.createAuthTokenBySession().then((res) => {\n      this.setState({\n        authToken: res.data.token,\n        isAuthTokenVisible: false\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  deleteAuthToken = () => {\n    seafileAPI.deleteAuthTokenBySession().then((res) => {\n      this.setState({\n        authToken: '',\n        isAuthTokenVisible: false\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  toggleAuthTokenVisible = () => {\n    this.setState({\n      isAuthTokenVisible: !this.state.isAuthTokenVisible\n    });\n  }\n\n  render() {\n    const { authToken, isAuthTokenVisible } = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"get-auth-token\" className=\"setting-item\">\n          <h3 className=\"setting-item-heading\">{gettext('Web API Auth Token')}</h3>\n          {authToken ? (\n            <React.Fragment>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"m-0 mr-2\">{gettext('Token:')}</label>\n                <input className=\"border-0 mr-1\" type=\"text\" value={isAuthTokenVisible ? authToken : '****************************************'} readOnly={true} size={Math.max(authToken.length, 10)} />\n                <span onClick={this.toggleAuthTokenVisible} className={`eye-icon fas ${this.state.isAuthTokenVisible ? 'fa-eye': 'fa-eye-slash'}`}></span>\n              </div>\n              <button className=\"btn btn-outline-primary mt-2\" onClick={this.deleteAuthToken}>{gettext('Delete')}</button>\n            </React.Fragment>\n          ) : (\n            <button className=\"btn btn-outline-primary\" onClick={this.createAuthToken}>{gettext('Generate')}</button>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WebAPIAuthToken;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  password: PropTypes.string.isRequired,\n  updatePassword: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass UpdateWebdavPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: this.props.password,\n      isPasswordVisible: false,\n      btnDisabled: false\n    };\n  }\n\n  submit = () => {\n    this.setState({\n      btnDisabled: true\n    });\n    this.props.updatePassword(this.state.password);\n  }\n\n  handleInputChange = (e) => {\n    let passwd = e.target.value.trim();\n    this.setState({password: passwd});\n  }\n\n  togglePasswordVisible = () => {\n    this.setState({\n      isPasswordVisible: !this.state.isPasswordVisible\n    });\n  }\n\n  generatePassword = () => {\n    let randomPassword = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 8; i++) {\n      randomPassword += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    this.setState({\n      password: randomPassword,\n      isPasswordVisible: true\n    });\n  }\n\n  render() {\n    const { toggle } = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('WebDav Password')}</ModalHeader>\n        <ModalBody>\n          <InputGroup className=\"\">\n            <Input type={this.state.isPasswordVisible ? 'text' : 'password'} value={this.state.password} onChange={this.handleInputChange} autoComplete=\"new-password\"/>\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={this.togglePasswordVisible}><i className={`fas ${this.state.isPasswordVisible ? 'fa-eye': 'fa-eye-slash'}`}></i></Button>\n              <Button onClick={this.generatePassword}><i className=\"fas fa-magic\"></i></Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.submit} disabled={this.state.btnDisabled}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nUpdateWebdavPassword.propTypes = propTypes;\n\nexport default UpdateWebdavPassword;\n","import React from 'react';\nimport ModalPortal from '../modal-portal';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\nimport UpdateWebdavPassword from '../dialog/update-webdav-password';\n\nconst { webdavPasswd } = window.app.pageOptions;\n\nclass WebdavPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: webdavPasswd,\n      isPasswordVisible: false,\n      isDialogOpen: false\n    };\n  }\n\n  togglePasswordVisible = () => {\n    this.setState({\n      isPasswordVisible: !this.state.isPasswordVisible\n    });\n  }\n\n  updatePassword = (password) => {\n    seafileAPI.updateWebdavSecret(password).then((res) => {\n      this.toggleDialog();\n      this.setState({\n        password: password\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.toggleDialog();\n      toaster.danger(errorMsg);\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isDialogOpen: !this.state.isDialogOpen\n    });\n  }\n\n  render() {\n    const { password, isPasswordVisible } = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"update-webdav-passwd\" className=\"setting-item\">\n          <h3 className=\"setting-item-heading\">{gettext('WebDav Password')}</h3>\n          {password ? (\n            <React.Fragment>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"m-0 mr-2\">{gettext('Password:')}</label>\n                <input className=\"border-0 mr-1\" type=\"text\" value={isPasswordVisible ? password : '**********'} readOnly={true} size={Math.max(password.length, 10)} />\n                <span onClick={this.togglePasswordVisible} className={`eye-icon fas ${this.state.isPasswordVisible ? 'fa-eye': 'fa-eye-slash'}`}></span>\n              </div>\n              <button className=\"btn btn-outline-primary mt-2\" onClick={this.toggleDialog}>{gettext('Update')}</button>\n            </React.Fragment>\n          ) : (\n            <button className=\"btn btn-outline-primary\" onClick={this.toggleDialog}>{gettext('Set Password')}</button>\n          )}\n        </div>\n        {this.state.isDialogOpen && (\n          <ModalPortal>\n            <UpdateWebdavPassword\n              password={this.state.password}\n              updatePassword={this.updatePassword}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WebdavPassword;\n","import React from 'react';\nimport Select from 'react-select';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  currentLang, langList\n} = window.app.pageOptions;\n\nclass LanguageSetting extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onSelectChange = (selectedItem) => {\n    // selectedItem: {value: '...', label: '...'}\n    location.href = `${siteRoot}i18n/?lang=${selectedItem.value}`;\n  }\n\n  render() {\n    const options = langList.map((item, index) => {\n      return {\n        value: item.langCode,\n        label: item.langName\n      };\n    });\n\n    return (\n      <div className=\"setting-item\" id=\"lang-setting\">\n        <h3 className=\"setting-item-heading\">{gettext('Language Setting')}</h3>\n        <Select\n          className='language-selector'\n          defaultValue={{value: currentLang.langCode, label: currentLang.langName}}\n          options={options}\n          onChange={this.onSelectChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LanguageSetting;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\n\nclass ListInAddressBook extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const { list_in_address_book } = this.props.userInfo;\n    this.state = {\n      inputChecked: list_in_address_book\n    };\n  }\n\n  handleInputChange = (e) => {\n    const checked = e.target.checked;\n    this.setState({\n      inputChecked: checked\n    });\n    this.props.updateUserInfo({\n      list_in_address_book: checked.toString()\n    });\n  }\n\n  render() {\n    const { inputChecked } = this.state;\n\n    return (\n      <div className=\"setting-item\" id=\"list-in-address-book\">\n        <h3 className=\"setting-item-heading\">{gettext('Global Address Book')}</h3>\n        <div className=\"d-flex align-items-center\">\n          <input type=\"checkbox\" id=\"list-in-address-book\" name=\"list_in_address_book\" className=\"mr-1\" checked={inputChecked} onChange={this.handleInputChange} />\n          <label htmlFor=\"list-in-address-book\" className=\"m-0\">{gettext('List your account in global address book, so that others can find you by typing your name.')}</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListInAddressBook;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst {\n  fileUpdatesEmailInterval,\n  collaborateEmailInterval\n} = window.app.pageOptions;\n\nclass EmailNotice extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // interval: in seconds\n    this.fileUpdatesOptions = [\n      {interval: 0, text: gettext('Don\\'t send emails')},\n      {interval: 3600, text: gettext('Per hour')},\n      {interval: 14400, text: gettext('Per 4 hours')},\n      {interval: 86400, text: gettext('Per day')},\n      {interval: 604800, text: gettext('Per week')}\n    ];\n\n    this.collaborateOptions = [\n      {interval: 0, text: gettext('Don\\'t send emails')},\n      {interval: 3600, text: gettext('Per hour') + ' (' + gettext('If notifications have not been read within one hour, they will be sent to your mailbox.') + ')'}\n    ];\n\n    this.state = {\n      fileUpdatesEmailInterval: fileUpdatesEmailInterval,\n      collaborateEmailInterval: collaborateEmailInterval\n    };\n  }\n\n  inputFileUpdatesEmailIntervalChange = (e) => {\n    if (e.target.checked) {\n      this.setState({\n        fileUpdatesEmailInterval: parseInt(e.target.value)\n      });\n    }\n  }\n\n  inputCollaborateEmailIntervalChange = (e) => {\n    if (e.target.checked) {\n      this.setState({\n        collaborateEmailInterval: parseInt(e.target.value)\n      });\n    }\n  }\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    let { fileUpdatesEmailInterval, collaborateEmailInterval } = this.state;\n    seafileAPI.updateEmailNotificationInterval(fileUpdatesEmailInterval, collaborateEmailInterval).then((res) => {\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  render() {\n    const { fileUpdatesEmailInterval, collaborateEmailInterval } = this.state;\n    return (\n      <div className=\"setting-item\" id=\"email-notice\">\n        <h3 className=\"setting-item-heading\">{gettext('Email Notification')}</h3>\n        <h6 className=\"\">{gettext('Notifications of file changes')}</h6>\n        <p className=\"mb-1\">{gettext('The list of added, deleted and modified files will be sent to your mailbox.')}</p>\n        <form method=\"post\" action=\"\" id=\"set-email-notice-interval-form\" onSubmit={this.formSubmit}>\n          {this.fileUpdatesOptions.map((item, index) => {\n            return (\n              <React.Fragment key={`file-updates-${index}`}>\n                <input type=\"radio\" name=\"interval\" value={item.interval} className=\"align-middle\" id={`file-updates-interval-option${index + 1}`} checked={fileUpdatesEmailInterval == item.interval} onChange={this.inputFileUpdatesEmailIntervalChange} />\n                <label className=\"align-middle m-0 ml-2\" htmlFor={`interval-option${index + 1}`}>{item.text}</label>\n                <br />\n              </React.Fragment>\n            );\n          })}\n        </form>\n\n        <h6 className=\"mt-4\">{gettext('Notifications of collaboration')}</h6>\n        <p className=\"mb-1\">{gettext('Whether the notifications of collaboration such as sharing library or joining group should be sent to your mailbox.')}</p>\n        <form method=\"post\" action=\"\" id=\"set-email-notice-interval-form\" onSubmit={this.formSubmit}>\n          {this.collaborateOptions.map((item, index) => {\n            return (\n              <React.Fragment key={`collaborate-${index}`}>\n                <input type=\"radio\" name=\"interval\" value={item.interval} className=\"align-middle\" id={`collaborate-interval-option${index + 1}`} checked={collaborateEmailInterval == item.interval} onChange={this.inputCollaborateEmailIntervalChange} />\n                <label className=\"align-middle m-0 ml-2\" htmlFor={`interval-option${index + 1}`}>{item.text}</label>\n                <br />\n              </React.Fragment>\n            );\n          })}\n        </form>\n        <button type=\"submit\" className=\"btn btn-outline-primary mt-2\" onClick={this.formSubmit}>{gettext('Submit')}</button>\n      </div>\n    );\n  }\n}\n\nexport default EmailNotice;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  defaultDevice,\n  backupTokens\n} = window.app.pageOptions;\n\nclass TwoFactorAuthentication extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderEnabled = () => {\n    return (\n      <React.Fragment>\n        <p className=\"mb-2\">{gettext('Status: enabled')}</p>\n        <a className=\"btn btn-outline-primary mb-4\" href={`${siteRoot}profile/two_factor_authentication/disable/`}>\n          {gettext('Disable Two-Factor Authentication')}</a>\n        <p className=\"mb-2\">\n          {gettext('If you don\\'t have any device with you, you can access your account using backup codes.')}\n          {backupTokens == 1 ? gettext('You have only one backup code remaining.') :\n            gettext('You have {num} backup codes remaining.').replace('{num}', backupTokens)}\n        </p>\n        <a href={`${siteRoot}profile/two_factor_authentication/backup/tokens/`}\n          className=\"btn btn-outline-primary\">{gettext('Show Codes')}</a>\n      </React.Fragment>\n    );\n  }\n\n  renderDisabled = () => {\n    return (\n      <React.Fragment>\n        <p className=\"mb-2\">{gettext('Two-factor authentication is not enabled for your account. Enable two-factor authentication for enhanced account security.')}</p>\n        <a href={`${siteRoot}profile/two_factor_authentication/setup/`} className=\"btn btn-outline-primary\">\n          {gettext('Enable Two-Factor Authentication')}</a>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"setting-item\" id=\"two-factor-auth\">\n        <h3 className=\"setting-item-heading\">{gettext('Two-Factor Authentication')}</h3>\n        {defaultDevice ? this.renderEnabled() : this.renderDisabled()}\n      </div>\n    );\n  }\n}\n\nexport default TwoFactorAuthentication;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDisconnectWechat extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  disconnect = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Disconnect')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Are you sure you want to disconnect?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.disconnect}>{gettext('Disconnect')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDisconnectWechat.propTypes = propTypes;\n\nexport default ConfirmDisconnectWechat;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDisconnectWechat from '../dialog/confirm-disconnect-wechat';\n\nconst {\n  csrfToken,\n  langCode,\n  socialConnected,\n  socialNextPage\n} = window.app.pageOptions;\n\nclass SocialLogin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDisconnect = (e) => {\n    e.preventDefault();\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"social-auth\">\n          <h3 className=\"setting-item-heading\">{gettext('Social Login')}</h3>\n          <p className=\"mb-2\">{langCode == 'zh-cn' ? '企业微信': 'WeChat Work'}</p>\n          {socialConnected ?\n            <a href=\"#\" className=\"btn btn-outline-primary\" onClick={this.confirmDisconnect}>{gettext('Disconnect')}</a> :\n            <a href={`${siteRoot}work-weixin/oauth-connect/?next=${encodeURIComponent(socialNextPage)}`} className=\"btn btn-outline-primary\">{gettext('Connect')}</a>\n          }\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDisconnectWechat\n              formActionURL={`${siteRoot}work-weixin/oauth-disconnect/?next=${encodeURIComponent(socialNextPage)}`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialLogin;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDisconnectDingtalk extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  disconnect = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Disconnect')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Are you sure you want to disconnect?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.disconnect}>{gettext('Disconnect')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDisconnectDingtalk.propTypes = propTypes;\n\nexport default ConfirmDisconnectDingtalk;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDisconnectDingtalk from '../dialog/confirm-disconnect-dingtalk';\n\nconst {\n  csrfToken,\n  langCode,\n  socialConnectedDingtalk,\n  socialNextPage\n} = window.app.pageOptions;\n\nclass SocialLoginDintalk extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDisconnect = (e) => {\n    e.preventDefault();\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"social-auth\">\n          <h3 className=\"setting-item-heading\">{gettext('Social Login')}</h3>\n          <p className=\"mb-2\">{langCode == 'zh-cn' ? '钉钉': 'Dingtalk'}</p>\n          {socialConnectedDingtalk ?\n            <a href=\"#\" className=\"btn btn-outline-primary\" onClick={this.confirmDisconnect}>{gettext('Disconnect')}</a> :\n            <a href={`${siteRoot}dingtalk/connect/?next=${encodeURIComponent(socialNextPage)}`} className=\"btn btn-outline-primary\">{gettext('Connect')}</a>\n          }\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDisconnectDingtalk\n              formActionURL={`${siteRoot}dingtalk/disconnect/?next=${encodeURIComponent(socialNextPage)}`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialLoginDintalk;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDeleteAccount extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  action = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Delete Account')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Really want to delete your account?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.action}>{gettext('Delete')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDeleteAccount.propTypes = propTypes;\n\nexport default ConfirmDeleteAccount;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDeleteAccount from '../dialog/confirm-delete-account';\n\nconst {\n  csrfToken\n} = window.app.pageOptions;\n\nclass DeleteAccount extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDelete = (e) => {\n    e.preventDefault();\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"del-account\">\n          <h3 className=\"setting-item-heading\">{gettext('Delete Account')}</h3>\n          <p className=\"mb-2\">{gettext('This operation will not be reverted. Please think twice!')}</p>\n          <button className=\"btn btn-outline-primary\" onClick={this.confirmDelete}>{gettext('Delete')}</button>\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDeleteAccount\n              formActionURL={`${siteRoot}profile/delete/`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DeleteAccount;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { navigate } from '@reach/router';\nimport { Utils } from './utils/utils';\nimport { isPro, gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport toaster from './components/toast';\nimport CommonToolbar from './components/toolbar/common-toolbar';\nimport SideNav from './components/user-settings/side-nav';\nimport UserAvatarForm from './components/user-settings/user-avatar-form';\nimport UserBasicInfoForm from './components/user-settings/user-basic-info-form';\nimport WebAPIAuthToken from './components/user-settings/web-api-auth-token';\nimport WebdavPassword from './components/user-settings/webdav-password';\nimport LanguageSetting from './components/user-settings/language-setting';\nimport ListInAddressBook from './components/user-settings/list-in-address-book';\nimport EmailNotice from './components/user-settings/email-notice';\nimport TwoFactorAuthentication from './components/user-settings/two-factor-auth';\nimport SocialLogin from './components/user-settings/social-login';\nimport SocialLoginDingtalk from './components/user-settings/social-login-dingtalk';\nimport DeleteAccount from './components/user-settings/delete-account';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/user-settings.css';\n\nconst {\n  canUpdatePassword, passwordOperationText,\n  enableGetAuthToken,\n  enableWebdavSecret,\n  enableAddressBook,\n  twoFactorAuthEnabled,\n  enableWechatWork,\n  enableDingtalk,\n  enableDeleteAccount\n} = window.app.pageOptions;\n\nclass Settings extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sideNavItems = [\n      {show: true, href: '#user-basic-info', text: gettext('Profile')},\n      {show: canUpdatePassword, href: '#update-user-passwd', text: gettext('Password')},\n      {show: enableGetAuthToken, href: '#get-auth-token', text: gettext('Web API Auth Token')},\n      {show: enableWebdavSecret, href: '#update-webdav-passwd', text: gettext('WebDav Password')},\n      {show: enableAddressBook, href: '#list-in-address-book', text: gettext('Global Address Book')},\n      {show: true, href: '#lang-setting', text: gettext('Language')},\n      {show: isPro, href: '#email-notice', text: gettext('Email Notification')},\n      {show: twoFactorAuthEnabled, href: '#two-factor-auth', text: gettext('Two-Factor Authentication')},\n      {show: enableWechatWork, href: '#social-auth', text: gettext('Social Login')},\n      {show: enableDingtalk, href: '#social-auth', text: gettext('Social Login')},\n      {show: enableDeleteAccount, href: '#del-account', text: gettext('Delete Account')},\n    ];\n\n    this.state = {\n      curItemID: this.sideNavItems[0].href.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getUserInfo().then((res) => {\n      this.setState({\n        userInfo: res.data\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  updateUserInfo = (data) => {\n    seafileAPI.updateUserInfo(data).then((res) => {\n      this.setState({\n        userInfo: res.data\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onSearchedClick = (selectedItem) => {\n    if (selectedItem.is_dir === true) {\n      let url = siteRoot + 'library/' + selectedItem.repo_id + '/' + selectedItem.repo_name + selectedItem.path;\n      navigate(url, {repalce: true});\n    } else {\n      let url = siteRoot + 'lib/' + selectedItem.repo_id + '/file' + Utils.encodePath(selectedItem.path);\n      let newWindow = window.open('about:blank');\n      newWindow.location.href = url;\n    }\n  }\n\n  handleContentScroll = (e) => {\n    const scrollTop = e.target.scrollTop;\n    const scrolled = this.sideNavItems.filter((item, index) => {\n      return item.show && document.getElementById(item.href.substr(1)).offsetTop - 45 < scrollTop;\n    });\n    if (scrolled.length) {\n      this.setState({\n        curItemID: scrolled[scrolled.length -1].href.substr(1)\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <CommonToolbar onSearchedClick={this.onSearchedClick} />\n          </div>\n          <div className=\"flex-auto d-flex o-hidden\">\n            <div className=\"side-panel o-auto\">\n              <SideNav data={this.sideNavItems} curItemID={this.state.curItemID} />\n            </div>\n            <div className=\"main-panel d-flex flex-column\">\n              <h2 className=\"heading\">{gettext('Settings')}</h2>\n              <div className=\"content position-relative\" onScroll={this.handleContentScroll}>\n                <div id=\"user-basic-info\" className=\"setting-item\">\n                  <h3 className=\"setting-item-heading\">{gettext('Profile Setting')}</h3>\n                  <UserAvatarForm  />\n                  {this.state.userInfo && <UserBasicInfoForm userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} />}\n                </div>\n                {canUpdatePassword &&\n                <div id=\"update-user-passwd\" className=\"setting-item\">\n                  <h3 className=\"setting-item-heading\">{gettext('Password')}</h3>\n                  <a href={`${siteRoot}accounts/password/change/`} className=\"btn btn-outline-primary\">{passwordOperationText}</a>\n                </div>\n                }\n\n                {enableGetAuthToken && <WebAPIAuthToken />}\n                {enableWebdavSecret && <WebdavPassword />}\n                {enableAddressBook && this.state.userInfo &&\n                  <ListInAddressBook userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} />}\n                <LanguageSetting />\n                {isPro && <EmailNotice />}\n                {twoFactorAuthEnabled && <TwoFactorAuthentication />}\n                {enableWechatWork && <SocialLogin />}\n                {enableDingtalk && <SocialLoginDingtalk />}\n                {enableDeleteAccount && <DeleteAccount />}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(\n  <Settings />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}