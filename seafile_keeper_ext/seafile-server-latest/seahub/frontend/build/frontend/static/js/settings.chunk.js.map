{"version":3,"sources":["components/user-settings/side-nav.js","components/user-settings/user-avatar-form.js","components/user-settings/user-basic-info-form.js","components/user-settings/web-api-auth-token.js","components/dialog/update-webdav-password.js","components/user-settings/webdav-password.js","components/user-settings/language-setting.js","components/user-settings/list-in-address-book.js","components/user-settings/email-notice.js","components/user-settings/two-factor-auth.js","components/dialog/confirm-disconnect-wechat.js","components/user-settings/social-login.js","components/dialog/confirm-disconnect-dingtalk.js","components/user-settings/social-login-dingtalk.js","components/dialog/confirm-delete-account.js","components/user-settings/delete-account.js","settings.js"],"names":["SideNav","props","className","this","data","map","item","index","show","curItemID","href","substr","text","React","Component","window","app","pageOptions","avatarURL","csrfToken","UserAvatarForm","fileInputChange","fileInput","current","files","length","file","fileName","name","lastIndexOf","toaster","danger","gettext","duration","fileExt","toLowerCase","allowedExt","indexOf","errorMsg","replace","join","size","seafileAPI","updateUserAvatar","then","res","setState","avatarSrc","avatar_url","success","catch","error","Utils","getErrorMsg","openFileInput","click","handleMouseOver","isEditShown","handleMouseOut","onEditIconKeyDown","e","key","target","createRef","form","state","ref","encType","method","action","siteRoot","type","value","onMouseOver","onMouseOut","onFocus","tabIndex","src","width","height","alt","onChange","onClick","role","aria-label","onKeyDown","nameLabel","enableUpdateUserInfo","enableUserSetContactEmail","UserBasicInfoForm","handleNameInputChange","handleContactEmailInputChange","contactEmail","handleSubmit","preventDefault","contact_email","updateUserInfo","userInfo","login_id","loginID","onSubmit","htmlFor","id","disabled","readOnly","WebAPIAuthToken","getAuthToken","getAuthTokenBySession","authToken","token","errMessage","createAuthToken","createAuthTokenBySession","isAuthTokenVisible","deleteAuthToken","deleteAuthTokenBySession","toggleAuthTokenVisible","onIconKeyDown","Fragment","Math","max","webdavSecretMinLength","webdavSecretStrengthLevel","UpdateWebdavPassword","submit","password","errMsg","getStrengthLevel","btnDisabled","updatePassword","trim","handleInputChange","togglePasswordVisible","isPasswordVisible","generatePassword","randomPassword","toggle","passwordTip","centered","isOpen","autoComplete","addonType","color","webdavPasswd","WebdavPassword","updateWebdavSecret","toggleDialog","isDialogOpen","currentLang","langList","LanguageSetting","onSelectChange","selectedItem","location","options","langCode","label","langName","defaultValue","ListInAddressBook","checked","inputChecked","list_in_address_book","toString","fileUpdatesEmailInterval","collaborateEmailInterval","EmailNotice","inputFileUpdatesEmailIntervalChange","parseInt","inputCollaborateEmailIntervalChange","formSubmit","updateEmailNotificationInterval","fileUpdatesOptions","interval","collaborateOptions","defaultDevice","backupTokens","TwoFactorAuthentication","renderEnabled","renderDisabled","ConfirmDisconnectWechat","disconnect","formActionURL","socialConnected","socialNextPage","SocialLogin","confirmDisconnect","isConfirmDialogOpen","encodeURIComponent","ConfirmDisconnectDingtalk","socialConnectedDingtalk","SocialLoginDintalk","ConfirmDeleteAccount","DeleteAccount","confirmDelete","canUpdatePassword","passwordOperationText","enableGetAuthToken","enableWebdavSecret","enableAddressBook","twoFactorAuthEnabled","enableWechatWork","enableDingtalk","enableDeleteAccount","Settings","onSearchedClick","is_dir","url","repo_id","repo_name","path","navigate","repalce","encodePath","open","handleContentScroll","scrollTop","scrolled","sideNavItems","filter","document","getElementById","offsetTop","isPro","getUserInfo","mediaUrl","logoPath","logoHeight","logoWidth","title","siteTitle","onScroll","ReactDOM","render"],"mappings":"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","file":"static/js/settings.chunk.js","sourcesContent":["import React from 'react';\n\nclass SideNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <ul className=\"nav flex-column user-setting-nav\">\n        {this.props.data.map((item, index) => {\n          return item.show ?\n            <li key={index} className={`nav-item ${this.props.curItemID == item.href.substr(1) && 'active'}`}><a className=\"nav-link\" href={item.href}>{item.text}</a></li> : null;\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default SideNav;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport toaster from '../toast';\nimport { Utils } from '../../utils/utils';\n\nconst { avatarURL, csrfToken } = window.app.pageOptions;\n\nclass UserAvatarForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n    this.form = React.createRef();\n    this.state = {\n      avatarSrc: avatarURL,\n      isEditShown: false\n    };\n  }\n\n  fileInputChange = () => {\n\n    // no file selected\n    if (!this.fileInput.current.files.length) {\n      return;\n    }\n\n    const file = this.fileInput.current.files[0];\n    const fileName = file.name;\n\n    // no file extension\n    if (fileName.lastIndexOf('.') == -1) {\n      toaster.danger(gettext('Please choose an image file.'), {\n        duration: 5\n      });\n      return false;\n    }\n\n    const fileExt = fileName.substr((fileName.lastIndexOf('.') + 1)).toLowerCase();\n    const allowedExt = ['jpg','jpeg', 'png', 'gif'];\n    if (allowedExt.indexOf(fileExt) == -1) {\n      const errorMsg = gettext('File extensions can only be {placeholder}.')\n        .replace('{placeholder}', allowedExt.join(', '));\n      toaster.danger(errorMsg, {duration: 5});\n      return false;\n    }\n\n    // file size should be less than 1MB\n    if (file.size > 1024*1024) {\n      const errorMsg = gettext('The file is too large. Allowed maximum size is 1MB.');\n      toaster.danger(errorMsg, {duration: 5});\n      return false;\n    }\n\n    //this.form.current.submit();\n    seafileAPI.updateUserAvatar(file, 160).then((res) => {\n      this.setState({\n        avatarSrc: res.data.avatar_url\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  openFileInput = () => {\n    this.fileInput.current.click();\n  }\n\n  handleMouseOver = () => {\n    this.setState({\n      isEditShown: true\n    });\n  }\n\n  handleMouseOut = () => {\n    this.setState({\n      isEditShown: false\n    });\n  }\n\n  onEditIconKeyDown = (e) => {\n    if (e.key == 'Enter' || e.key == 'Space') {\n      e.target.click();\n    }\n  }\n\n  render() {\n    return (\n      <form ref={this.form} className=\"form-group row\" encType=\"multipart/form-data\" method=\"post\" action={`${siteRoot}avatar/add/`}>\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n        <label className=\"col-sm-1 col-form-label\">{gettext('Avatar:')}</label>\n        <div className=\"col-auto position-relative\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver} tabIndex=\"0\">\n          <img src={this.state.avatarSrc} width=\"80\" height=\"80\" alt=\"\" className=\"user-avatar\" />\n          <input type=\"file\" name=\"avatar\" className=\"d-none\" onChange={this.fileInputChange} ref={this.fileInput} />\n          <span className={`avatar-edit fas fa-edit ${!this.state.isEditShown && 'd-none'}`} onClick={this.openFileInput} role=\"button\" aria-label={gettext('Edit')} tabIndex=\"0\" onKeyDown={this.onEditIconKeyDown}></span>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default UserAvatarForm;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\n\nconst {\n  nameLabel,\n  enableUpdateUserInfo,\n  enableUserSetContactEmail\n} = window.app.pageOptions;\n\nclass UserBasicInfoForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const {\n      contact_email,\n      login_id,\n      name\n    } = this.props.userInfo;\n    this.state = {\n      contactEmail: contact_email,\n      loginID: login_id,\n      name: name\n    };\n  }\n\n  handleNameInputChange = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleContactEmailInputChange = (e) => {\n    this.setState({\n      contactEmail: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {\n      name: this.state.name\n    };\n    if (enableUserSetContactEmail) {\n      data.contact_email = this.state.contactEmail;\n    }\n    this.props.updateUserInfo(data);\n  }\n\n  render() {\n    const {\n      contactEmail,\n      loginID,\n      name\n    } = this.state;\n\n    return (\n      <form action=\"\" method=\"post\" onSubmit={this.handleSubmit}>\n\n        <div className=\"form-group row\">\n          <label className=\"col-sm-1 col-form-label\" htmlFor=\"name\">{nameLabel}</label>\n          <div className=\"col-sm-5\">\n            <input className=\"form-control\" id=\"name\" type=\"text\" name=\"nickname\" value={name} disabled={!enableUpdateUserInfo} onChange={this.handleNameInputChange} />\n          </div>\n        </div>\n\n        {loginID && (\n          <div className=\"form-group row\">\n            <label className=\"col-sm-1 col-form-label\" htmlFor=\"user-name\">{gettext('Username:')}</label>\n            <div className=\"col-sm-5\">\n              <input className=\"form-control\" id=\"user-name\" type=\"text\" name=\"username\" value={loginID} disabled={true} readOnly={true} />\n            </div>\n            <p className=\"col-sm-5 m-0 input-tip\">{gettext('You can use this field at login.')}</p>\n          </div>\n        )}\n\n        {(contactEmail || enableUserSetContactEmail) && (\n          <div className=\"form-group row\">\n            <label className=\"col-sm-1 col-form-label\" htmlFor=\"contact-email\">{gettext('Contact Email:')}</label>\n            <div className=\"col-sm-5\">\n              <input className=\"form-control\" id=\"contact-email\" type=\"text\" name=\"contact_email\" value={contactEmail} disabled={!enableUserSetContactEmail} readOnly={!enableUserSetContactEmail} onChange={this.handleContactEmailInputChange} />\n            </div>\n            <p className=\"col-sm-5 m-0 input-tip\">{gettext('Your notifications will be sent to this email.')}</p>\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"btn btn-outline-primary offset-sm-1\" disabled={!enableUpdateUserInfo}>{gettext('Submit')}</button>\n      </form>\n    );\n  }\n}\n\nexport default UserBasicInfoForm;\n","import React from 'react';\nimport ModalPortal from '../modal-portal';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nclass WebAPIAuthToken extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      authToken: '',\n      isAuthTokenVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getAuthToken();\n  }\n\n  getAuthToken = () => {\n    seafileAPI.getAuthTokenBySession().then((res) => {\n      this.setState({\n        authToken: res.data.token\n      });\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  createAuthToken = () => {\n    seafileAPI.createAuthTokenBySession().then((res) => {\n      this.setState({\n        authToken: res.data.token,\n        isAuthTokenVisible: false\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  deleteAuthToken = () => {\n    seafileAPI.deleteAuthTokenBySession().then((res) => {\n      this.setState({\n        authToken: '',\n        isAuthTokenVisible: false\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  toggleAuthTokenVisible = () => {\n    this.setState({\n      isAuthTokenVisible: !this.state.isAuthTokenVisible\n    });\n  }\n\n  onIconKeyDown = (e) => {\n    if (e.key == 'Enter' || e.key == 'Space') {\n      e.target.click();\n    }\n  }\n\n  render() {\n    const { authToken, isAuthTokenVisible } = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"get-auth-token\" className=\"setting-item\">\n          <h3 className=\"setting-item-heading\">{gettext('Web API Auth Token')}</h3>\n          {authToken ? (\n            <React.Fragment>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"m-0 mr-2\" htmlFor=\"token\">{gettext('Token:')}</label>\n                <input id=\"token\" className=\"border-0 mr-1\" type=\"text\" value={isAuthTokenVisible ? authToken : '****************************************'} readOnly={true} size={Math.max(authToken.length, 10)} />\n                <span tabIndex=\"0\" role=\"button\" aria-label={isAuthTokenVisible ? gettext('Hide') : gettext('Show')} onKeyDown={this.onIconKeyDown} onClick={this.toggleAuthTokenVisible} className={`eye-icon fas ${this.state.isAuthTokenVisible ? 'fa-eye': 'fa-eye-slash'}`}></span>\n              </div>\n              <button className=\"btn btn-outline-primary mt-2\" onClick={this.deleteAuthToken}>{gettext('Delete')}</button>\n            </React.Fragment>\n          ) : (\n            <button className=\"btn btn-outline-primary\" onClick={this.createAuthToken}>{gettext('Generate')}</button>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WebAPIAuthToken;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Alert, Button, Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  password: PropTypes.string.isRequired,\n  updatePassword: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nconst { webdavSecretMinLength, webdavSecretStrengthLevel } = window.app.pageOptions;\n\nclass UpdateWebdavPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: this.props.password,\n      isPasswordVisible: false,\n      btnDisabled: false,\n      errMsg: ''\n    };\n  }\n\n  submit = () => {\n\n    if (this.state.password.length === 0) {\n      this.setState({errMsg: gettext('Please enter a password.')});\n      return false;\n    }\n    if (this.state.password.length < webdavSecretMinLength) {\n      this.setState({errMsg: gettext('The password is too short.')});\n      return false;\n    }\n\n    if (Utils.getStrengthLevel(this.state.password) < webdavSecretStrengthLevel) {\n      this.setState({errMsg: gettext('The password is too weak. It should include at least {passwordStrengthLevel} of the following: number, upper letter, lower letter and other symbols.').replace('{passwordStrengthLevel}', webdavSecretStrengthLevel)});\n      return false;\n    }\n\n    this.setState({\n      btnDisabled: true\n    });\n\n    this.props.updatePassword(this.state.password.trim());\n  }\n\n  handleInputChange = (e) => {\n    this.setState({password: e.target.value});\n  }\n\n  togglePasswordVisible = () => {\n    this.setState({\n      isPasswordVisible: !this.state.isPasswordVisible\n    });\n  }\n\n  generatePassword = () => {\n    let randomPassword = Utils.generatePassword(webdavSecretMinLength);\n    this.setState({\n      password: randomPassword,\n      isPasswordVisible: true\n    });\n  }\n\n  render() {\n    const { toggle } = this.props;\n    const passwordTip = gettext('(at least {passwordMinLength} characters and includes {passwordStrengthLevel} of the following: number, upper letter, lower letter and other symbols)').replace('{passwordMinLength}', webdavSecretMinLength).replace('{passwordStrengthLevel}', webdavSecretStrengthLevel);\n\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('WebDav Password')}</ModalHeader>\n        <ModalBody>\n          <InputGroup>\n            <Input type={this.state.isPasswordVisible ? 'text' : 'password'} value={this.state.password} onChange={this.handleInputChange} autoComplete=\"new-password\"/>\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={this.togglePasswordVisible}><i className={`fas ${this.state.isPasswordVisible ? 'fa-eye': 'fa-eye-slash'}`}></i></Button>\n              <Button onClick={this.generatePassword}><i className=\"fas fa-magic\"></i></Button>\n            </InputGroupAddon>\n          </InputGroup>\n          <p className=\"form-text text-muted m-0\">{passwordTip}</p>\n          {this.state.errMsg && <Alert color=\"danger\" className=\"m-0 mt-2\">{gettext(this.state.errMsg)}</Alert>}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.submit} disabled={this.state.btnDisabled}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nUpdateWebdavPassword.propTypes = propTypes;\n\nexport default UpdateWebdavPassword;\n","import React from 'react';\nimport ModalPortal from '../modal-portal';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\nimport UpdateWebdavPassword from '../dialog/update-webdav-password';\n\nconst { webdavPasswd } = window.app.pageOptions;\n\nclass WebdavPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: webdavPasswd,\n      isPasswordVisible: false,\n      isDialogOpen: false\n    };\n  }\n\n  togglePasswordVisible = () => {\n    this.setState({\n      isPasswordVisible: !this.state.isPasswordVisible\n    });\n  }\n\n  updatePassword = (password) => {\n    seafileAPI.updateWebdavSecret(password).then((res) => {\n      this.toggleDialog();\n      this.setState({\n        password: password\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.toggleDialog();\n      toaster.danger(errorMsg);\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isDialogOpen: !this.state.isDialogOpen\n    });\n  }\n\n  onIconKeyDown = (e) => {\n    if (e.key == 'Enter' || e.key == 'Space') {\n      e.target.click();\n    }\n  }\n\n  render() {\n    const { password, isPasswordVisible } = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"update-webdav-passwd\" className=\"setting-item\">\n          <h3 className=\"setting-item-heading\">{gettext('WebDav Password')}</h3>\n          {password ? (\n            <React.Fragment>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"m-0 mr-2\" htmlFor=\"passwd\">{gettext('Password:')}</label>\n                <input id=\"passwd\" className=\"border-0 mr-1\" type=\"text\" value={isPasswordVisible ? password : '**********'} readOnly={true} size={Math.max(password.length, 10)} />\n                <span tabIndex=\"0\" role=\"button\" aria-label={isPasswordVisible? gettext('Hide') : gettext('Show')} onClick={this.togglePasswordVisible} onKeyDown={this.onIconKeyDown} className={`eye-icon fas ${this.state.isPasswordVisible ? 'fa-eye': 'fa-eye-slash'}`}></span>\n              </div>\n              <button className=\"btn btn-outline-primary mt-2\" onClick={this.toggleDialog}>{gettext('Update')}</button>\n            </React.Fragment>\n          ) : (\n            <button className=\"btn btn-outline-primary\" onClick={this.toggleDialog}>{gettext('Set Password')}</button>\n          )}\n        </div>\n        {this.state.isDialogOpen && (\n          <ModalPortal>\n            <UpdateWebdavPassword\n              password={this.state.password}\n              updatePassword={this.updatePassword}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WebdavPassword;\n","import React from 'react';\nimport Select from 'react-select';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  currentLang, langList\n} = window.app.pageOptions;\n\nclass LanguageSetting extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onSelectChange = (selectedItem) => {\n    // selectedItem: {value: '...', label: '...'}\n    location.href = `${siteRoot}i18n/?lang=${selectedItem.value}`;\n  }\n\n  render() {\n    const options = langList.map((item, index) => {\n      return {\n        value: item.langCode,\n        label: item.langName\n      };\n    });\n\n    return (\n      <div className=\"setting-item\" id=\"lang-setting\">\n        <h3 className=\"setting-item-heading\">{gettext('Language Setting')}</h3>\n        <Select\n          className='language-selector'\n          defaultValue={{value: currentLang.langCode, label: currentLang.langName}}\n          options={options}\n          onChange={this.onSelectChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LanguageSetting;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\n\nclass ListInAddressBook extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const { list_in_address_book } = this.props.userInfo;\n    this.state = {\n      inputChecked: list_in_address_book\n    };\n  }\n\n  handleInputChange = (e) => {\n    const checked = e.target.checked;\n    this.setState({\n      inputChecked: checked\n    });\n    this.props.updateUserInfo({\n      list_in_address_book: checked.toString()\n    });\n  }\n\n  render() {\n    const { inputChecked } = this.state;\n\n    return (\n      <div className=\"setting-item\" id=\"list-in-address-book\">\n        <h3 className=\"setting-item-heading\">{gettext('Global Address Book')}</h3>\n        <div className=\"d-flex align-items-center\">\n          <input type=\"checkbox\" id=\"list-in-address-book\" name=\"list_in_address_book\" className=\"mr-1\" checked={inputChecked} onChange={this.handleInputChange} />\n          <label htmlFor=\"list-in-address-book\" className=\"m-0\">{gettext('List your account in global address book, so that others can find you by typing your name.')}</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListInAddressBook;\n","import React from 'react';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst {\n  fileUpdatesEmailInterval,\n  collaborateEmailInterval\n} = window.app.pageOptions;\n\nclass EmailNotice extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // interval: in seconds\n    this.fileUpdatesOptions = [\n      {interval: 0, text: gettext('Don\\'t send emails')},\n      {interval: 3600, text: gettext('Per hour')},\n      {interval: 14400, text: gettext('Per 4 hours')},\n      {interval: 86400, text: gettext('Per day')},\n      {interval: 604800, text: gettext('Per week')}\n    ];\n\n    this.collaborateOptions = [\n      {interval: 0, text: gettext('Don\\'t send emails')},\n      {interval: 3600, text: gettext('Per hour') + ' (' + gettext('If notifications have not been read within one hour, they will be sent to your mailbox.') + ')'}\n    ];\n\n    this.state = {\n      fileUpdatesEmailInterval: fileUpdatesEmailInterval,\n      collaborateEmailInterval: collaborateEmailInterval\n    };\n  }\n\n  inputFileUpdatesEmailIntervalChange = (e) => {\n    if (e.target.checked) {\n      this.setState({\n        fileUpdatesEmailInterval: parseInt(e.target.value)\n      });\n    }\n  }\n\n  inputCollaborateEmailIntervalChange = (e) => {\n    if (e.target.checked) {\n      this.setState({\n        collaborateEmailInterval: parseInt(e.target.value)\n      });\n    }\n  }\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    let { fileUpdatesEmailInterval, collaborateEmailInterval } = this.state;\n    seafileAPI.updateEmailNotificationInterval(fileUpdatesEmailInterval, collaborateEmailInterval).then((res) => {\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  render() {\n    const { fileUpdatesEmailInterval, collaborateEmailInterval } = this.state;\n    return (\n      <div className=\"setting-item\" id=\"email-notice\">\n        <h3 className=\"setting-item-heading\">{gettext('Email Notification')}</h3>\n        <h6 className=\"\">{gettext('Notifications of file changes')}</h6>\n        <p className=\"mb-1\">{gettext('The list of added, deleted and modified files will be sent to your mailbox.')}</p>\n        <form method=\"post\" action=\"\" id=\"set-email-notice-interval-form\" onSubmit={this.formSubmit}>\n          {this.fileUpdatesOptions.map((item, index) => {\n            return (\n              <React.Fragment key={`file-updates-${index}`}>\n                <input type=\"radio\" name=\"interval\" value={item.interval} className=\"align-middle\" id={`file-updates-interval-option${index + 1}`} checked={fileUpdatesEmailInterval == item.interval} onChange={this.inputFileUpdatesEmailIntervalChange} />\n                <label className=\"align-middle m-0 ml-2\" htmlFor={`interval-option${index + 1}`}>{item.text}</label>\n                <br />\n              </React.Fragment>\n            );\n          })}\n        </form>\n\n        <h6 className=\"mt-4\">{gettext('Notifications of collaboration')}</h6>\n        <p className=\"mb-1\">{gettext('Whether the notifications of collaboration such as sharing library or joining group should be sent to your mailbox.')}</p>\n        <form method=\"post\" action=\"\" id=\"set-email-notice-interval-form\" onSubmit={this.formSubmit}>\n          {this.collaborateOptions.map((item, index) => {\n            return (\n              <React.Fragment key={`collaborate-${index}`}>\n                <input type=\"radio\" name=\"interval\" value={item.interval} className=\"align-middle\" id={`collaborate-interval-option${index + 1}`} checked={collaborateEmailInterval == item.interval} onChange={this.inputCollaborateEmailIntervalChange} />\n                <label className=\"align-middle m-0 ml-2\" htmlFor={`interval-option${index + 1}`}>{item.text}</label>\n                <br />\n              </React.Fragment>\n            );\n          })}\n        </form>\n        <button type=\"submit\" className=\"btn btn-outline-primary mt-2\" onClick={this.formSubmit}>{gettext('Submit')}</button>\n      </div>\n    );\n  }\n}\n\nexport default EmailNotice;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  defaultDevice,\n  backupTokens\n} = window.app.pageOptions;\n\nclass TwoFactorAuthentication extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderEnabled = () => {\n    return (\n      <React.Fragment>\n        <p className=\"mb-2\">{gettext('Status: enabled')}</p>\n        <a className=\"btn btn-outline-primary mb-4\" href={`${siteRoot}profile/two_factor_authentication/disable/`}>\n          {gettext('Disable Two-Factor Authentication')}</a>\n        <p className=\"mb-2\">\n          {gettext('If you don\\'t have any device with you, you can access your account using backup codes.')}\n          {backupTokens == 1 ? gettext('You have only one backup code remaining.') :\n            gettext('You have {num} backup codes remaining.').replace('{num}', backupTokens)}\n        </p>\n        <a href={`${siteRoot}profile/two_factor_authentication/backup/tokens/`}\n          className=\"btn btn-outline-primary\">{gettext('Show Codes')}</a>\n      </React.Fragment>\n    );\n  }\n\n  renderDisabled = () => {\n    return (\n      <React.Fragment>\n        <p className=\"mb-2\">{gettext('Two-factor authentication is not enabled for your account. Enable two-factor authentication for enhanced account security.')}</p>\n        <a href={`${siteRoot}profile/two_factor_authentication/setup/`} className=\"btn btn-outline-primary\">\n          {gettext('Enable Two-Factor Authentication')}</a>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"setting-item\" id=\"two-factor-auth\">\n        <h3 className=\"setting-item-heading\">{gettext('Two-Factor Authentication')}</h3>\n        {defaultDevice ? this.renderEnabled() : this.renderDisabled()}\n      </div>\n    );\n  }\n}\n\nexport default TwoFactorAuthentication;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDisconnectWechat extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  disconnect = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Disconnect')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Are you sure you want to disconnect?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.disconnect}>{gettext('Disconnect')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDisconnectWechat.propTypes = propTypes;\n\nexport default ConfirmDisconnectWechat;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDisconnectWechat from '../dialog/confirm-disconnect-wechat';\n\nconst {\n  csrfToken,\n  langCode,\n  socialConnected,\n  socialNextPage\n} = window.app.pageOptions;\n\nclass SocialLogin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDisconnect = () => {\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"social-auth\">\n          <h3 className=\"setting-item-heading\">{gettext('Social Login')}</h3>\n          <p className=\"mb-2\">{langCode == 'zh-cn' ? '企业微信': 'WeChat Work'}</p>\n          {socialConnected ?\n            <button className=\"btn btn-outline-primary\" onClick={this.confirmDisconnect}>{gettext('Disconnect')}</button> :\n            <a href={`${siteRoot}work-weixin/oauth-connect/?next=${encodeURIComponent(socialNextPage)}`} className=\"btn btn-outline-primary\">{gettext('Connect')}</a>\n          }\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDisconnectWechat\n              formActionURL={`${siteRoot}work-weixin/oauth-disconnect/?next=${encodeURIComponent(socialNextPage)}`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialLogin;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDisconnectDingtalk extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  disconnect = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Disconnect')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Are you sure you want to disconnect?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.disconnect}>{gettext('Disconnect')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDisconnectDingtalk.propTypes = propTypes;\n\nexport default ConfirmDisconnectDingtalk;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDisconnectDingtalk from '../dialog/confirm-disconnect-dingtalk';\n\nconst {\n  csrfToken,\n  langCode,\n  socialConnectedDingtalk,\n  socialNextPage\n} = window.app.pageOptions;\n\nclass SocialLoginDintalk extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDisconnect = () => {\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"social-auth\">\n          <h3 className=\"setting-item-heading\">{gettext('Social Login')}</h3>\n          <p className=\"mb-2\">{langCode == 'zh-cn' ? '钉钉': 'Dingtalk'}</p>\n          {socialConnectedDingtalk ?\n            <button className=\"btn btn-outline-primary\" onClick={this.confirmDisconnect}>{gettext('Disconnect')}</button> :\n            <a href={`${siteRoot}dingtalk/connect/?next=${encodeURIComponent(socialNextPage)}`} className=\"btn btn-outline-primary\">{gettext('Connect')}</a>\n          }\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDisconnectDingtalk\n              formActionURL={`${siteRoot}dingtalk/disconnect/?next=${encodeURIComponent(socialNextPage)}`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialLoginDintalk;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDeleteAccount extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  action = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Delete Account')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Really want to delete your account?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.action}>{gettext('Delete')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDeleteAccount.propTypes = propTypes;\n\nexport default ConfirmDeleteAccount;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDeleteAccount from '../dialog/confirm-delete-account';\n\nconst {\n  csrfToken\n} = window.app.pageOptions;\n\nclass DeleteAccount extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDelete = (e) => {\n    e.preventDefault();\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"del-account\">\n          <h3 className=\"setting-item-heading\">{gettext('Delete Account')}</h3>\n          <p className=\"mb-2\">{gettext('This operation will not be reverted. Please think twice!')}</p>\n          <button type=\"button\" className=\"btn btn-outline-primary\" onClick={this.confirmDelete}>{gettext('Delete')}</button>\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDeleteAccount\n              formActionURL={`${siteRoot}profile/delete/`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DeleteAccount;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { navigate } from '@reach/router';\nimport { Utils } from './utils/utils';\nimport { isPro, gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport toaster from './components/toast';\nimport CommonToolbar from './components/toolbar/common-toolbar';\nimport SideNav from './components/user-settings/side-nav';\nimport UserAvatarForm from './components/user-settings/user-avatar-form';\nimport UserBasicInfoForm from './components/user-settings/user-basic-info-form';\nimport WebAPIAuthToken from './components/user-settings/web-api-auth-token';\nimport WebdavPassword from './components/user-settings/webdav-password';\nimport LanguageSetting from './components/user-settings/language-setting';\nimport ListInAddressBook from './components/user-settings/list-in-address-book';\nimport EmailNotice from './components/user-settings/email-notice';\nimport TwoFactorAuthentication from './components/user-settings/two-factor-auth';\nimport SocialLogin from './components/user-settings/social-login';\nimport SocialLoginDingtalk from './components/user-settings/social-login-dingtalk';\nimport DeleteAccount from './components/user-settings/delete-account';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/user-settings.css';\n\nconst {\n  canUpdatePassword, passwordOperationText,\n  enableGetAuthToken,\n  enableWebdavSecret,\n  enableAddressBook,\n  twoFactorAuthEnabled,\n  enableWechatWork,\n  enableDingtalk,\n  enableDeleteAccount\n} = window.app.pageOptions;\n\nclass Settings extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sideNavItems = [\n      {show: true, href: '#user-basic-info', text: gettext('Profile')},\n      {show: canUpdatePassword, href: '#update-user-passwd', text: gettext('Password')},\n      {show: enableGetAuthToken, href: '#get-auth-token', text: gettext('Web API Auth Token')},\n      {show: enableWebdavSecret, href: '#update-webdav-passwd', text: gettext('WebDav Password')},\n      {show: enableAddressBook, href: '#list-in-address-book', text: gettext('Global Address Book')},\n      {show: true, href: '#lang-setting', text: gettext('Language')},\n      {show: isPro, href: '#email-notice', text: gettext('Email Notification')},\n      {show: twoFactorAuthEnabled, href: '#two-factor-auth', text: gettext('Two-Factor Authentication')},\n      {show: enableWechatWork, href: '#social-auth', text: gettext('Social Login')},\n      {show: enableDingtalk, href: '#social-auth', text: gettext('Social Login')},\n      {show: enableDeleteAccount, href: '#del-account', text: gettext('Delete Account')},\n    ];\n\n    this.state = {\n      curItemID: this.sideNavItems[0].href.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getUserInfo().then((res) => {\n      this.setState({\n        userInfo: res.data\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  updateUserInfo = (data) => {\n    seafileAPI.updateUserInfo(data).then((res) => {\n      this.setState({\n        userInfo: res.data\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onSearchedClick = (selectedItem) => {\n    if (selectedItem.is_dir === true) {\n      let url = siteRoot + 'library/' + selectedItem.repo_id + '/' + selectedItem.repo_name + selectedItem.path;\n      navigate(url, {repalce: true});\n    } else {\n      let url = siteRoot + 'lib/' + selectedItem.repo_id + '/file' + Utils.encodePath(selectedItem.path);\n      let newWindow = window.open('about:blank');\n      newWindow.location.href = url;\n    }\n  }\n\n  handleContentScroll = (e) => {\n    const scrollTop = e.target.scrollTop;\n    const scrolled = this.sideNavItems.filter((item, index) => {\n      return item.show && document.getElementById(item.href.substr(1)).offsetTop - 45 < scrollTop;\n    });\n    if (scrolled.length) {\n      this.setState({\n        curItemID: scrolled[scrolled.length -1].href.substr(1)\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <CommonToolbar onSearchedClick={this.onSearchedClick} />\n          </div>\n          <div className=\"flex-auto d-flex o-hidden\">\n            <div className=\"side-panel o-auto\">\n              <SideNav data={this.sideNavItems} curItemID={this.state.curItemID} />\n            </div>\n            <div className=\"main-panel d-flex flex-column\">\n              <h2 className=\"heading\">{gettext('Settings')}</h2>\n              <div className=\"content position-relative\" onScroll={this.handleContentScroll}>\n                <div id=\"user-basic-info\" className=\"setting-item\">\n                  <h3 className=\"setting-item-heading\">{gettext('Profile Setting')}</h3>\n                  <UserAvatarForm  />\n                  {this.state.userInfo && <UserBasicInfoForm userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} />}\n                </div>\n                {canUpdatePassword &&\n                <div id=\"update-user-passwd\" className=\"setting-item\">\n                  <h3 className=\"setting-item-heading\">{gettext('Password')}</h3>\n                  <a href={`${siteRoot}accounts/password/change/`} className=\"btn btn-outline-primary\">{passwordOperationText}</a>\n                </div>\n                }\n\n                {enableGetAuthToken && <WebAPIAuthToken />}\n                {enableWebdavSecret && <WebdavPassword />}\n                {enableAddressBook && this.state.userInfo &&\n                  <ListInAddressBook userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} />}\n                <LanguageSetting />\n                {isPro && <EmailNotice />}\n                {twoFactorAuthEnabled && <TwoFactorAuthentication />}\n                {enableWechatWork && <SocialLogin />}\n                {enableDingtalk && <SocialLoginDingtalk />}\n                {enableDeleteAccount && <DeleteAccount />}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(\n  <Settings />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}