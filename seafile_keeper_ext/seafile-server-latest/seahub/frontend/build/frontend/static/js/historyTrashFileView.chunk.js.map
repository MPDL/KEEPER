{"version":3,"sources":["components/history-trash-file-view/download.js","components/history-trash-file-view/file-view.js","components/history-trash-file-view/file-view-tip.js","components/file-content-view/text.js","components/file-content-view/markdown.js","history-trash-file-view.js","components/file-content-view/image.js","components/file-content-view/svg.js","components/file-content-view/pdf.js","components/file-content-view/video.js","components/file-content-view/audio.js"],"names":["_window$app$pageOptio","window","app","pageOptions","fileName","repoID","objID","path","Download","_jsx","href","concat","siteRoot","encodeURIComponent","className","children","gettext","fromTrash","commitTime","canDownloadFile","enableWatermark","userNickName","FileView","_React$Component","_inherits","_super","_createSuper","props","_classCallCheck","call","_createClass","key","value","_jsxs","this","content","React","Component","watermark","init","watermark_txt","siteName","watermark_alpha","err","UNSUPPORTED","FileViewTip","apply","arguments","errorMsg","fileExt","fileContent","FileContent","SeafileCodeMirror","MarkdownViewer","markdownContent","showTOC","scriptSource","mediaUrl","fileType","HistoryTrashFileView","Image","tip","SVG","PDF","Text","Markdown","Video","Audio","ReactDom","render","document","getElementById","previousImageUrl","nextImageUrl","repoEncrypted","filePath","thumbnailSizeForOriginal","previousImage","nextImage","rawPath","xmindImageSrc","Utils","encodePath","_this","handleLoadFailure","setState","loadFailed","state","addEventListener","e","keyCode","location","thumbnailURL","includes","xmindSrc","id","title","src","alt","onError","PDFViewer","videoJsOptions","autoplay","controls","preload","playbackRates","sources","VideoPlayer","_objectSpread","AudioPlayer"],"mappings":"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","file":"static/js/historyTrashFileView.chunk.js","sourcesContent":["import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  fileName, repoID, objID, path\n} = window.app.pageOptions;\n\nfunction Download() {\n  return (\n    <a href={`${siteRoot}repo/${repoID}/${objID}/download/?file_name=${encodeURIComponent(fileName)}&p=${encodeURIComponent(path)}`} className=\"btn btn-secondary\">{gettext('Download')}</a>\n  );\n}\n\nexport default Download;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport watermark from 'watermark-dom';\nimport { gettext, siteName } from '../../utils/constants';\nimport Download from './download';\n\nimport '../../css/file-view.css';\n\nconst propTypes = {\n  content: PropTypes.object.isRequired\n};\n\nconst {\n  fromTrash,\n  fileName, commitTime,\n  canDownloadFile,\n  enableWatermark, userNickName\n} = window.app.pageOptions;\n\n\nclass FileView extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"h-100 d-flex flex-column flex-1\">\n        <div className=\"file-view-header d-flex justify-content-between align-items-center\">\n          <div>\n            <h2 className=\"file-title\">{fileName}</h2>\n            <p className=\"meta-info m-0\">{fromTrash ? `${gettext('Current Path: ')}${gettext('Trash')}`: commitTime}</p>\n          </div>\n          {canDownloadFile && <Download />}\n        </div>\n        <div className=\"file-view-body flex-auto d-flex o-hidden\">\n          {this.props.content}\n        </div>\n      </div>\n    );\n  }\n}\n\nif (enableWatermark) {\n  watermark.init({\n    watermark_txt: `${siteName} ${userNickName}`,\n    watermark_alpha: 0.075\n  });\n}\n\nFileView.propTypes = propTypes;\n\nexport default FileView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport Download from './download';\n\nconst propTypes = {\n  err: PropTypes.string\n};\nconst { canDownloadFile, err } = window.app.pageOptions;\nconst UNSUPPORTED = 'File preview unsupported';\n\nclass FileViewTip extends React.Component {\n\n  render() {\n    let errorMsg;\n    if (err == UNSUPPORTED || this.props.err == UNSUPPORTED) {\n      errorMsg = <p>{gettext('Online view is not applicable to this file format')}</p>;\n    } else {\n      errorMsg = <p className=\"error\">{err}</p>;\n    }\n\n    return (\n      <div className=\"file-view-content flex-1 o-auto\">\n        <div className=\"file-view-tip\">\n          {errorMsg}\n          {canDownloadFile && <Download />}\n        </div>\n      </div>\n    );\n  }\n}\nFileViewTip.propTypes = propTypes;\n\nexport default FileViewTip;\n","import React from 'react';\nimport SeafileCodeMirror from '../seafile-codemirror';\nimport '../../css/text-file-view.css';\n\nconst { fileExt, fileContent } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 text-file-view\">\n        <SeafileCodeMirror fileExt={fileExt} value={fileContent} />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport { mediaUrl } from '../../utils/constants';\n\nimport '../../css/md-file-view.css';\n\nconst { fileContent } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 o-auto\">\n        <div className=\"md-content\">\n          <MarkdownViewer\n            markdownContent={fileContent}\n            showTOC={false}\n            scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport FileView from './components/history-trash-file-view/file-view';\nimport FileViewTip from './components/history-trash-file-view/file-view-tip';\nimport Image from './components/file-content-view/image';\nimport SVG from './components/file-content-view/svg';\nimport PDF from './components/file-content-view/pdf';\nimport Text from './components/file-content-view/text';\nimport Markdown from './components/file-content-view/markdown';\nimport Video from './components/file-content-view/video';\nimport Audio from './components/file-content-view/audio';\n\nconst {\n  fileType, err\n} = window.app.pageOptions;\n\nclass HistoryTrashFileView extends React.Component {\n\n  render() {\n    if (err) {\n      return (\n        <FileView content={<FileViewTip />} />\n      );\n    }\n\n    let content;\n    switch (fileType) {\n      case 'Image':\n        content = <Image tip={<FileViewTip />} />;\n        break;\n      case 'SVG':\n        content = <SVG />;\n        break;\n      case 'PDF':\n        content = <PDF />;\n        break;\n      case 'Text':\n        content = <Text />;\n        break;\n      case 'Markdown':\n        content = <Markdown />;\n        break;\n      case 'Video':\n        content = <Video />;\n        break;\n      case 'Audio':\n        content = <Audio />;\n        break;\n      default:\n        content = <FileViewTip err='File preview unsupported' />;\n    }\n\n    return (\n      <FileView content={content} />\n    );\n  }\n}\n\nReactDom.render(<HistoryTrashFileView />, document.getElementById('wrapper'));\n","import React from 'react';\nimport { Utils } from '../../utils/utils';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nimport '../../css/image-file-view.css';\n\nconst {\n  repoID, repoEncrypted,\n  fileExt, filePath, fileName,\n  thumbnailSizeForOriginal,\n  previousImage, nextImage, rawPath,\n  xmindImageSrc // for xmind file\n} = window.app.pageOptions;\n\nlet previousImageUrl, nextImageUrl;\nif (previousImage) {\n  previousImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(previousImage)}`;\n}\nif (nextImage) {\n  nextImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(nextImage)}`;\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadFailed: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', (e) => {\n      if (previousImage && e.keyCode == 37) { // press '<-'\n        location.href = previousImageUrl;\n      }\n      if (nextImage && e.keyCode == 39) { // press '->'\n        location.href = nextImageUrl;\n      }\n    });\n  }\n\n  handleLoadFailure = () => {\n    this.setState({\n      loadFailed: true\n    });\n  }\n\n  render() {\n    if (this.state.loadFailed) {\n      return this.props.tip;\n    }\n\n    // request thumbnails for some files\n    // only for 'file view'. not for 'history/trash file view'\n    let thumbnailURL = '';\n    const fileExtList = ['tif', 'tiff', 'psd'];\n    if (!repoEncrypted && fileExtList.includes(fileExt)) {\n      thumbnailURL = `${siteRoot}thumbnail/${repoID}/${thumbnailSizeForOriginal}${Utils.encodePath(filePath)}`;\n    }\n\n    // for xmind file\n    const xmindSrc = xmindImageSrc ? `${siteRoot}${xmindImageSrc}` : '';\n\n    return (\n      <div className=\"file-view-content flex-1 image-file-view\">\n        {previousImage && (\n          <a href={previousImageUrl} id=\"img-prev\" title={gettext('you can also press ← ')}><span className=\"fas fa-chevron-left\"></span></a>\n        )}\n        {nextImage && (\n          <a href={nextImageUrl} id=\"img-next\" title={gettext('you can also press →')}><span className=\"fas fa-chevron-right\"></span></a>\n        )}\n        <img src={xmindSrc || thumbnailURL || rawPath} alt={fileName} id=\"image-view\" onError={this.handleLoadFailure} />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\n\nimport '../../css/svg-file-view.css';\n\nconst {\n  fileName, rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 svg-file-view\">\n        <img src={rawPath} alt={fileName} id=\"svg-view\" />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport PDFViewer from '../pdf-viewer';\n\nimport '../../css/pdf-file-view.css';\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport VideoPlayer from '../video-player';\n\nimport '../../css/video-file-view.css';\n\nconst {\n  rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      playbackRates: [0.5, 1, 1.5, 2],\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 video-file-view\">\n        <VideoPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport AudioPlayer from '../audio-player';\n\nimport '../../css/audio-file-view.css';\n\nconst { rawPath } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 audio-file-view\">\n        <AudioPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n"],"sourceRoot":""}