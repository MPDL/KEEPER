{"version":3,"sources":["shared-file-view-document.js"],"names":["window","shared","pageOptions","repoID","filePath","err","commitID","fileType","sharedToken","SharedFileViewDocument","content","FileContent","React","Component","props","state","isLoading","errorMsg","queryStatus","seafileAPI","queryOfficeFileConvertStatus","toLowerCase","then","res","data","setState","setTimeout","gettext","scriptNode","document","createElement","type","src","mediaUrl","body","append","catch","error","response","this","className","ReactDOM","render","getElementById"],"mappings":"oTAcIA,OAAOC,OAAOC,YAFhBC,E,EAAAA,OAAQC,E,EAAAA,SAAUC,E,EAAAA,IAClBC,E,EAAAA,SAAUC,E,EAAAA,SAAUC,E,EAAAA,YAGhBC,E,4JACJ,WACE,OAAO,cAAC,IAAD,CAAgBC,QAAS,cAACC,EAAD,U,GAFCC,IAAMC,WAMrCF,E,kDAEJ,WAAYG,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAYX,EACZY,SAAU,IAJK,E,qDAQnB,WAAqB,IAAD,OAClB,IAAIZ,EAAJ,EAIkB,SAAda,IACFC,IAAWC,6BAA6BjB,EAAQG,EAAUF,EAAUG,EAASc,cAAeb,GAAac,MAAK,SAACC,GAE7G,OADsBA,EAAIC,KAAJ,QAEpB,IAAK,aACH,EAAKC,SAAS,CACZT,WAAW,IAEbU,WAAWR,EAAa,KACxB,MACF,IAAK,QACH,EAAKO,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,iCAEpB,MACF,IAAK,OACH,EAAKF,SAAS,CACZT,WAAW,EACXC,SAAU,KAGZ,IAAIW,EAAaC,SAASC,cAAc,UACxCF,EAAWG,KAAO,kBAClBH,EAAWI,IAAX,UAAoBC,KAApB,oBACAJ,SAASK,KAAKC,OAAOP,OAExBQ,OAAM,SAACC,GACJA,EAAMC,SACR,EAAKb,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,iCAGpB,EAAKF,SAAS,CACZT,WAAW,EACXC,SAAUU,aAAQ,kCAM1BT,M,oBAGF,WAAU,IAAD,EACyBqB,KAAKxB,MAA7BC,EADD,EACCA,UAAWC,EADZ,EACYA,SAEnB,OAAIZ,EACK,cAAC,IAAD,IAGLW,EACK,cAAC,IAAD,IAGLC,EACK,cAAC,IAAD,CAAmBA,SAAUA,IAIpC,qBAAKuB,UAAU,sCAAf,SACE,cAAC,IAAD,U,GA7EkB5B,IAAMC,WAmFhC4B,IAASC,OACP,cAACjC,EAAD,IACAoB,SAASc,eAAe,c","file":"static/js/sharedFileViewDocument.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { seafileAPI } from './utils/seafile-api';\nimport { gettext, mediaUrl} from './utils/constants';\nimport SharedFileView from './components/shared-file-view/shared-file-view';\nimport SharedFileViewTip from './components/shared-file-view/shared-file-view-tip';\nimport Loading from './components/loading';\nimport PDFViewer from './components/pdf-viewer';\n\nimport './css/pdf-file-view.css';\n\nconst {\n  repoID, filePath, err,\n  commitID, fileType, sharedToken\n} = window.shared.pageOptions;\n\nclass SharedFileViewDocument extends React.Component {\n  render() {\n    return <SharedFileView content={<FileContent />} />;\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: !err,\n      errorMsg: ''\n    };\n  }\n\n  componentDidMount() {\n    if (err) {\n      return;\n    }\n\n    let queryStatus = () => {\n      seafileAPI.queryOfficeFileConvertStatus(repoID, commitID, filePath, fileType.toLowerCase(), sharedToken).then((res) => {\n        const convertStatus = res.data['status'];\n        switch (convertStatus) {\n          case 'PROCESSING':\n            this.setState({\n              isLoading: true\n            });\n            setTimeout(queryStatus, 2000);\n            break;\n          case 'ERROR':\n            this.setState({\n              isLoading: false,\n              errorMsg: gettext('Document convertion failed.')\n            });\n            break;\n          case 'DONE':\n            this.setState({\n              isLoading: false,\n              errorMsg: ''\n            });\n\n            let scriptNode = document.createElement('script');\n            scriptNode.type = 'text/javascript';\n            scriptNode.src = `${mediaUrl}js/pdf/viewer.js`;\n            document.body.append(scriptNode);\n        }\n      }).catch((error) => {\n        if (error.response) {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Document convertion failed.')\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n            errorMsg: gettext('Please check the network.')\n          });\n        }\n      });\n    };\n\n    queryStatus();\n  }\n\n  render() {\n    const { isLoading, errorMsg } = this.state;\n\n    if (err) {\n      return <SharedFileViewTip />;\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <SharedFileViewTip errorMsg={errorMsg} />;\n    }\n\n    return (\n      <div className=\"shared-file-view-body pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nReactDOM.render (\n  <SharedFileViewDocument />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}