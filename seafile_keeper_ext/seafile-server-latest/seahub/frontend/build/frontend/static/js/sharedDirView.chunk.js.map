{"version":3,"sources":["../node_modules/reactstrap/es/UncontrolledTooltip.js","components/dialog/zip-download-dialog.js","components/shared-link-file-uploader/upload-list-item.js","components/shared-link-file-uploader/forbid-upload-list-item.js","components/shared-link-file-uploader/upload-progress-dialog.js","components/shared-link-file-uploader/file-uploader.js","components/dialog/save-shared-dir-dialog.js","shared-dir-view.js","components/dialog/image-dialog.js","components/dialog/list-taggedfiles-dialog.js","models/draft.js","components/dialog/list-repo-drafts-dialog.js","components/dialog/readme-dialog.js","components/repo-info-bar.js","components/dialog/copy-move-dirent-progress-dialog.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","omitKeys","UncontrolledTooltip","_Component","props","_this","call","this","state","isOpen","defaultOpen","toggle","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","setState","render","React","createElement","Tooltip","_extends","omit","Component","propTypes","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","PropTypes","bool","interval","ZipDownloadDialog","_React$Component","_inherits","_super","_createSuper","_classCallCheck","queryZipProgress","zipToken","seafileAPI","then","res","data","failed","clearInterval","isLoading","errorMsg","failed_reason","zipProgress","total","zipped","toFixed","toggleDialog","location","href","concat","fileServerRoot","catch","error","Utils","getErrorMsg","cancelZipTask","_createClass","value","_this2","_this$props","token","path","repoID","getShareLinkDirentsZipTask","getShareLinkZipTask","zipDownload","setInterval","_jsxs","Modal","children","_jsx","ModalHeader","gettext","ModalBody","Content","_React$Component2","_super2","_this$props$data","Loading","className","UPLOAD_UPLOADING","UPLOAD_ERROR","UPLOAD_ISSAVING","UPLOAD_UPLOADED","UploadListItem","onUploadCancel","e","preventDefault","resumableFile","onUploadRetry","formatFileSize","size","uploadState","nextProps","remainingTime","isSaved","progress","Math","round","fileName","newFileName","title","Fragment","isUploading","role","style","width","formatTime","dangerouslySetInnerHTML","__html","onClick","ForbidUploadListItem","file","msg","replace","maxUploadFileSize","name","colSpan","UploadProgressDialog","onCancelAllUploading","onMinimizeUpload","nativeEvent","stopImmediatePropagation","isMinimized","onCloseUpload","onCloseUploadDialog","uploadBitrate","formatBitRate","uploadedMessage","uploadingMessage","totalProgress","uploadingOptions","uploadedOptions","allFilesUploaded","retryFileList","height","onUploadRetryAll","forbidUploadFileList","map","index","uploadFileList","FileUploader","componentWillUnmount","window","onbeforeunload","dragAndDrop","resumable","disableDropOnDocument","uploader","isUploadProgressDialogShow","bindCallbackHandler","minFileSizeErrorCallback","fileTypeErrorCallback","maxFilesErrorCallback","opts","maxFileSizeErrorCallback","bindEventHandler","on","onChunkingComplete","onFileAdded","filesAddedComplete","onFileProgress","onFileUploadSuccess","onProgress","onComplete","onPause","onFileRetry","onFileError","onError","onBeforeCancel","onCancel","onDragStart","files","errorCount","maxFiles","maxNumberOfFilesForFileupload","message","toaster","danger","relativePath","isFile","formData","parent_dir","relative_path","slice","lastIndexOf","setUploadFileList","_this$props2","sharedLinkGetFileUploadUrl","upload_link","resumableUpload","errMessage","isUploadLinkLoaded","_this$props3","upload","_this$props4","getFileUploadedBytes","uploadedBytes","blockSize","parseInt","resumableUploadFileBlockSize","offset","floor","markChunksCompleted","registerGlobalVariable","getBitrate","item","uniqueIdentifier","lastSize","time","loaded","now","Date","getTime","timestamp","timeDiff","bitrateInterval","currentTime","JSON","parse","dirent","id","type","mtime","errorMessage","notifiedFolders","setHeaders","chunkSize","getOpt","fileSize","startByte","endByte","min","encodeURI","setQuery","generateUniqueIdentifier","webkitRelativePath","MD5","stopPropagation","onFileUpload","uploadInput","current","removeAttribute","click","onFolderUpload","setAttribute","uploadingItem","cancel","_this$props5","retryUploadFile","_this$props6","_this$props7","bootstrap","firedRetry","resumableObj","uploadFile","_this$props8","isUploadRemindDialogShow","_toConsumableArray","cancelFileUpload","pop","currentResumableFile","createRef","Resumablejs","query","fileType","filetypes","undefined","maxFileSize","testMethod","testChunks","headers","withCredentials","simultaneousUploads","fileParameterName","forceChunkSize","maxChunkRetries","minFileSize","assignBrowse","enableDropOnDocument","ref","SaveSharedDirDialog","onSaveSharedFile","handleSaveSharedDir","repo","repo_id","selectedPath","onDirentItemClick","onRepoItemClick","toggleCancel","FileChooser","isShowFile","mode","Alert","color","ModalFooter","Button","disabled","moment","locale","app","config","lang","loginUser","pageOptions","_window$shared$pageOp","shared","dirName","dirPath","sharedBy","thumbnailSize","trafficOverLimit","canDownload","noQuota","canUpload","enableVideoThumbnail","showDownloadIcon","SharedDirView","sortItems","sortBy","sortOrder","items","sortDirentsInSharedDir","getThumbnails","is_dir","imageCheck","file_name","videoCheck","encoded_thumbnail_src","len","getThumbnail","curItem","getShareLinkThumbnail","file_path","renderPath","encodeURIComponent","zipDownloadFolder","folderPath","useGoFileserver","isZipDialogOpen","zipFolderPath","zipDownloadSelectedItems","isSelected","folder_name","selectedItems","saveSelectedItems","isSaveSharedDirDialogShow","itemsForSave","saveAllItems","toggleSaveSharedDirCancel","destRepoID","dstPath","saveSharedDir","isCopyMoveProgressDialogShow","asyncCopyMoveTaskId","task_id","asyncOperatedFilesLength","getAsyncCopyMoveProgress","onProgressDialogToggle","asyncOperationProgress","taskId","cancelCopyMoveOperation","closeZipDialog","prepareImageItem","isGIF","substr","toLowerCase","fileURL","siteRoot","thumbnailSizeForOriginal","encodePath","showImagePopup","imageItems","isImagePopupOpen","imageIndex","indexOf","closeImagePopup","moveToPrevImage","imageItemsLength","prevState","moveToNextImage","toggleAllSelected","isAllItemsSelected","toggleItemSelected","targetItem","some","onUploadFile","direntObject","newItem","joinPath","last_modified","format","folderItems","Array","from","splice","shareLinksUploadDone","getShareLinkRepoTags","usedRepoTags","repo_tags","usedRepoTag","RepoTag","fileCount","isRepoInfoBarShow","_this3","duration","listSharedDir","_getAsyncCopyMoveProgress","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_message","wrap","_context","prev","next","queryAsyncOperationProgress","sent","abrupt","successful","success","done","t0","stop","_this4","isDesktop","modeBaseClass","src","mediaUrl","logoPath","logoHeight","logoWidth","siteTitle","alt","Account","RepoInfoBar","currentPath","shareLinkToken","enableFileDownload","ModalPortal","sharedToken","parentDir","CopyMoveDirentProgressDialog","ImageDialog","_this5","sortByName","sortByTime","sortBySize","_this6","tbody","Item","sortIcon","checked","onChange","GridItem","_React$Component3","_super3","_this7","toggleOpMenu","isOpMenuOpen","handleMouseOver","isIconShown","handleMouseOut","folder_path","handleFileClick","toolTipID","tagTitle","file_tags","tag_name","join","onMouseOver","onMouseOut","onFocus","getFolderIconUrl","fromNow","Dropdown","DropdownToggle","tag","DropdownItem","thumbnailURL","getFileIconUrl","fileTag","zIndex","backgroundColor","tag_color","file_tag_id","placement","bytesToSize","_React$Component4","_super4","_this8","folderURL","ReactDom","document","getElementById","imageTitle","Lightbox","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","imagePadding","imageLoadErrorMessage","prevLabel","nextLabel","closeLabel","zoomInLabel","zoomOutLabel","ListTaggedFilesDialog","onFileTagChanged","TaggedFile","parent_path","filename","direntPath","onDeleteTaggedFile","taggedFile","fileTagID","deleteFileTag","getTaggedFiles","updateUsedRepoTags","file_deleted","currentTag","getShareLinkTaggedFiles","listTaggedFiles","taggedFileList","tagged_files","maxWidth","onClose","onMouseEnter","active","onMouseLeave","deleteFile","rel","unix","Draft","created","created_at","createdStr","ownerNickname","owner_nickname","originRepoID","origin_repo_id","draftFilePath","draft_file_path","ListRepoDraftsDialog","onDeleteDraftItem","draft","editorUtilities","deleteDraft","drafts","listRepoDrafts","DraftItem","draftItem","getFileName","ReadmeDialog","readmeContent","getFileDownloadLink","filePath","getFileContent","MarkdownViewer","markdownContent","showTOC","scriptSource","onListTaggedFiles","isListTaggedFileShow","onCloseDialog","toggleDrafts","showRepoDrafts","toggleReadme","showReadmeDialog","readmeMarkdown","draftCounts","progressStyle","lineHeight","textAlign","minHeight"],"mappings":"4HAAA,uHAKA,SAASA,EAAQC,EAAQC,GAAkB,IAAIC,EAAOC,OAAOD,KAAKF,GAAS,GAAIG,OAAOC,sBAAuB,CAAE,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAAaC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UAAY,KAAIP,EAAKQ,KAAKC,MAAMT,EAAMG,EAAU,CAAE,OAAOH,CAAM,CAQpV,IAAIU,EAAW,CAAC,eAEZC,EAAmC,SAAUC,GAG/C,SAASD,EAAoBE,GAC3B,IAAIC,EAOJ,OALAA,EAAQF,EAAWG,KAAKC,KAAMH,IAAUG,MAClCC,MAAQ,CACZC,OAAQL,EAAMM,cAAe,GAE/BL,EAAMM,OAASN,EAAMM,OAAOC,KAAKC,YAAuBR,IACjDA,CACT,CAXAS,YAAeZ,EAAqBC,GAapC,IAAIY,EAASb,EAAoBc,UAejC,OAbAD,EAAOJ,OAAS,WACdJ,KAAKU,SAAS,CACZR,QAASF,KAAKC,MAAMC,QAExB,EAEAM,EAAOG,OAAS,WACd,OAAoBC,IAAMC,cAAcC,IAASC,YAAS,CACxDb,OAAQF,KAAKC,MAAMC,OACnBE,OAAQJ,KAAKI,QACZY,YAAKhB,KAAKH,MAAOH,IACtB,EAEOC,CACT,CA9BuC,CA8BrCsB,aAGFtB,EAAoBuB,UAzCpB,SAAuBC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,CAAC,EAAOA,EAAI,EAAKvC,EAAQI,OAAOsC,IAAS,GAAMC,SAAQ,SAAUC,GAAOC,YAAgBP,EAAQM,EAAKF,EAAOE,GAAO,IAAexC,OAAO0C,0BAA6B1C,OAAO2C,iBAAiBT,EAAQlC,OAAO0C,0BAA0BJ,IAAmB1C,EAAQI,OAAOsC,IAASC,SAAQ,SAAUC,GAAOxC,OAAO4C,eAAeV,EAAQM,EAAKxC,OAAOK,yBAAyBiC,EAAQE,GAAO,GAAM,CAAE,OAAON,CAAQ,CAyCrfW,CAAc,CAC5C3B,YAAa4B,IAAUC,MACtBlB,IAAQI,U,4GC/BPe,E,2GAEEC,EAAiB,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACrB,SAAAA,EAAYrC,GAAQ,IAADC,EAMf,OANeyC,YAAA,KAAAL,IACjBpC,EAAAuC,EAAAtC,KAAA,KAAMF,IAoCR2C,iBAAmB,WACjB,IAAMC,EAAW3C,EAAKG,MAAMwC,SAC5BC,IAAWF,iBAAiBC,GAAUE,MAAK,SAACC,GAC1C,IAAMC,EAAOD,EAAIC,KACE,GAAfA,EAAKC,QACPC,cAAcd,GACdnC,EAAKY,SAAS,CACZsC,WAAW,EACXC,SAAUJ,EAAKK,kBAGjBpD,EAAKY,SAAS,CACZyC,YAA2B,GAAdN,EAAKO,MAAa,QAAUP,EAAKQ,OAAOR,EAAKO,MAAM,KAAKE,QAAQ,GAAK,MAEhFT,EAAY,OAAKA,EAAa,SAChCE,cAAcd,GACdnC,EAAKD,MAAM0D,eACXC,SAASC,KAAI,GAAAC,OAAMC,KAAc,QAAAD,OAAOjB,IAG9C,IAAGmB,OAAM,SAACC,GACRd,cAAcd,GACd,IAAIgB,EAAWa,IAAMC,YAAYF,GACjC/D,EAAKY,SAAS,CACZsC,WAAW,EACXC,SAAUA,GAEd,GACF,EAACnD,EAEDkE,cAAgB,WACd,IAAMvB,EAAW3C,EAAKG,MAAMwC,SAC5BC,IAAWsB,cAAcvB,GAAUE,MAAK,SAACC,GACzC,IACGgB,OAAM,SAACC,GACV,GAEF,EAAC/D,EAEDyD,aAAe,WACb,IAAMJ,EAAcrD,EAAKG,MAAMkD,YAC3BA,GAA8B,QAAfA,IACjBJ,cAAcd,GACdnC,EAAKkE,iBAEPlE,EAAKD,MAAM0D,cACb,EAjFEzD,EAAKG,MAAQ,CACX+C,WAAW,EACXC,SAAU,GACVE,YAAa,MACbrD,CACJ,CAuFC,OAvFAmE,YAAA/B,EAAA,EAAAT,IAAA,oBAAAyC,MAED,WAAqB,IAADC,EAAA,KAClBC,EAAwCpE,KAAKH,MAArCwE,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAAQpD,EAAMiD,EAANjD,QAEzBkD,EACWlD,EAAOG,OAClBoB,IAAW8B,2BAA2BH,EAAOC,EAAMnD,GACnDuB,IAAW+B,oBAAoBJ,EAAOC,GAE3B5B,IAAWgC,YAAYH,EAAQD,EAAMnD,IAEzCwB,MAAK,SAACC,GACf,IAAMH,EAAWG,EAAIC,KAAgB,UACrCsB,EAAKzD,SAAS,CACZsC,WAAW,EACXC,SAAU,GACVR,SAAUA,IAEZ0B,EAAK3B,mBACLP,EAAW0C,YAAYR,EAAK3B,iBAAkB,IAChD,IAAGoB,OAAM,SAACC,GACR,IAAIZ,EAAWa,IAAMC,YAAYF,GACjCM,EAAKzD,SAAS,CACZsC,WAAW,EACXC,SAAUA,GAEd,GACF,GAAC,CAAAxB,IAAA,SAAAyC,MAkDD,WACE,OACEU,eAACC,IAAK,CAAC3E,QAAQ,EAAME,OAAQJ,KAAKuD,aAAauB,SAAA,CAC7CC,cAACC,IAAW,CAAC5E,OAAQJ,KAAKuD,aAAauB,SAAEG,aAAQ,cACjDF,cAACG,IAAS,CAAAJ,SACRC,cAACI,EAAO,CAACtC,KAAM7C,KAAKC,YAI5B,KAACiC,CAAA,CA/FoB,CAAStB,IAAMK,WAkGhCkE,EAAO,SAAAC,GAAAhD,YAAA+C,EAAAC,GAAA,IAAAC,EAAA/C,YAAA6C,GAAA,SAAAA,IAAA,OAAA5C,YAAA,KAAA4C,GAAAE,EAAA5F,MAAA,KAAA4B,UAAA,CAcV,OAdU4C,YAAAkB,EAAA,EAAA1D,IAAA,SAAAyC,MAEX,WACE,IAAAoB,EAA2CtF,KAAKH,MAAMgD,KAA/CG,EAASsC,EAATtC,UAAWC,EAAQqC,EAARrC,SAAUE,EAAWmC,EAAXnC,YAE5B,OAAIH,EACK+B,cAACQ,IAAO,IAGbtC,EACK8B,cAAA,KAAGS,UAAU,yBAAwBV,SAAE7B,IAGzC8B,cAAA,KAAGS,UAAU,mBAAkBV,SAAA,GAAApB,OAAKuB,aAAQ,gBAAe,KAAAvB,OAAIP,IACxE,KAACgC,CAAA,CAdU,CAASvE,IAAMK,WAmBbiB,K,sUC/HTuD,EAAmB,YACnBC,EAAe,QACfC,EAAkB,WAClBC,EAAkB,WAoITC,EAlIK,SAAA1D,GAAAC,YAAAyD,EAAA1D,GAAA,IAAAE,EAAAC,YAAAuD,GAElB,SAAAA,EAAYhG,GAAQ,IAADC,EAIf,OAJeyC,YAAA,KAAAsD,IACjB/F,EAAAuC,EAAAtC,KAAA,KAAMF,IAyBRiG,eAAiB,SAACC,GAChBA,EAAEC,iBACFlG,EAAKD,MAAMiG,eAAehG,EAAKD,MAAMoG,cACvC,EAACnG,EAEDoG,cAAgB,SAACH,GACfA,EAAEC,iBACFlG,EAAKD,MAAMqG,cAAcpG,EAAKD,MAAMoG,cACtC,EAACnG,EAEDqG,eAAiB,SAACC,GAChB,MAAoB,kBAATA,EACF,GAELA,GAAQ,KACFA,EAAI,KAAyB9C,QAAQ,GAAK,KAEhD8C,GAAQ,KACFA,EAAI,KAAkB9C,QAAQ,GAAK,KAEzC8C,GAAQ,KACFA,EAAO,KAAM9C,QAAQ,GAAK,KAE7B8C,EAAK9C,QAAQ,GAAK,IAC3B,EAhDExD,EAAKG,MAAQ,CACXoG,YAAaZ,GACb3F,CACJ,CAsHC,OAtHAmE,YAAA4B,EAAA,EAAApE,IAAA,4BAAAyC,MAED,SAA0BoC,GACxB,IAAML,EAAkBK,EAAlBL,cACFI,EAAcZ,EAEdQ,EAAcpC,MAChBwC,EAAcX,GAEsB,IAAhCO,EAAcM,eAAwBN,EAAcO,UACtDH,EAAcV,GAGZM,EAAcO,UAChBH,EAAcT,IAIlB5F,KAAKU,SAAS,CAAC2F,YAAaA,GAC9B,GAAC,CAAA5E,IAAA,SAAAyC,MA4BD,WACE,IAAM+B,EAAkBjG,KAAKH,MAAvBoG,cACFQ,EAAWC,KAAKC,MAAiC,IAA3BV,EAAcQ,YACpC5C,EAAQoC,EAAcpC,MAEpB+C,EAAWX,EAAcY,YACzBT,EAAOpG,KAAKmG,eAAeF,EAAcG,MAE/C,OACExB,eAAA,MAAIY,UAAU,mBAAkBV,SAAA,CAC9BC,cAAA,MAAIS,UAAU,cAAaV,SACzBC,cAAA,OAAKS,UAAU,WAAWsB,MAAOF,EAAS9B,SAAE8B,MAE9C7B,cAAA,MAAIS,UAAU,WAAUV,SACtBC,cAAA,QAAMS,UAAU,YAAYsB,MAAOV,EAAKtB,SAAEsB,MAE5CxB,eAAA,MAAIY,UAAU,2BAA0BV,SAAA,EACpC9E,KAAKC,MAAMoG,cAAgBZ,GAAoBzF,KAAKC,MAAMoG,cAAgBV,IAC1Ef,eAACmC,WAAQ,CAAAjC,SAAA,CACNmB,EAAcG,MAAS,KACtBxB,eAACmC,WAAQ,CAAAjC,SAAA,CACNmB,EAAce,eACbpC,eAAA,OAAKY,UAAU,qBAAoBV,SAAA,CACjCC,cAAA,OAAKS,UAAU,WAAUV,SACvBC,cAAA,OAAKS,UAAU,eAAeyB,KAAK,cAAcC,MAAO,CAACC,MAAM,GAADzD,OAAK+C,EAAQ,MAAM,gBAAeA,EAAU,gBAAc,IAAI,gBAAc,WAEzG,IAAjCR,EAAcM,eAAyBxB,cAAA,OAAKS,UAAU,gBAAeV,SAAEG,aAAQ,4BAC/EgB,EAAcM,cAAgB,GAAM3B,eAAA,OAAKY,UAAU,gBAAeV,SAAA,CAAEG,aAAQ,aAAc,IAAKnB,IAAMsD,WAAWnB,EAAcM,kBAC9F,IAAhCN,EAAcM,eAAwBxB,cAAA,OAAKS,UAAU,gBAAeV,SAAEG,aAAQ,qBAGlFgB,EAAce,eACdjC,cAAA,OAAKS,UAAU,+CAA8CV,SAC3DC,cAAA,OAAKS,UAAU,WAAUV,SACvBC,cAAA,OAAKS,UAAU,eAAeyB,KAAK,cAAcC,MAAO,CAACC,MAAM,GAADzD,OAAK+C,EAAQ,MAAM,gBAAeA,EAAU,gBAAc,IAAI,gBAAc,eAMlJR,EAAcG,KAAQ,KACtBrB,cAAA,OAAKS,UAAU,+CAA8CV,SAC3DC,cAAA,OAAKS,UAAU,WAAUV,SACvBC,cAAA,OAAKS,UAAU,eAAeyB,KAAK,cAAcC,MAAO,CAACC,MAAM,GAADzD,OAAK+C,EAAQ,MAAM,gBAAeA,EAAU,gBAAc,IAAI,gBAAc,eAMnJzG,KAAKC,MAAMoG,cAAgBX,GAC1BX,cAAA,OAAKS,UAAU,2BAA2B6B,wBAAyB,CAACC,OAAQzD,QAGhFkB,cAAA,MAAIS,UAAU,4BAA2BV,SACvCF,eAACmC,WAAQ,CAAAjC,SAAA,CACN9E,KAAKC,MAAMoG,cAAgBZ,GAC1BV,cAAA,KAAGtB,KAAK,IAAI8D,QAASvH,KAAK8F,eAAehB,SAAEG,aAAQ,YAEpDjF,KAAKC,MAAMoG,cAAgBX,GAC1BX,cAAA,KAAGtB,KAAK,IAAI8D,QAASvH,KAAKkG,cAAcpB,SAAEG,aAAQ,WAEnDjF,KAAKC,MAAMoG,cAAgBV,GAC1BZ,cAAA,QAAMS,UAAU,SAAQV,SAAEG,aAAQ,eAEnCjF,KAAKC,MAAMoG,cAAgBT,GAC1Bb,cAAA,QAAMS,UAAU,WAAUV,SAAEG,aAAQ,qBAMhD,KAACY,CAAA,CA7HiB,CAASjF,IAAMK,WCR7BuG,EAAoB,SAAArF,GAAAC,YAAAoF,EAAArF,GAAA,IAAAE,EAAAC,YAAAkF,GAAA,SAAAA,IAAA,OAAAjF,YAAA,KAAAiF,GAAAnF,EAAA5C,MAAA,KAAA4B,UAAA,CAcvB,OAduB4C,YAAAuD,EAAA,EAAA/F,IAAA,SAAAyC,MAExB,WACE,IAAMuD,EAASzH,KAAKH,MAAd4H,KACFC,EAAMzC,aAAQ,gDAAgD0C,QAAQ,gBAAiBC,MAC3F,OACEhD,eAAA,MAAIY,UAAU,mBAAkBV,SAAA,CAC9BC,cAAA,MAAIS,UAAU,cAAaV,SACzBC,cAAA,OAAKS,UAAU,WAAWsB,MAAOW,EAAKI,KAAK/C,SAAE2C,EAAKI,SAGpD9C,cAAA,MAAI+C,QAAS,EAAGtC,UAAU,QAAOV,SAAE4C,MAGzC,KAACF,CAAA,CAduB,CAAS5G,IAAMK,WAmB1BuG,IC8FAO,EApGW,SAAA5F,GAAAC,YAAA2F,EAAA5F,GAAA,IAAAE,EAAAC,YAAAyF,GAExB,SAAAA,EAAYlI,GAAQ,IAADC,EAIf,OAJeyC,YAAA,KAAAwF,IACjBjI,EAAAuC,EAAAtC,KAAA,KAAMF,IAMRmI,qBAAuB,WACrBlI,EAAKD,MAAMmI,sBACb,EAAClI,EAEDmI,iBAAmB,SAAClC,GAClBA,EAAEmC,YAAYC,2BACdrI,EAAKY,SAAS,CAAC0H,aAActI,EAAKG,MAAMmI,aAC1C,EAACtI,EAEDuI,cAAgB,SAACtC,GACfA,EAAEmC,YAAYC,2BACdrI,EAAKD,MAAMyI,qBACb,EAjBExI,EAAKG,MAAQ,CACXmI,aAAa,GACbtI,CACJ,CAwFC,OAxFAmE,YAAA8D,EAAA,EAAAtG,IAAA,SAAAyC,MAgBD,WAAU,IAADC,EAAA,KAEHoE,EAAgBzE,IAAM0E,cAAcxI,KAAKH,MAAM0I,eAC/CE,EAAkBxD,aAAQ,eAC1ByD,EAAmBzD,aAAQ,qBAAuB,IAAMjF,KAAKH,MAAM8I,cAAgB,MAAQJ,EAAgB,IAE3GK,EAAoB7D,cAAA,QAAMS,UAAU,iBAAiB+B,QAASvH,KAAKiI,mBAEnEY,EACFjE,eAACmC,WAAQ,CAAAjC,SAAA,CACPC,cAAA,QAAMS,UAAU,iBAAiB+B,QAASvH,KAAKiI,mBAC/ClD,cAAA,QAAMS,UAAU,cAAc+B,QAASvH,KAAKqI,mBAIhDjE,EAAyDpE,KAAKH,MAAxD8I,EAAavE,EAAbuE,cAAeG,EAAgB1E,EAAhB0E,iBAAkBC,EAAa3E,EAAb2E,cAEvC,OACEnE,eAAA,OAAKY,UAAU,4BAA4B0B,MAAO,CAAC8B,OAAQhJ,KAAKC,MAAMmI,YAAc,UAAY,SAAStD,SAAA,CACvGF,eAAA,OAAKY,UAAU,uBAAsBV,SAAA,CACnCC,cAAA,OAAKS,UAAU,QAAOV,SACD,MAAlB6D,EAAwBF,EAAkBC,IAE7C3D,cAAA,OAAKS,UAAU,mBAAkBV,SACZ,MAAlB6D,GAA0BG,EAAmBD,EAAkBD,OAGpEhE,eAAA,OAAKY,UAAU,wBAAuBV,SAAA,CACpCF,eAAA,OAAKY,UAAU,kBAAiBV,SAAA,CAC7BiE,EAAczH,OAAS,EACtByD,cAAA,QAAMS,UAAU,iBAAiB+B,QAASvH,KAAKH,MAAMoJ,iBAAiBnE,SAAEG,aAAQ,eAEhFF,cAAA,QAAMS,UAAU,+BAA8BV,SAAEG,aAAQ,eAExD6D,EAGA/D,cAAA,QAAMS,UAAU,oCAAmCV,SAAGG,aAAQ,gBAF9DF,cAAA,QAAMS,UAAU,sBAAsB+B,QAASvH,KAAKgI,qBAAqBlD,SAAEG,aAAQ,mBAKvFL,eAAA,SAAOY,UAAU,qBAAoBV,SAAA,CACnCC,cAAA,SAAAD,SACEF,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAIoC,MAAM,MAAKrC,SAAEG,aAAQ,UACzBF,cAAA,MAAIoC,MAAM,MAAKrC,SAAEG,aAAQ,UACzBF,cAAA,MAAIoC,MAAM,MAAKrC,SAAEG,aAAQ,cACzBF,cAAA,MAAIoC,MAAM,MAAKrC,SAAEG,aAAQ,gBAG7BL,eAAA,SAAAE,SAAA,CAEI9E,KAAKH,MAAMqJ,qBAAqBC,KAAI,SAAC1B,EAAM2B,GACzC,OAAQrE,cAACyC,EAAoB,CAAaC,KAAMA,GAAb2B,EACrC,IAGApJ,KAAKH,MAAMwJ,eAAeF,KAAI,SAAClD,EAAemD,GAC5C,OACErE,cAACc,EAAc,CAEbI,cAAeA,EACfH,eAAgB3B,EAAKtE,MAAMiG,eAC3BI,cAAe/B,EAAKtE,MAAMqG,eAHrBkD,EAMX,eAOd,KAACrB,CAAA,CA/FuB,CAASnH,IAAMK,WCYnCqI,G,OAAY,SAAAnH,GAAAC,YAAAkH,EAAAnH,GAAA,IAAAE,EAAAC,YAAAgH,GAEhB,SAAAA,EAAYzJ,GAAQ,IAADC,EAsBe,OAtBfyC,YAAA,KAAA+G,IACjBxJ,EAAAuC,EAAAtC,KAAA,KAAMF,IAuDR0J,qBAAuB,WACrBC,OAAOC,eAAiB,MACO,IAA3B3J,EAAKD,MAAM6J,aACb5J,EAAK6J,UAAUC,uBAEnB,EAAC9J,EAED2J,eAAiB,WACf,GAAID,OAAOK,UACPL,OAAOK,SAASC,4BACkB,MAAlCN,OAAOK,SAASlB,cAClB,MAAO,EAEX,EAAC7I,EAEDiK,oBAAsB,WACpB,IAAA3F,EAA0DtE,EAAKD,MAAzDmK,EAAwB5F,EAAxB4F,yBAA0BC,EAAqB7F,EAArB6F,sBAE5BnK,EAAKoK,wBACPpK,EAAK6J,UAAUQ,KAAKD,sBAAwBpK,EAAKoK,uBAG/CF,IACFlK,EAAK6J,UAAUQ,KAAKH,yBAA2BlK,EAAKD,MAAMmK,0BAGxDlK,EAAKsK,2BACPtK,EAAK6J,UAAUQ,KAAKC,yBAA2BtK,EAAKsK,0BAGlDH,IACFnK,EAAK6J,UAAUQ,KAAKF,sBAAwBnK,EAAKD,MAAMoK,sBAG3D,EAACnK,EAEDuK,iBAAmB,WACjBvK,EAAK6J,UAAUW,GAAG,mBAAoBxK,EAAKyK,mBAAmBlK,KAAIC,YAAAR,KAClEA,EAAK6J,UAAUW,GAAG,YAAaxK,EAAK0K,YAAYnK,KAAIC,YAAAR,KACpDA,EAAK6J,UAAUW,GAAG,qBAAsBxK,EAAK2K,mBAAmBpK,KAAIC,YAAAR,KACpEA,EAAK6J,UAAUW,GAAG,eAAgBxK,EAAK4K,eAAerK,KAAIC,YAAAR,KAC1DA,EAAK6J,UAAUW,GAAG,cAAexK,EAAK6K,oBAAoBtK,KAAIC,YAAAR,KAC9DA,EAAK6J,UAAUW,GAAG,WAAYxK,EAAK8K,WAAWvK,KAAIC,YAAAR,KAClDA,EAAK6J,UAAUW,GAAG,WAAYxK,EAAK+K,WAAWxK,KAAIC,YAAAR,KAClDA,EAAK6J,UAAUW,GAAG,QAASxK,EAAKgL,QAAQzK,KAAIC,YAAAR,KAC5CA,EAAK6J,UAAUW,GAAG,YAAaxK,EAAKiL,YAAY1K,KAAIC,YAAAR,KACpDA,EAAK6J,UAAUW,GAAG,YAAaxK,EAAKkL,YAAY3K,KAAIC,YAAAR,KACpDA,EAAK6J,UAAUW,GAAG,QAASxK,EAAKmL,QAAQ5K,KAAIC,YAAAR,KAC5CA,EAAK6J,UAAUW,GAAG,eAAgBxK,EAAKoL,eAAe7K,KAAIC,YAAAR,KAC1DA,EAAK6J,UAAUW,GAAG,SAAUxK,EAAKqL,SAAS9K,KAAIC,YAAAR,KAC9CA,EAAK6J,UAAUW,GAAG,YAAaxK,EAAKsL,YAAY/K,KAAIC,YAAAR,IACtD,EAACA,EAEDoK,sBAAwB,SAACmB,EAAOC,GAC9B,IAAIC,EAAWC,KACXC,EAAUxG,aAAQ,0DACtBwG,EAAUA,EAAQ9D,QAAQ,aAAc4D,GACxCG,IAAQC,OAAOF,EACjB,EAAC3L,EAEDsK,yBAA2B,SAAC3C,GAC1B,IAAMyB,EAAyBpJ,EAAKG,MAA9BiJ,qBACNA,EAAqB1J,KAAKiI,GAC1B3H,EAAKY,SAAS,CAACwI,qBAAsBA,GACvC,EAACpJ,EAEDyK,mBAAqB,SAACtE,IAGK,IADFnG,EAAKG,MAAM6I,kBAEhChJ,EAAKY,SAAS,CAACoI,kBAAkB,IAInC,IAAIxE,EAA2B,MAApBxE,EAAKD,MAAMyE,KAAe,IAAMxE,EAAKD,MAAMyE,KAAO,IACzDsC,EAAWX,EAAcW,SACzBgF,EAAe3F,EAAc2F,aAC7BC,EAASjF,IAAagF,EAI1B,GADA3F,EAAc6F,SAAW,CAAC,EACtBD,EACF5F,EAAc6F,SAAY,CACxBC,WAAYzH,OAET,CACL,IAAI0H,EAAgBJ,EAAaK,MAAM,EAAGL,EAAaM,YAAY,KAAO,GAC1EjG,EAAc6F,SAAY,CACxBC,WAAYzH,EACZ0H,cAAeA,EAEnB,CACF,EAAClM,EAED0K,YAAc,SAACvE,EAAeoF,GAG5B,GAFapF,EAAcW,WAAaX,EAAc2F,cAEvB,IAAjBP,EAAM/J,OAAc,CAiB9BxB,EAAKqM,kBAAkBrM,EAAK6J,UAAU0B,OACtC,IAAAe,EAA8BtM,EAAKD,MAA7BwE,EAAK+H,EAAL/H,MAAOuH,EAAYQ,EAAZR,aACblJ,IAAW2J,2BAA2BhI,EAAOuH,GAAcjJ,MAAK,SAAAC,GAC9D9C,EAAK6J,UAAUQ,KAAKhJ,OAASyB,EAAIC,KAAKyJ,YAAc,cACpDxM,EAAKyM,gBAAgBtG,EACvB,IAAGrC,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GAEJ,MAEE,GADA1M,EAAKqM,kBAAkBrM,EAAK6J,UAAU0B,QACjCvL,EAAK2M,mBAAoB,CAC5B3M,EAAK2M,oBAAqB,EAC1B,IAAAC,EAA8B5M,EAAKD,MAA7BwE,EAAKqI,EAALrI,MAAOuH,EAAYc,EAAZd,aACblJ,IAAW2J,2BAA2BhI,EAAOuH,GAAcjJ,MAAK,SAAAC,GAC9D9C,EAAK6J,UAAUQ,KAAKhJ,OAASyB,EAAIC,KAAKyJ,YAAc,cACpDxM,EAAK6J,UAAUgD,QACjB,IAAG/I,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,CAEJ,EAAC1M,EAEDyM,gBAAkB,SAACtG,GACjB,IAAA2G,EAAuB9M,EAAKD,MAAtB0E,EAAMqI,EAANrI,OAAQD,EAAIsI,EAAJtI,KACd5B,IAAWmK,qBAAqBtI,EAAQD,EAAM2B,EAAcW,UAAUjE,MAAK,SAAAC,GACzE,IAAIkK,EAAgBlK,EAAIC,KAAKiK,cACzBC,EAAqD,KAAzCC,SAASC,MAAuC,MAAQ,QACpEC,EAASxG,KAAKyG,MAAML,EAAgBC,GACxC9G,EAAcmH,oBAAoBF,GAClCpN,EAAK6J,UAAUgD,QACjB,IAAG/I,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,EAAC1M,EAED2K,mBAAqB,SAACd,EAAW0B,GACAvL,EAAKG,MAA9BiJ,qBACmB5H,OAAS,GAAsB,IAAjB+J,EAAM/J,QAC3CxB,EAAKY,SAAS,CACZoJ,4BAA4B,EAC5BnB,cAAe,KAGrB,EAAC7I,EAEDqM,kBAAoB,WAClB,IAAI9C,EAAiBvJ,EAAK6J,UAAU0B,MACpCvL,EAAKY,SAAS,CACZ2I,eAAgBA,EAChBS,4BAA4B,IAE9BhG,IAAMuJ,uBAAuB,WAAY,8BAA8B,EACzE,EAACvN,EAED4K,eAAiB,SAACzE,GAChB,IAAIsC,EAAgBzI,EAAKwN,aACrBjE,EAAiBvJ,EAAKG,MAAMoJ,eAAeF,KAAI,SAAAoE,GACjD,GAAIA,EAAKC,mBAAqBvH,EAAcuH,kBACtCjF,EAAe,CACjB,IAAIkF,EAAyD,GAA7CF,EAAKnH,KAAQmH,EAAKnH,KAAOmH,EAAK9G,YAC1CiH,EAAOhH,KAAKyG,MAAMM,EAAWlF,GACjCgF,EAAKhH,cAAgBmH,CACvB,CAEF,OAAOH,CACT,IAEAzN,EAAKY,SAAS,CACZ6H,cAAeA,EACfc,eAAgBA,GAEpB,EAACvJ,EAEDwN,WAAa,WACX,IAAIK,EAAS,EACTpF,EAAgB,EAChBqF,GAAM,IAAIC,MAAOC,UAMrB,GAJAhO,EAAK6J,UAAU0B,MAAM7J,SAAQ,SAAAiG,GAC3BkG,GAAUlG,EAAKhB,WAAagB,EAAKrB,IACnC,IAEItG,EAAKiO,UAAW,CAClB,IAAIC,EAAYJ,EAAM9N,EAAKiO,UAC3B,GAAIC,EAAWlO,EAAKmO,gBAClB,OAAOnO,EAAKG,MAAMsI,eAKhBoF,EAAS7N,EAAK6N,QAA0B,IAAhB7N,EAAK6N,UAC/B7N,EAAK6N,OAASA,GAGhBpF,GAAiBoF,EAAS7N,EAAK6N,SAAW,IAAOK,GAAY,CAC/D,CAKA,OAHAlO,EAAKiO,UAAYH,EACjB9N,EAAK6N,OAASA,EAEPpF,CACT,EAACzI,EAED8K,WAAa,WACX,IAAInE,EAAWC,KAAKC,MAAkC,IAA5B7G,EAAK6J,UAAUlD,YACzC3G,EAAKY,SAAS,CAACiI,cAAelC,IAC9B3C,IAAMuJ,uBAAuB,WAAY,gBAAiB5G,EAC5D,EAAC3G,EAED6K,oBAAsB,SAAC1E,EAAewF,GACpC,IAAIK,EAAW7F,EAAc6F,SACzBoC,GAAc,IAAIL,MAAOC,UAAU,IACvCrC,EAAUK,EAASnE,QAAU8D,EAAU0C,KAAKC,MAAM3C,GAAS,GACvDK,EAASE,cA2Db,IAAIqC,EAAS,CACXC,GAAI7C,EAAQ6C,GACZC,KAAM,OACN1G,KAAM4D,EAAQ5D,KACdzB,KAAMqF,EAAQrF,KACdoI,MAAON,GAETpO,EAAKD,MAAM8K,oBAAoB0D,GAE/B,IAAIhF,EAAiBvJ,EAAKG,MAAMoJ,eAAeF,KAAI,SAAAoE,GAKjD,OAJIA,EAAKC,mBAAqBvH,EAAcuH,mBAC1CD,EAAK1G,YAAc4E,EAAQ5D,KAC3B0F,EAAK/G,SAAU,GAEV+G,CACT,IACAzN,EAAKY,SAAS,CAAC2I,eAAgBA,GACjC,EAACvJ,EAEDkL,YAAc,SAAC/E,EAAewF,GAC5B,IAAI5H,EAAQ,GACZ,GAAK4H,EAEE,CAEL,IAAIgD,EAAehD,EAAQ9D,QAAQ,MAAO,IAC1C8G,EAAgBN,KAAKC,MAAMK,GAEb,4BADd5K,EAAQ4K,EAAa5K,SAEnBA,EAAQoB,aAAQ,8BAEJ,oBAAVpB,IACFA,EAAQoB,aAAQ,yBAEpB,MAZEpB,EAAQoB,aAAQ,iBAclB,IAAIoE,EAAiBvJ,EAAKG,MAAMoJ,eAAeF,KAAI,SAAAoE,GAKjD,OAJIA,EAAKC,mBAAqBvH,EAAcuH,mBAC1C1N,EAAKG,MAAM8I,cAAcvJ,KAAK+N,GAC9BA,EAAK1J,MAAQA,GAER0J,CACT,IAEAzN,EAAK6N,OAAS,EACd7N,EAAKY,SAAS,CACZqI,cAAejJ,EAAKG,MAAM8I,cAC1BM,eAAgBA,GAGpB,EAACvJ,EAED+K,WAAa,WACX/K,EAAK4O,gBAAkB,GAEvB5O,EAAK2M,oBAAqB,EAC1B3M,EAAKY,SAAS,CAACoI,kBAAkB,GACnC,EAAChJ,EAEDgL,QAAU,WAEV,EAAChL,EAEDmL,QAAU,SAACQ,GAET3L,EAAK2M,oBAAqB,EAE1B3I,IAAMuJ,uBAAuB,WAAY,gBAAiB,IAC5D,EAACvN,EAEDiL,YAAc,WACZ,EACDjL,EAEDoL,eAAiB,WACf,EACDpL,EAEDqL,SAAW,WAEX,EAACrL,EAED6O,WAAa,SAAC1I,EAAe0D,GAC3B,IAAIuD,EAASvD,EAAUuD,OACnB0B,EAAYjF,EAAUkF,OAAO,aAC7BC,EAAkC,IAAvB7I,EAAcG,KAAa,EAAIH,EAAcG,KACxD2I,EAAuB,IAAX7B,EAAeA,EAAS0B,EAAY,EAChDI,EAAUtI,KAAKuI,IAAIH,GAAW5B,EAAS,GAAK0B,GAAa,EAY7D,OAVIE,EAAWnF,EAAUqF,QAAUJ,IAAcjF,EAAUkF,OAAO,oBAChEG,EAAUF,GAGE,CACZ,OAAU,iDACV,sBAAuB,yBAA2BI,UAAUjJ,EAAcW,UAAY,IACtF,gBAAiB,SAAWmI,EAAY,IAAMC,EAAU,IAAMF,EAIlE,EAAChP,EAEDqP,SAAW,SAAClJ,GAEV,OADeA,EAAc6F,QAE/B,EAAChM,EAEDsP,yBAA2B,SAAC3H,GAC1B,IAAImE,EAAenE,EAAK4H,oBAAoB5H,EAAKmE,cAAcnE,EAAKb,UAAUa,EAAKI,KACnF,OAAOyH,IAAI1D,EAAe,IAAIiC,MAAUjC,CAC1C,EAAC9L,EAEDyH,QAAU,SAACxB,GACTA,EAAEmC,YAAYC,2BACdpC,EAAEwJ,iBACJ,EAACzP,EAED0P,aAAe,WACb1P,EAAK2P,YAAYC,QAAQC,gBAAgB,mBAEzC7P,EAAK2P,YAAYC,QAAQE,OAC3B,EAAC9P,EAED+P,eAAiB,WACf/P,EAAK2P,YAAYC,QAAQI,aAAa,kBAAmB,mBACzDhQ,EAAK2P,YAAYC,QAAQE,OAC3B,EAAC9P,EAEDsL,YAAc,WACZtL,EAAK2P,YAAYC,QAAQI,aAAa,kBAAmB,kBAC3D,EAAChQ,EAEDwI,oBAAsB,WACpBxI,EAAK6N,OAAS,EACd7N,EAAK6J,UAAU0B,MAAQ,GAEvBvL,EAAK2M,oBAAqB,EAC1B3M,EAAKY,SAAS,CAACoJ,4BAA4B,EAAOT,eAAgB,GAAIH,qBAAsB,KAC5FpF,IAAMuJ,uBAAuB,WAAY,8BAA8B,EACzE,EAACvN,EAEDgG,eAAiB,SAACiK,GAEhB,IAAI1G,EAAiBvJ,EAAKG,MAAMoJ,eAAejK,QAAO,SAAAmO,GACpD,OAAIA,EAAKC,mBAAqBuC,EAAcvC,mBAC1CD,EAAKyC,UACE,EAGX,IAEKlQ,EAAK6J,UAAU3C,gBAClBlH,EAAKY,SAAS,CACZiI,cAAe,MACfG,kBAAkB,IAEpBhJ,EAAK6N,OAAS,GAGhB7N,EAAKY,SAAS,CAAC2I,eAAgBA,GACjC,EAACvJ,EAEDkI,qBAAuB,WACrB,IAAIqB,EAAiBvJ,EAAKG,MAAMoJ,eAAejK,QAAO,SAAAmO,GACpD,OAAI7G,KAAKC,MAA0B,IAApB4G,EAAK9G,cAClB8G,EAAKyC,UACE,EAGX,IAEAlQ,EAAK6N,OAAS,EAEd7N,EAAKY,SAAS,CACZoI,kBAAkB,EAClBH,cAAe,MACfU,eAAgBA,IAGlBvJ,EAAK2M,oBAAqB,CAC5B,EAAC3M,EAEDoG,cAAgB,SAACD,GAEf,IAAAgK,EAA8BnQ,EAAKD,MAA7BwE,EAAK4L,EAAL5L,MAAOuH,EAAYqE,EAAZrE,aACblJ,IAAW2J,2BAA2BhI,EAAOuH,GAAcjJ,MAAK,SAAAC,GAC9D9C,EAAK6J,UAAUQ,KAAKhJ,OAASyB,EAAIC,KAAKyJ,YAAc,cAEpD,IAAIvD,EAAgBjJ,EAAKG,MAAM8I,cAAc3J,QAAO,SAAAmO,GAClD,OAAOA,EAAKC,mBAAqBvH,EAAcuH,gBACjD,IACInE,EAAiBvJ,EAAKG,MAAMoJ,eAAeF,KAAI,SAAAoE,GAKjD,OAJIA,EAAKC,mBAAqBvH,EAAcuH,mBAC1CD,EAAK1J,MAAQ,KACb/D,EAAKoQ,gBAAgB3C,IAEhBA,CACT,IAEAzN,EAAKY,SAAS,CACZqI,cAAeA,EACfM,eAAgBA,GAEpB,IAAGzF,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,EAAC1M,EAEDmJ,iBAAmB,WAEjB,IAAAkH,EAA8BrQ,EAAKD,MAA7BwE,EAAK8L,EAAL9L,MAAOuH,EAAYuE,EAAZvE,aACblJ,IAAW2J,2BAA2BhI,EAAOuH,GAAcjJ,MAAK,SAAAC,GAC9D9C,EAAK6J,UAAUQ,KAAKhJ,OAASyB,EAAIC,KAAKyJ,YAAc,cACpDxM,EAAKG,MAAM8I,cAAcvH,SAAQ,SAAA+L,GAC/BA,EAAK1J,OAAQ,EACb/D,EAAKoQ,gBAAgB3C,EACvB,IAEA,IAAIlE,EAAiBvJ,EAAKG,MAAMoJ,eAAe4C,MAAM,GACrDnM,EAAKY,SAAS,CACZqI,cAAe,GACfM,eAAgBA,GAGpB,IAAGzF,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,EAAC1M,EAEDoQ,gBAAkB,SAACjK,GACjB,IAAAmK,EAAuBtQ,EAAKD,MAAtB0E,EAAM6L,EAAN7L,OAAQD,EAAI8L,EAAJ9L,KACVsC,EAAWX,EAAcW,SAE7B,KADaX,EAAcW,WAAaX,EAAc2F,cACzC,CACX,IAAII,EAAgB/F,EAAc6F,SAASE,cAE3CpF,GADsB,MAATtC,EAAgBA,EAAO0H,EAAkB1H,EAAO,IAAM0H,GAC/CpF,CACtB,CAEAX,EAAcoK,YACd,IAAIC,GAAa,EACjBrK,EAAcsK,aAAajG,GAAG,oBAAoB,WAC5CgG,GACF5N,IAAWmK,qBAAqBtI,EAAQD,EAAMsC,GAAUjE,MAAK,SAAAC,GAC3D,IAAIkK,EAAgBlK,EAAIC,KAAKiK,cACzBC,EAAqD,KAAzCC,SAASC,MAAuC,MAAQ,QACpEC,EAASxG,KAAKyG,MAAML,EAAgBC,GACxC9G,EAAcmH,oBAAoBF,GAElCjH,EAAcsK,aAAa5D,QAE7B,IAAG/I,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,IAEF8D,GAAa,CACf,GACF,EAACxQ,EAED0Q,WAAa,WACX,IAAIvK,EAAgBnG,EAAK6J,UAAU0B,MAAMvL,EAAK6J,UAAU0B,MAAM/J,OAAS,GAEvEmP,EAA8B3Q,EAAKD,MAA7BwE,EAAKoM,EAALpM,MAAOuH,EAAY6E,EAAZ7E,aACblJ,IAAW2J,2BAA2BhI,EAAOuH,GAAcjJ,MAAK,SAAAC,GAC9D9C,EAAK6J,UAAUQ,KAAKhJ,OAASyB,EAAIC,KAAKyJ,YAAc,cACpDxM,EAAKY,SAAS,CACZgQ,0BAA0B,EAC1B5G,4BAA4B,EAC5BT,eAAe,GAAD3F,OAAAiN,YAAM7Q,EAAKG,MAAMoJ,gBAAc,CAAEpD,MAC9C,WACDnG,EAAK6J,UAAUgD,QACjB,IACA7I,IAAMuJ,uBAAuB,WAAY,8BAA8B,EAEzE,IAAGzJ,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,EAAC1M,EAED8Q,iBAAmB,WACjB9Q,EAAK6J,UAAU0B,MAAMwF,MACrB/Q,EAAKY,SAAS,CAACgQ,0BAA0B,GAC3C,EAvnBE5Q,EAAKG,MAAQ,CACX8I,cAAe,GACfM,eAAgB,GAChBH,qBAAsB,GACtBP,cAAe,EACfmB,4BAA4B,EAC5B4G,0BAA0B,EAC1BI,qBAAsB,KACtBvI,cAAe,EACfO,kBAAkB,GAGpBhJ,EAAK2P,YAAc7O,IAAMmQ,YAEzBjR,EAAK4O,gBAAkB,GAEvB5O,EAAKiO,UAAY,KACjBjO,EAAK6N,OAAS,EACd7N,EAAKmO,gBAAkB,IACvBzE,OAAOC,eAAiB3J,EAAK2J,eAC7B3J,EAAK2M,oBAAqB,EAAM3M,CAClC,CA6nBC,OA7nBAmE,YAAAqF,EAAA,EAAA7H,IAAA,oBAAAyC,MAED,WACElE,KAAK2J,UAAY,IAAIqH,IAAY,CAC/B7P,OAAQ,GACR8P,MAAOjR,KAAKmP,UAAY,CAAC,EACzB+B,SAAUlR,KAAKH,MAAMsR,UACrB5F,SAAUC,WAAiC4F,EAC3CC,YAAiC,IAApBzJ,KAA2B,UAAQwJ,EAChDE,WAAYtR,KAAKH,MAAMyR,YAAc,OACrCC,WAAYvR,KAAKH,MAAM0R,aAAc,EACrCC,QAASxR,KAAK2O,YAAc,CAAC,EAC7B8C,gBAAiBzR,KAAKH,MAAM4R,kBAAmB,EAC/C7C,UAAoD,KAAzC5B,SAASC,MAAuC,MAAQ,QACnEyE,oBAAqB1R,KAAKH,MAAM6R,qBAAuB,EACvDC,kBAAmB3R,KAAKH,MAAM8R,kBAC9BvC,yBAA0BpP,KAAKoP,yBAC/BwC,gBAAgB,EAChBC,gBAAiB,EACjBC,YAAa,IAGf9R,KAAK2J,UAAUoI,aAAa/R,KAAKyP,YAAYC,SAAS,IAGvB,IAA3B1P,KAAKH,MAAM6J,aACb1J,KAAK2J,UAAUqI,uBAGjBhS,KAAK+J,sBACL/J,KAAKqK,kBACP,GAAC,CAAA5I,IAAA,SAAAyC,MAqkBD,WACE,OACEU,eAACmC,WAAQ,CAAAjC,SAAA,CACPC,cAAA,OAAKS,UAAU,0BAAyBV,SACtCC,cAAA,OAAKS,UAAU,gBAAeV,SAC5BC,cAAA,SAAOS,UAAU,eAAe+I,KAAK,OAAO0D,IAAKjS,KAAKyP,YAAalI,QAASvH,KAAKuH,cAGpFvH,KAAKC,MAAM6J,4BACV/E,cAACgD,EAAoB,CACnBgB,cAAe/I,KAAKC,MAAM8I,cAC1BM,eAAgBrJ,KAAKC,MAAMoJ,eAC3BH,qBAAsBlJ,KAAKC,MAAMiJ,qBACjCP,cAAe3I,KAAKC,MAAM0I,cAC1BJ,cAAevI,KAAKC,MAAMsI,cAC1BO,iBAAkB9I,KAAKC,MAAM6I,iBAC7BR,oBAAqBtI,KAAKsI,oBAC1BN,qBAAsBhI,KAAKgI,qBAC3BlC,eAAgB9F,KAAK8F,eACrBI,cAAelG,KAAKkG,cACpB+C,iBAAkBjJ,KAAKiJ,qBAKjC,KAACK,CAAA,CAtpBe,CAAS1I,IAAMK,YA2pBlBqI,I,uDC3mBA4I,EAjEU,SAAA/P,GAAAC,YAAA8P,EAAA/P,GAAA,IAAAE,EAAAC,YAAA4P,GAEvB,SAAAA,EAAYrS,GAAQ,IAADC,EAMf,OANeyC,YAAA,KAAA2P,IACjBpS,EAAAuC,EAAAtC,KAAA,KAAMF,IAQRsS,iBAAmB,WACjBrS,EAAKD,MAAMuS,oBAAoBtS,EAAKG,MAAMoS,KAAKC,QAASxS,EAAKG,MAAMsS,aACrE,EAACzS,EAED0S,kBAAoB,SAACH,EAAME,EAAclE,GACnB,QAAhBA,EAAOE,KACTzO,EAAKY,SAAS,CACZ2R,KAAMA,EACNE,aAAcA,IAIhBzS,EAAKY,SAAS,CACZ2R,KAAM,KACNE,aAAc,IAGpB,EAACzS,EAED2S,gBAAkB,SAACJ,GACjBvS,EAAKY,SAAS,CACZ2R,KAAMA,EACNE,aAAc,KAElB,EA/BEzS,EAAKG,MAAQ,CACXoS,KAAM,KACNE,aAAc,GACd/F,WAAY,IACZ1M,CACJ,CAmDC,OAnDAmE,YAAAiO,EAAA,EAAAzQ,IAAA,SAAAyC,MA4BD,WACE,OACEU,eAACC,IAAK,CAAC3E,QAAQ,EAAMsF,UAAU,eAAcV,SAAA,CAC3CC,cAACC,IAAW,CAAC5E,OAAQJ,KAAKH,MAAM6S,aAAa5N,SAAEG,aAAQ,cACvDL,eAACM,IAAS,CAAAJ,SAAA,CACRC,cAAC4N,IAAW,CACVC,YAAY,EACZJ,kBAAmBxS,KAAKwS,kBACxBC,gBAAiBzS,KAAKyS,gBACtBI,KAAK,mBAEN7S,KAAKC,MAAMuM,YAAczH,cAAC+N,IAAK,CAACC,MAAM,SAAQjO,SAAE9E,KAAKC,MAAMuM,gBAE9D5H,eAACoO,IAAW,CAAAlO,SAAA,CACVC,cAACkO,IAAM,CAACF,MAAM,YAAYxL,QAASvH,KAAKH,MAAM6S,aAAa5N,SAAEG,aAAQ,YACnEjF,KAAKC,MAAMsS,aACXxN,cAACkO,IAAM,CAACF,MAAM,UAAUxL,QAASvH,KAAKmS,iBAAiBrN,SAAEG,aAAQ,YAEjEF,cAACkO,IAAM,CAACF,MAAM,UAAUG,UAAQ,EAAApO,SAAEG,aAAQ,iBAKpD,KAACiN,CAAA,CA5DsB,CAAStR,IAAMK,W,6CCOxCkS,IAAOC,OAAO5J,OAAO6J,IAAIC,OAAOC,MAEhC,IAAIC,GAAYhK,OAAO6J,IAAII,YAAY5L,KACvC6L,GAMIlK,OAAOmK,OAAOF,YALhBpP,GAAKqP,GAALrP,MAAOuP,GAAOF,GAAPE,QAASC,GAAOH,GAAPG,QAASC,GAAQJ,GAARI,SACzBvP,GAAMmP,GAANnP,OAAQqH,GAAY8H,GAAZ9H,aACRiH,GAAIa,GAAJb,KAAMkB,GAAaL,GAAbK,cAAe1Q,GAAMqQ,GAANrQ,OACrB2Q,GAAgBN,GAAhBM,iBAAkBC,GAAWP,GAAXO,YAClBC,GAAOR,GAAPQ,QAASC,GAAST,GAATS,UAAWC,GAAoBV,GAApBU,qBAGhBC,IAAoBL,IAAoBC,GAExCK,GAAa,SAAAnS,GAAAC,YAAAkS,EAAAnS,GAAA,IAAAE,EAAAC,YAAAgS,GAEjB,SAAAA,EAAYzU,GAAQ,IAADsE,EA8Bf,OA9Be5B,YAAA,KAAA+R,IACjBnQ,EAAA9B,EAAAtC,KAAA,KAAMF,IA6DR0U,UAAY,SAACC,EAAQC,GACnBtQ,EAAKzD,SAAS,CACZ8T,OAAQA,EACRC,UAAWA,EACXC,MAAO5Q,IAAM6Q,uBAAuBxQ,EAAKlE,MAAMyU,MAAOF,EAAQC,IAElE,EAACtQ,EAEDyQ,cAAgB,WACd,IAAIF,EAAQvQ,EAAKlE,MAAMyU,MAAMtV,QAAO,SAACmO,GACnC,OAAQA,EAAKsH,SACV/Q,IAAMgR,WAAWvH,EAAKwH,YACtBX,IAAwBtQ,IAAMkR,WAAWzH,EAAKwH,cAC9CxH,EAAK0H,qBACV,IACA,GAAoB,GAAhBP,EAAMpT,OAAV,CAIA,IAAM4T,EAAMR,EAAMpT,OACZxB,EAAKQ,YAAA6D,IACQ,SAAfgR,EAAwB/T,GAC1B,IAAMgU,EAAUV,EAAMtT,GACtBsB,IAAW2S,sBAAsBhR,GAAO+Q,EAAQE,UAAWvB,IAAepR,MAAK,SAACC,GAC9EwS,EAAQH,sBAAwBrS,EAAIC,KAAKoS,qBAC3C,IAAGrR,OAAM,SAACC,GACR,IACClB,MAAK,WACFvB,EAAI8T,EAAM,EACZC,IAAe/T,GAGftB,EAAMY,SAAS,CACbgU,MAAO5U,EAAMG,MAAMyU,OAGzB,GACF,CACAS,CAAa,EArBb,CAsBF,EAAChR,EAEDoR,WAAa,WACX,OACE3Q,eAAChE,IAAMmG,SAAQ,CAAAjC,SAAA,CACZzB,GAAO8F,KAAI,SAACoE,EAAMnE,GACjB,GAAIA,GAAS/F,GAAO/B,OAAS,EAC3B,OACEsD,eAAChE,IAAMmG,SAAQ,CAAAjC,SAAA,CACbC,cAAA,KAAGtB,KAAI,MAAAC,OAAQ8R,mBAAmBjI,EAAKjJ,MAAK,UAAAZ,OAASmP,IAAQrN,UAAU,gBAAgBsB,MAAOyG,EAAK1F,KAAK/C,SAAEyI,EAAK1F,OAC/G9C,cAAA,QAAAD,SAAM,UAFasE,EAM3B,IAEArE,cAAA,QAAMS,UAAU,gBAAgBsB,MAAOzD,GAAOA,GAAO/B,OAAS,GAAGuG,KAAK/C,SAAEzB,GAAOA,GAAO/B,OAAS,GAAGuG,SAGxG,EAAC1D,EAEDsR,kBAAoB,SAACC,GACdC,KAOHjT,IAAW+B,oBAAoBJ,GAAOqR,GAAY/S,MAAK,SAACC,GACtD,IAAMH,EAAWG,EAAIC,KAAgB,UACrCW,SAASC,KAAI,GAAAC,OAAMC,KAAc,QAAAD,OAAOjB,EAC1C,IAAGmB,OAAM,SAACC,GACR,IAAIZ,EAAWa,IAAMC,YAAYF,GACjCM,EAAKzD,SAAS,CACZsC,WAAW,EACXC,SAAUA,GAEd,IAfAkB,EAAKzD,SAAS,CACZkV,iBAAiB,EACjBC,cAAeH,GAerB,EAACvR,EAED2R,yBAA2B,WACzB,GAAKH,KAQA,CACH,IAAIxU,EAASgD,EAAKlE,MAAMyU,MAAMtV,QAAO,SAAAmO,GAAI,OAAIA,EAAKwI,UAAU,IAAE5M,KAAI,SAAAoE,GAAI,OAAIA,EAAKwH,WAAaxH,EAAKyI,WAAW,IAC5GtT,IAAW8B,2BAA2BH,GAAOuH,GAAczK,GAAQwB,MAAK,SAACC,GACvE,IAAMH,EAAWG,EAAIC,KAAgB,UACrCW,SAASC,KAAI,GAAAC,OAAMC,KAAc,QAAAD,OAAOjB,EAC1C,IAAGmB,OAAM,SAACC,GACR,IAAIZ,EAAWa,IAAMC,YAAYF,GACjCM,EAAKzD,SAAS,CACZsC,WAAW,EACXC,SAAUA,GAEd,GACF,MAnBEkB,EAAKzD,SAAS,CACZkV,iBAAiB,EACjBC,cAAejK,GACfqK,cAAe9R,EAAKlE,MAAMyU,MAAMtV,QAAO,SAAAmO,GAAI,OAAIA,EAAKwI,UAAU,IAC3D5M,KAAI,SAAAoE,GAAI,OAAIA,EAAKwH,WAAaxH,EAAKyI,WAAW,KAgBvD,EAAC7R,EAuCD+R,kBAAoB,WAClB/R,EAAKzD,SAAS,CACZyV,2BAA2B,EAC3BC,aAAcjS,EAAKlE,MAAMyU,MAAMtV,QAAO,SAAAmO,GAAI,OAAIA,EAAKwI,UAAU,IAC1D5M,KAAI,SAAAoE,GAAI,OAAIA,EAAKwH,WAAaxH,EAAKyI,WAAW,KAErD,EAAC7R,EAEDkS,aAAe,WACblS,EAAKzD,SAAS,CACZyV,2BAA2B,EAC3BC,aAAcjS,EAAKlE,MAAMyU,MACtBvL,KAAI,SAAAoE,GAAI,OAAIA,EAAKwH,WAAaxH,EAAKyI,WAAW,KAErD,EAAC7R,EAEDmS,0BAA4B,WAC1BnS,EAAKzD,SAAS,CACZyV,2BAA2B,EAC3BC,aAAc,IAElB,EAACjS,EAEDiO,oBAAsB,SAACmE,EAAYC,GAEjC,IAAMJ,EAAejS,EAAKlE,MAAMmW,aAEhC1T,IAAW+T,cAAcF,EAAYC,EAASnS,GAAOuH,GAAcwK,GAAczT,MAAK,SAACC,GACrFuB,EAAKzD,SAAS,CACZyV,2BAA2B,EAC3BC,aAAc,GACdM,8BAA8B,EAC9BC,oBAAqB/T,EAAIC,KAAK+T,QAC9BC,yBAA0BT,EAAa9U,SACtC,WACD6C,EAAK2S,0BACP,GACF,IAAGlT,OAAM,SAACC,GACR,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnCM,EAAKzD,SAAS,CAAC8L,WAAYA,GAC7B,GACF,EAACrI,EAED4S,uBAAyB,WAEvB,GAA+B,MADE5S,EAAKlE,MAAhC+W,uBAC8B,CAClC,IAAIC,EAAS9S,EAAKlE,MAAM0W,oBACxBjU,IAAWwU,wBAAwBD,EACrC,CAEA9S,EAAKzD,SAAS,CACZsW,uBAAwB,EACxBN,8BAA8B,GAElC,EAACvS,EAEDgT,eAAiB,WACfhT,EAAKzD,SAAS,CACZkV,iBAAiB,EACjBC,cAAe,GACfI,cAAe,IAEnB,EAEA9R,EACAiT,iBAAmB,SAAC7J,GAClB,IAAM1F,EAAO0F,EAAKwH,UAEZsC,EAAmB,OADTxP,EAAKyP,OAAOzP,EAAKqE,YAAY,KAAO,GAAGqL,cAIjDC,EAAO,GAAA9T,OAAM+T,KAAQ,MAAA/T,OAAKW,GAAK,cAAAX,OAAa8R,mBAAmBjI,EAAK+H,YAO1E,MAAO,CACL,KAAQzN,EACR,IAAO2P,EACP,IATGH,EAGA,GAAA3T,OAAM8T,EAAO,UAFb,GAAA9T,OAAM+T,KAAQ,cAAA/T,OAAaW,GAAK,KAAAX,OAAIgU,MAAwBhU,OAAGI,IAAM6T,WAAWpK,EAAK+H,YAU5F,EAACnR,EAEDyT,eAAiB,SAACxC,GAChB,IAAMV,EAAQvQ,EAAKlE,MAAMyU,MAAMtV,QAAO,SAACmO,GACrC,OAAQA,EAAKsH,QAAU/Q,IAAMgR,WAAWvH,EAAKwH,UAC/C,IACM8C,EAAanD,EAAMvL,KAAI,SAACoE,GAC5B,OAAOpJ,EAAKiT,iBAAiB7J,EAC/B,IAEApJ,EAAKzD,SAAS,CACZoX,kBAAkB,EAClBD,WAAYA,EACZE,WAAYrD,EAAMsD,QAAQ5C,IAE9B,EAACjR,EAED8T,gBAAkB,WAChB9T,EAAKzD,SAAS,CACZoX,kBAAkB,GAEtB,EAAC3T,EAED+T,gBAAkB,WAChB,IAAMC,EAAmBhU,EAAKlE,MAAM4X,WAAWvW,OAC/C6C,EAAKzD,UAAS,SAAC0X,GAAS,MAAM,CAC5BL,YAAaK,EAAUL,WAAaI,EAAmB,GAAKA,EAC7D,GACH,EAAChU,EAEDkU,gBAAkB,WAChB,IAAMF,EAAmBhU,EAAKlE,MAAM4X,WAAWvW,OAC/C6C,EAAKzD,UAAS,SAAC0X,GAAS,MAAM,CAC5BL,YAAaK,EAAUL,WAAa,GAAKI,EAC1C,GACH,EAAChU,EAEDmU,kBAAoB,WAClBnU,EAAKzD,UAAS,SAAC0X,GAAS,MAAM,CAC5BG,oBAAqBH,EAAUG,mBAC/B7D,MAAOvQ,EAAKlE,MAAMyU,MAAMvL,KAAI,SAACoE,GAE3B,OADAA,EAAKwI,YAAcqC,EAAUG,mBACtBhL,CACT,IACD,GACH,EAACpJ,EAEDqU,mBAAqB,SAACC,EAAY1C,GAChC5R,EAAKzD,SAAS,CACZgU,MAAOvQ,EAAKlE,MAAMyU,MAAMvL,KAAI,SAACoE,GAI3B,OAHIA,IAASkL,IACXlL,EAAKwI,WAAaA,GAEbxI,CACT,MACC,WACDpJ,EAAKzD,SAAS,CACZ6X,oBAAqBpU,EAAKlE,MAAMyU,MAAMgE,MAAK,SAAAnL,GAAI,OAAKA,EAAKwI,UAAU,KAEvE,GACF,EAAC5R,EAEDwU,aAAe,SAAC5S,GACdA,EAAEmC,YAAYC,2BACdhE,EAAK0F,SAAS2F,cAChB,EAACrL,EAEDwG,oBAAsB,SAACiO,GACrB,IAAQ/Q,EAAe+Q,EAAf/Q,KAAMzB,EAASwS,EAATxS,KACRyS,EAAU,CACd9C,YAAY,EACZhB,UAAWlN,EACXyN,UAAWxR,IAAMgV,SAASlN,GAAc/D,GACxCgN,QAAQ,EACRkE,cAAe5F,MAAS6F,SACxB5S,KAAMA,GAEF6S,EAAc9U,EAAKlE,MAAMyU,MAAMtV,QAAO,SAAAmO,GAAU,OAAOA,EAAKsH,MAAQ,IAEtEH,EAAQwE,MAAMC,KAAKhV,EAAKlE,MAAMyU,OAClCA,EAAM0E,OAAOH,EAAY3X,OAAQ,EAAGuX,GACpC1U,EAAKzD,SAAS,CAACgU,MAAOA,IACtBhS,IAAW2W,qBAAqBhV,GAAOP,IAAMgV,SAASjF,GAAShM,GACjE,EAAC1D,EAEDmV,qBAAuB,WACrB5W,IAAW4W,qBAAqBjV,IAAO1B,MAAK,SAAAC,GAC1C,IAAI2W,EAAe,GACnB3W,EAAIC,KAAK2W,UAAUhY,SAAQ,SAAA+L,GACzB,IAAIkM,EAAc,IAAIC,KAAQnM,GAC1BkM,EAAYE,UAAY,GAC1BJ,EAAa/Z,KAAKia,EAEtB,IACAtV,EAAKzD,SAAS,CAAC6Y,aAAcA,IACF,GAAvBA,EAAajY,QAA+B,KAAhBsK,IAC9BzH,EAAKzD,SAAS,CAACkZ,mBAAmB,GAEtC,IAAGhW,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,EAnYErI,EAAKlE,MAAQ,CACX+C,WAAW,EACXC,SAAU,GACVyR,MAAO,GAEP6D,oBAAoB,EACpBtC,cAAe,GAEfzB,OAAQ,OACRC,UAAW,MAEXmB,iBAAiB,EACjBC,cAAe,GAEf0D,aAAc,GACdK,mBAAmB,EAEnBzD,2BAA2B,EAC3BC,aAAc,GAEdO,oBAAqB,GACrBK,uBAAwB,EACxBH,yBAA0B,EAC1BH,8BAA8B,EAE9BoB,kBAAkB,EAClBD,WAAY,GACZE,WAAY,GACZ5T,CACJ,CA2eC,OA3eAF,YAAAqQ,EAAA,EAAA7S,IAAA,oBAAAyC,MAED,WAAqB,IAAD2V,EAAA,KACd7F,IACFtI,IAAQC,OAAO1G,aAAQ,0EAA2E,CAChG6U,SAAU,IAIdpX,IAAWqX,cAAc1V,GAAOuH,GAAcmI,IAAepR,MAAK,SAACC,GACjE,IAAM8R,EAAQ9R,EAAIC,KAAkB,YAAEsG,KAAI,SAAAoE,GAExC,OADAA,EAAKwI,YAAa,EACXxI,CACT,IACAsM,EAAKnZ,SAAS,CACZsC,WAAW,EACXC,SAAU,GACVyR,MAAO5Q,IAAM6Q,uBAAuBD,EAAOmF,EAAK5Z,MAAMuU,OAAQqF,EAAK5Z,MAAMwU,aAE3EoF,EAAKjF,eACP,IAAGhR,OAAM,SAACC,GACR,IAAIZ,EAAWa,IAAMC,YAAYF,GACjCgW,EAAKnZ,SAAS,CACZsC,WAAW,EACXC,SAAUA,GAEd,IAEAjD,KAAKsZ,sBACP,GAAC,CAAA7X,IAAA,2BAAAyC,MAAA,eAAA8V,EAAAC,YAAAC,IAAAC,MA2GD,SAAAC,IAAA,IAAAzD,EAAA/T,EAAAC,EAAA4I,EAAA4O,EAAArD,EAAA,OAAAkD,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC2B,OAAnB9D,EAAwB3W,KAAKC,MAA7B0W,oBAAmB4D,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEP/X,IAAWgY,4BAA4B/D,GAAqB,KAAD,EACvD,GADhB/T,EAAG2X,EAAAI,OACH9X,EAAOD,EAAIC,MACNC,OAAO,CAADyX,EAAAE,KAAA,SAMV,OALChP,EAAUxG,aAAQ,4CACtByG,IAAQC,OAAOF,GACfzL,KAAKU,SAAS,CACZsW,uBAAwB,EACxBN,8BAA8B,IAC7B6D,EAAAK,OAAA,sBAID/X,EAAKgY,WAAW,CAADN,EAAAE,KAAA,SAMQ,OALzBza,KAAKU,SAAS,CACZsW,uBAAwB,EACxBN,8BAA8B,IAE5BjL,EAAUxG,aAAQ,iDACtByG,IAAQoP,QAAQrP,GAAS8O,EAAAK,OAAA,kBAIvB5D,EAA0BnU,EAAKO,MAAY4J,UAAUnK,EAAKkY,KAAKlY,EAAKO,MAAQ,KAAKE,QAAQ,IAAlD,EAE3CtD,KAAK8W,2BACL9W,KAAKU,SAAS,CAACsW,uBAAwBA,IAAyBuD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEhEva,KAAKU,SAAS,CACZsW,uBAAwB,EACxBN,8BAA8B,IAC7B,yBAAA6D,EAAAU,OAAA,GAAAb,EAAA,mBAEN,yBAAAJ,EAAAva,MAAA,KAAA4B,UAAA,EA9IA,IA8IA,CAAAI,IAAA,SAAAyC,MA6LD,WAAU,IAADgX,EAAA,KACDC,EAAYrX,IAAMqX,YAClBC,EAAgB,8CACtB,OACExW,eAAChE,IAAMmG,SAAQ,CAAAjC,SAAA,CACbF,eAAA,OAAKY,UAAU,2BAA0BV,SAAA,CACvCF,eAAA,OAAKY,UAAU,4CAA2CV,SAAA,CACxDC,cAAA,KAAGtB,KAAMgU,KAAS3S,SAChBC,cAAA,OAAKsW,IAAKC,KAAWC,KAAUvS,OAAQwS,KAAYrU,MAAOsU,KAAW3U,MAAO4U,KAAWC,IAAI,WAE5FnI,IAAazO,cAAC6W,IAAO,OAExB7W,cAAA,OAAKS,UAAU,SAAQV,SACrBF,eAAA,OAAKY,UAAU,uBAAsBV,SAAA,CACnCC,cAAA,MAAIS,UAAU,KAAIV,SAAE8O,KACpBhP,eAAA,KAAAE,SAAA,CAAIG,aAAQ,eAAgB6O,MAC5BlP,eAAA,OAAKY,UAAU,2DAA0DV,SAAA,CACvEF,eAAA,KAAGY,UAAU,8CAA6CV,SAAA,CAACC,cAAA,QAAMS,UAAU,YAAWV,SAAEG,aAAQ,oBAA0BjF,KAAKuV,gBAC/H3Q,eAAA,OAAKY,UAAU,YAAWV,SAAA,CACvBqW,GACDvW,eAAA,OAAKY,UAAU,sBAAqBV,SAAA,CAClCC,cAAA,KAAGtB,KAAI,MAAAC,OAAQ8R,mBAAmB5J,IAAa,cAAcpG,UAAS,GAAA9B,OAAK0X,EAAa,wBAAA1X,OAA+B,QAARmP,GAAiB,eAAiB,IAAM/L,MAAO7B,aAAQ,QAAS,aAAYA,aAAQ,UACnMF,cAAA,KAAGtB,KAAI,MAAAC,OAAQ8R,mBAAmB5J,IAAa,cAAcpG,UAAS,GAAA9B,OAAK0X,EAAa,wBAAA1X,OAA+B,QAARmP,GAAiB,eAAiB,IAAM/L,MAAO7B,aAAQ,QAAS,aAAYA,aAAQ,aAGpMkP,IACCpP,cAACkO,IAAM,CAACC,SAAUgB,GAChBpN,MAAOoN,GAAUjP,aAAQ,mDAAqD,GAC9EsC,QAASvH,KAAK2Y,aAAcnT,UAAU,+CAA8CV,SAAEG,aAAQ,YAEjGoP,IACDtP,cAACgC,WAAQ,CAAAjC,SACN9E,KAAKC,MAAMyU,MAAMgE,MAAK,SAAAnL,GAAI,OAAIA,EAAKwI,UAAU,IAC5CnR,eAACmC,WAAQ,CAAAjC,SAAA,CACPC,cAACkO,IAAM,CAACF,MAAM,UAAUxL,QAASvH,KAAK8V,yBAA0BtQ,UAAU,yBAAwBV,SAAEG,aAAQ,wBAC1GgP,IAAeT,IAAcA,KAAcM,IAC7C/O,cAACkO,IAAM,CAACF,MAAM,UAAUxL,QAASvH,KAAKkW,kBAAmB1Q,UAAU,yBAAwBV,SAAEG,aAAQ,4BAIvGL,eAACmC,WAAQ,CAAAjC,SAAA,CACPC,cAACkO,IAAM,CAACF,MAAM,UAAUxL,QAASvH,KAAKyV,kBAAkBpV,KAAKL,KAAM4L,IAAepG,UAAU,yBAAwBV,SAAEG,aAAQ,SAC5HgP,IAAeT,IAAcA,KAAcM,IAC7C/O,cAACkO,IAAM,CAACF,MAAM,UAAUxL,QAASvH,KAAKqW,aAAc7Q,UAAU,yBAAwBV,SAAEG,aAAQ,sBAQxGiP,IAAWC,IACXpP,cAACuE,EAAY,CACX2I,IAAK,SAAApI,GAAQ,OAAIqR,EAAKrR,SAAWA,CAAQ,EACzCH,aAAa,EACbrF,MAAOA,GACPC,KAAkB,MAAZuP,GAAkBA,GAAUA,GAAQlM,QAAQ,OAAQ,IAC1DiE,aAA+B,MAAjBA,GAAuBA,GAAeA,GAAajE,QAAQ,OAAQ,IACjFpD,OAAQA,GACRoG,oBAAqB3K,KAAK2K,sBAI7B3K,KAAKC,MAAM2Z,mBACV7U,cAAC8W,KAAW,CACVtX,OAAQA,GACRuX,YAAa,IACbvC,aAAcvZ,KAAKC,MAAMsZ,aACzBwC,eAAgB1X,GAChB2X,mBAAoB3H,GACpB7O,UAAU,SAIdT,cAACI,GAAO,CACNgW,UAAWA,EACXnY,UAAWhD,KAAKC,MAAM+C,UACtBC,SAAUjD,KAAKC,MAAMgD,SACrByR,MAAO1U,KAAKC,MAAMyU,MAClBF,OAAQxU,KAAKC,MAAMuU,OACnBC,UAAWzU,KAAKC,MAAMwU,UACtBF,UAAWvU,KAAKuU,UAChBgE,mBAAoBvY,KAAKC,MAAMsY,mBAC/BD,kBAAmBtY,KAAKsY,kBACxBE,mBAAoBxY,KAAKwY,mBACzB/C,kBAAmBzV,KAAKyV,kBACxBmC,eAAgB5X,KAAK4X,yBAK5B5X,KAAKC,MAAM2V,iBACZ7Q,cAACkX,IAAW,CAAAnX,SACVC,cAAC7C,IAAiB,CAChBmC,MAAOA,GACPC,KAAMtE,KAAKC,MAAM4V,cACjB1U,OAAQnB,KAAKC,MAAMgW,cACnB1S,aAAcvD,KAAKmX,mBAItBnX,KAAKC,MAAMkW,2BACVpR,cAACmN,EAAmB,CAClBgK,YAAa7X,GACb8X,UAAWvQ,GACX8I,MAAO1U,KAAKC,MAAMmW,aAClB1D,aAAc1S,KAAKsW,0BACnBlE,oBAAqBpS,KAAKoS,sBAG7BpS,KAAKC,MAAMyW,8BACV3R,cAACqX,KAA4B,CAC3B7N,KAAK,OACLsI,yBAA0B7W,KAAKC,MAAM4W,yBACrCG,uBAAwBhX,KAAKC,MAAM+W,uBACnCzT,aAAcvD,KAAK+W,yBAGtB/W,KAAKC,MAAM6X,kBACZ/S,cAACkX,IAAW,CAAAnX,SACVC,cAACsX,IAAW,CACVxE,WAAY7X,KAAKC,MAAM4X,WACvBE,WAAY/X,KAAKC,MAAM8X,WACvBE,gBAAiBjY,KAAKiY,gBACtBC,gBAAiBlY,KAAKkY,gBACtBG,gBAAiBrY,KAAKqY,sBAMhC,KAAC/D,CAAA,CA5gBgB,CAAS1T,IAAMK,WA+gB5BkE,GAAO,SAAAC,GAAAhD,YAAA+C,EAAAC,GAAA,IAAAC,EAAA/C,YAAA6C,GAEX,SAAAA,EAAYtF,GAAQ,IAADyc,EAuBlB,OAvBkB/Z,YAAA,KAAA4C,IACjBmX,EAAAjX,EAAAtF,KAAA,KAAMF,IAGR0c,WAAa,SAACxW,GACZA,EAAEC,iBACF,IACMyO,EAAoC,OAAxB6H,EAAKzc,MAAM4U,UAAqB,OAAS,MAC3D6H,EAAKzc,MAAM0U,UAFI,OAEcE,EAC/B,EAAC6H,EAEDE,WAAa,SAACzW,GACZA,EAAEC,iBACF,IACMyO,EAAoC,OAAxB6H,EAAKzc,MAAM4U,UAAqB,OAAS,MAC3D6H,EAAKzc,MAAM0U,UAFI,OAEcE,EAC/B,EAAC6H,EAEDG,WAAa,SAAC1W,GACZA,EAAEC,iBACF,IACMyO,EAAoC,OAAxB6H,EAAKzc,MAAM4U,UAAqB,OAAS,MAC3D6H,EAAKzc,MAAM0U,UAFI,OAEcE,EAC/B,EAAC6H,CArBD,CAqGC,OArGArY,YAAAkB,EAAA,EAAA1D,IAAA,SAAAyC,MAuBD,WAAU,IAADwY,EAAA,KACPtY,EAKIpE,KAAKH,MAJPsb,EAAS/W,EAAT+W,UACAnY,EAASoB,EAATpB,UAAWC,EAAQmB,EAARnB,SAAUyR,EAAKtQ,EAALsQ,MACrBF,EAAMpQ,EAANoQ,OAAQC,EAASrQ,EAATqQ,UACR8D,EAAkBnU,EAAlBmU,mBAGF,GAAIvV,EACF,OAAO+B,cAACQ,IAAO,IAGjB,GAAItC,EACF,OAAO8B,cAAA,KAAGS,UAAU,yBAAwBV,SAAE7B,IAGhD,IAAM0Z,EACJ5X,cAAA,SAAAD,SACG4P,EAAMvL,KAAI,SAACoE,EAAMnE,GAChB,OAAOrE,cAAC6X,GAAI,CAEVzB,UAAWA,EACX5N,KAAMA,EACNkI,kBAAmBiH,EAAK7c,MAAM4V,kBAC9BmC,eAAgB8E,EAAK7c,MAAM+X,eAC3BY,mBAAoBkE,EAAK7c,MAAM2Y,oBAL1BpP,EAOT,MAIJ,IAAK+R,EACH,OACEvW,eAAA,SAAOY,UAAU,iCAAgCV,SAAA,CAC/CC,cAAA,SAAAD,SACEF,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAIoC,MAAM,QACVpC,cAAA,MAAIoC,MAAM,QACVpC,cAAA,MAAIoC,MAAM,YAGbwV,KAKP,IAAME,EAAW9X,cAAA,QAAMS,UAAS,OAAA9B,OAAsB,OAAb+Q,EAAqB,cAAgB,mBAC9E,MAAe,QAAR5B,GACLjO,eAAA,SAAOY,UAAU,cAAaV,SAAA,CAC5BC,cAAA,SAAAD,SACEF,eAAA,MAAAE,SAAA,CACGuP,IACDtP,cAAA,MAAIoC,MAAM,KAAK3B,UAAU,cAAaV,SACpCC,cAAA,SAAOwJ,KAAK,WAAWuO,QAASvE,EAAoBwE,SAAU/c,KAAKH,MAAMyY,sBAG3EvT,cAAA,MAAIoC,MAAM,OACVpC,cAAA,MAAIoC,MAAOkN,GAAmB,MAAQ,MAAMvP,SAACF,eAAA,KAAGY,UAAU,wBAAwB/B,KAAK,IAAI8D,QAASvH,KAAKuc,WAAWzX,SAAA,CAAEG,aAAQ,QAAQ,IAAY,QAAVuP,GAAoBqI,OAC5J9X,cAAA,MAAIoC,MAAM,OACVpC,cAAA,MAAIoC,MAAM,MAAKrC,SAACF,eAAA,KAAGY,UAAU,wBAAwB/B,KAAK,IAAI8D,QAASvH,KAAKyc,WAAW3X,SAAA,CAAEG,aAAQ,QAAQ,IAAY,QAAVuP,GAAoBqI,OAC/H9X,cAAA,MAAIoC,MAAM,MAAKrC,SAACF,eAAA,KAAGY,UAAU,wBAAwB/B,KAAK,IAAI8D,QAASvH,KAAKwc,WAAW1X,SAAA,CAAEG,aAAQ,eAAe,IAAY,QAAVuP,GAAoBqI,OACtI9X,cAAA,MAAIoC,MAAM,YAGbwV,KAGH5X,cAAA,MAAIS,UAAU,YAAWV,SACtB4P,EAAMvL,KAAI,SAACoE,EAAMnE,GAChB,OAAOrE,cAACiY,GAAQ,CAEdzP,KAAMA,EACNkI,kBAAmBiH,EAAK7c,MAAM4V,kBAC9BmC,eAAgB8E,EAAK7c,MAAM+X,gBAHtBxO,EAKT,KAGN,KAACjE,CAAA,CAzGU,CAASvE,IAAMK,WA4GtB2b,GAAI,SAAAK,GAAA7a,YAAAwa,EAAAK,GAAA,IAAAC,EAAA5a,YAAAsa,GAER,SAAAA,EAAY/c,GAAQ,IAADsd,EAKf,OALe5a,YAAA,KAAAqa,IACjBO,EAAAD,EAAAnd,KAAA,KAAMF,IAORud,aAAe,WACbD,EAAKzc,SAAS,CAAC2c,cAAeF,EAAKld,MAAMod,cAC3C,EAACF,EAEDG,gBAAkB,WAChBH,EAAKzc,SAAS,CAAC6c,aAAa,GAC9B,EAACJ,EAEDK,eAAiB,WACfL,EAAKzc,SAAS,CAAC6c,aAAa,GAC9B,EAACJ,EAED1H,kBAAoB,SAAC1P,GACnBA,EAAEC,iBACFmX,EAAKtd,MAAM4V,kBAAkBpV,KAAIC,YAAA6c,GAAOA,EAAKtd,MAAM0N,KAAKkQ,YAAxDN,EACF,EAACA,EAEDO,gBAAkB,SAAC3X,GACjB,IAAMwH,EAAO4P,EAAKtd,MAAM0N,KACnBzJ,IAAMgR,WAAWvH,EAAKwH,aAI3BhP,EAAEC,iBACFmX,EAAKtd,MAAM+X,eAAerK,GAC5B,EAAC4P,EAED3E,mBAAqB,SAACzS,GACpBoX,EAAKtd,MAAM2Y,mBAAmB2E,EAAKtd,MAAM0N,KAAMxH,EAAE5E,OAAO2b,QAC1D,EAnCEK,EAAKld,MAAQ,CACXsd,aAAa,EACbF,cAAc,GACdF,CACJ,CA+KC,OA/KAlZ,YAAA2Y,EAAA,EAAAnb,IAAA,SAAAyC,MAiCD,WACE,IAAAkI,EAA4BpM,KAAKH,MAAzB0N,EAAInB,EAAJmB,KAAM4N,EAAS/O,EAAT+O,UACNoC,EAAgBvd,KAAKC,MAArBsd,YAEJI,EAAY,GACZC,EAAW,GAMf,GALIrQ,EAAKsQ,WAAatQ,EAAKsQ,UAAUvc,OAAS,IAC5Cqc,EAAYrO,IAAI/B,EAAKwH,WAAW9I,MAAM,EAAG,GACzC2R,EAAWrQ,EAAKsQ,UAAU1U,KAAI,SAAAoE,GAAI,OAAIA,EAAKuQ,QAAQ,IAAEC,KAAK,MAGxDxQ,EAAKsH,OACP,OAAOsG,EACLvW,eAAA,MAAIoZ,YAAahe,KAAKsd,gBAAiBW,WAAYje,KAAKwd,eAAgBU,QAASle,KAAKsd,gBAAgBxY,SAAA,CACnGuP,IACCtP,cAAA,MAAIS,UAAU,cAAaV,SACzBC,cAAA,SAAOwJ,KAAK,WAAWuO,QAASvP,EAAKwI,WAAYgH,SAAU/c,KAAKwY,uBAGpEzT,cAAA,MAAIS,UAAU,cAAaV,SAACC,cAAA,OAAKsW,IAAKvX,IAAMqa,mBAAoBxC,IAAI,GAAGxU,MAAM,SAC7EpC,cAAA,MAAAD,SACEC,cAAA,KAAGtB,KAAI,MAAAC,OAAQ8R,mBAAmBjI,EAAKkQ,YAAYnG,OAAO,EAAG/J,EAAKkQ,YAAYnc,OAAS,IAAG,UAAAoC,OAASmP,IAAO/N,SAAEyI,EAAKyI,gBAEnHjR,cAAA,SACAA,cAAA,SACAA,cAAA,MAAI+B,MAAOqM,IAAO5F,EAAKwL,eAAeC,OAAO,QAAQlU,SAAEqO,IAAO5F,EAAKwL,eAAeqF,YAClFrZ,cAAA,MAAAD,SACGuP,IACDtP,cAAA,KAAGkC,KAAK,SAASzB,UAAS,gCAAA9B,OAAkC6Z,EAAc,GAAK,cAAgB9Z,KAAK,IAAI8D,QAASvH,KAAKyV,kBAAmB3O,MAAO7B,aAAQ,YAAa,aAAYA,aAAQ,mBAM7LL,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAIS,UAAU,cAAaV,SAACC,cAAA,OAAKsW,IAAKvX,IAAMqa,mBAAoBxC,IAAI,GAAGxU,MAAM,SAC7EvC,eAAA,MAAAE,SAAA,CACEC,cAAA,KAAGtB,KAAI,MAAAC,OAAQ8R,mBAAmBjI,EAAKkQ,YAAYnG,OAAO,EAAG/J,EAAKkQ,YAAYnc,OAAS,IAAG,UAAAoC,OAASmP,IAAO/N,SAAEyI,EAAKyI,cACjHjR,cAAA,SACAA,cAAA,QAAMS,UAAU,iBAAgBV,SAAEqO,IAAO5F,EAAKwL,eAAeqF,eAE/DrZ,cAAA,MAAAD,SACGuP,IACDzP,eAACyZ,IAAQ,CAACne,OAAQF,KAAKC,MAAMod,aAAcjd,OAAQJ,KAAKod,aAAatY,SAAA,CACnEC,cAACuZ,IAAc,CACbC,IAAI,IACJ/Y,UAAU,2CACVsB,MAAO7B,aAAQ,mBACf,cAAY,WACZ,gBAAejF,KAAKC,MAAMod,eAE5BzY,eAAA,OAAKY,UAAWxF,KAAKC,MAAMod,aAAe,GAAK,SAAU9V,QAASvH,KAAKod,aAAatY,SAAA,CAClFC,cAAA,OAAKS,UAAU,mCACfT,cAAA,OAAKS,UAAU,wBAAuBV,SACpCC,cAACyZ,IAAY,CAAChZ,UAAU,mBAAmB+B,QAASvH,KAAKyV,kBAAkB3Q,SAAEG,aAAQ,2BASjG,IAAMuS,EAAO,GAAA9T,OAAM+T,KAAQ,MAAA/T,OAAKW,GAAK,cAAAX,OAAa8R,mBAAmBjI,EAAK+H,YACpEmJ,EAAelR,EAAK0H,sBAAqB,GAAAvR,OAAM+T,MAAQ/T,OAAG6J,EAAK0H,uBAA0B,GAC/F,OAAOkG,EACLvW,eAAA,MAAIoZ,YAAahe,KAAKsd,gBAAiBW,WAAYje,KAAKwd,eAAgBU,QAASle,KAAKsd,gBAAgBxY,SAAA,CACnGuP,IACCtP,cAAA,MAAIS,UAAU,cAAaV,SACzBC,cAAA,SAAOwJ,KAAK,WAAWuO,QAASvP,EAAKwI,WAAYgH,SAAU/c,KAAKwY,uBAGpEzT,cAAA,MAAIS,UAAU,cAAaV,SACxB2Z,EACC1Z,cAAA,OAAKS,UAAU,YAAY6V,IAAKoD,EAAc9C,IAAI,KAClD5W,cAAA,OAAKsW,IAAKvX,IAAM4a,eAAenR,EAAKwH,WAAY4G,IAAI,GAAGxU,MAAM,SAGjEpC,cAAA,MAAAD,SACEC,cAAA,KAAGtB,KAAM+T,EAASjQ,QAASvH,KAAK0d,gBAAgB5Y,SAAEyI,EAAKwH,cAEzDhQ,cAAA,MAAIS,UAAU,iBAAgBV,SAC1ByI,EAAKsQ,WAAatQ,EAAKsQ,UAAUvc,OAAS,GAC1CsD,eAACmC,WAAQ,CAAAjC,SAAA,CACPC,cAAA,OAAKuJ,GAAE,kBAAA5K,OAAoBia,GAAanY,UAAU,wCAAuCV,SACtFyI,EAAKsQ,UAAU1U,KAAI,SAACwV,EAASvV,GAC5B,IAAI9H,EAASiM,EAAKsQ,UAAUvc,OAC5B,OACEyD,cAAA,QAAMS,UAAU,WAAqC0B,MAAO,CAAC0X,OAAOtd,EAAS8H,EAAOyV,gBAAgBF,EAAQG,YAA5EH,EAAQI,YAE5C,MAEFha,cAACpF,IAAmB,CAACwB,OAAM,kBAAAuC,OAAoBia,GAAaqB,UAAU,SAAQla,SAC3E8Y,SAKT7Y,cAAA,MAAAD,SAAKhB,IAAMmb,YAAY1R,EAAKnH,QAC5BrB,cAAA,MAAI+B,MAAOqM,IAAO5F,EAAKwL,eAAeC,OAAO,QAAQlU,SAAEqO,IAAO5F,EAAKwL,eAAeqF,YAClFrZ,cAAA,MAAAD,SACGuP,IACDtP,cAAA,KAAGS,UAAS,gCAAA9B,OAAkC6Z,EAAc,GAAK,cAAgB9Z,KAAI,GAAAC,OAAK8T,EAAO,SAAS1Q,MAAO7B,aAAQ,YAAa,aAAYA,aAAQ,mBAK9JL,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAIS,UAAU,cAAaV,SACxB2Z,EACC1Z,cAAA,OAAKS,UAAU,YAAY6V,IAAKoD,EAAc9C,IAAI,KAClD5W,cAAA,OAAKsW,IAAKvX,IAAM4a,eAAenR,EAAKwH,WAAY4G,IAAI,GAAGxU,MAAM,SAGjEvC,eAAA,MAAAE,SAAA,CACEC,cAAA,KAAGtB,KAAM+T,EAASjQ,QAASvH,KAAK0d,gBAAgB5Y,SAAEyI,EAAKwH,YACvDhQ,cAAA,SACAA,cAAA,QAAMS,UAAU,iBAAgBV,SAAEhB,IAAMmb,YAAY1R,EAAKnH,QACzDrB,cAAA,QAAMS,UAAU,iBAAgBV,SAAEqO,IAAO5F,EAAKwL,eAAeqF,eAE/DrZ,cAAA,MAAAD,SACGuP,IACDzP,eAACyZ,IAAQ,CAACne,OAAQF,KAAKC,MAAMod,aAAcjd,OAAQJ,KAAKod,aAAatY,SAAA,CACnEC,cAACuZ,IAAc,CACbC,IAAI,IACJ/Y,UAAU,2CACVsB,MAAO7B,aAAQ,mBACf,cAAY,WACZ,gBAAejF,KAAKC,MAAMod,eAE5BzY,eAAA,OAAKY,UAAWxF,KAAKC,MAAMod,aAAe,GAAK,SAAU9V,QAASvH,KAAKod,aAAatY,SAAA,CAClFC,cAAA,OAAKS,UAAU,mCACfT,cAAA,OAAKS,UAAU,wBAAuBV,SACpCC,cAACyZ,IAAY,CAAChZ,UAAU,mBAAmB+Y,IAAI,IAAI9a,KAAI,GAAAC,OAAK8T,EAAO,SAAQ1S,SAAEG,aAAQ,0BASrG,KAAC2X,CAAA,CAvLO,CAAShc,IAAMK,WA0LnB+b,GAAQ,SAAAkC,GAAA9c,YAAA4a,EAAAkC,GAAA,IAAAC,EAAA7c,YAAA0a,GAEZ,SAAAA,EAAYnd,GAAQ,IAADuf,EAIf,OAJe7c,YAAA,KAAAya,IACjBoC,EAAAD,EAAApf,KAAA,KAAMF,IAMRyd,gBAAkB,WAChB8B,EAAK1e,SAAS,CAAC6c,aAAa,GAC9B,EAAC6B,EAED5B,eAAiB,WACf4B,EAAK1e,SAAS,CAAC6c,aAAa,GAC9B,EAAC6B,EAED3J,kBAAoB,SAAC1P,GACnBA,EAAEC,iBACFoZ,EAAKvf,MAAM4V,kBAAkBpV,KAAIC,YAAA8e,GAAOA,EAAKvf,MAAM0N,KAAKkQ,YAAxD2B,EACF,EAACA,EAED1B,gBAAkB,SAAC3X,GACjB,IAAMwH,EAAO6R,EAAKvf,MAAM0N,KACnBzJ,IAAMgR,WAAWvH,EAAKwH,aAI3BhP,EAAEC,iBACFoZ,EAAKvf,MAAM+X,eAAerK,GAC5B,EA1BE6R,EAAKnf,MAAQ,CACXsd,aAAa,GACb6B,CACJ,CA8DC,OA9DAnb,YAAA+Y,EAAA,EAAAvb,IAAA,SAAAyC,MAyBD,WACE,IAAMqJ,EAAOvN,KAAKH,MAAM0N,KAChBgQ,EAAgBvd,KAAKC,MAArBsd,YAER,GAAIhQ,EAAKsH,OAAQ,CACf,IAAMwK,EAAS,MAAA3b,OAAS8R,mBAAmBjI,EAAKkQ,YAAYnG,OAAO,EAAG/J,EAAKkQ,YAAYnc,OAAS,IAAG,UAAAoC,OAASmP,IAC5G,OACEjO,eAAA,MAAIY,UAAU,YAAYwY,YAAahe,KAAKsd,gBAAiBW,WAAYje,KAAKwd,eAAgBU,QAASle,KAAKsd,gBAAgBxY,SAAA,CAC1HC,cAAA,KAAGtB,KAAM4b,EAAW7Z,UAAU,6BAA4BV,SACxDC,cAAA,OAAKsW,IAAKvX,IAAMqa,kBAAiB,EAAO,KAAMxC,IAAI,GAAGxU,MAAM,KAAK6B,OAAO,SAEzEjE,cAAA,KAAGtB,KAAM4b,EAAW7Z,UAAU,qCAAoCV,SAAEyI,EAAKyI,cACxE3B,IACCtP,cAAA,KAAGkC,KAAK,SAASzB,UAAS,gCAAA9B,OAAkC6Z,EAAc,GAAK,cAAgB9Z,KAAK,IAAI8D,QAASvH,KAAKyV,kBAAmB3O,MAAO7B,aAAQ,YAAa,aAAYA,aAAQ,gBAKjM,CACE,IAAMuS,EAAO,GAAA9T,OAAM+T,KAAQ,MAAA/T,OAAKW,GAAK,cAAAX,OAAa8R,mBAAmBjI,EAAK+H,YACpEmJ,EAAelR,EAAK0H,sBAAqB,GAAAvR,OAAM+T,MAAQ/T,OAAG6J,EAAK0H,uBAA0B,GAC/F,OACErQ,eAAA,MAAIY,UAAU,YAAYwY,YAAahe,KAAKsd,gBAAiBW,WAAYje,KAAKwd,eAAgBU,QAASle,KAAKsd,gBAAgBxY,SAAA,CAC1HC,cAAA,KAAGtB,KAAM+T,EAAShS,UAAU,6BAA6B+B,QAASvH,KAAK0d,gBAAgB5Y,SACpF2Z,EACC1Z,cAAA,OAAKS,UAAU,YAAY6V,IAAKoD,EAAc9C,IAAI,KAClD5W,cAAA,OAAKsW,IAAKvX,IAAM4a,eAAenR,EAAKwH,UAAW,KAAM4G,IAAI,GAAGxU,MAAM,KAAK6B,OAAO,SAGlFjE,cAAA,KAAGtB,KAAM+T,EAAShS,UAAU,qCAAqC+B,QAASvH,KAAK0d,gBAAgB5Y,SAAEyI,EAAKwH,YACrGV,IACCtP,cAAA,KAAGS,UAAS,gCAAA9B,OAAkC6Z,EAAc,GAAK,cAAgB9Z,KAAI,GAAAC,OAAK8T,EAAO,SAAS1Q,MAAO7B,aAAQ,YAAa,aAAYA,aAAQ,gBAMpK,KAAC+X,CAAA,CArEW,CAASpc,IAAMK,WAwE7Bqe,IAAS3e,OAAOoE,cAACuP,GAAa,IAAKiL,SAASC,eAAe,W,mHCl5BrDnD,EAAW,SAAAla,GAAAC,YAAAia,EAAAla,GAAA,IAAAE,EAAAC,YAAA+Z,GACf,SAAAA,EAAYxc,GAAO,OAAA0C,YAAA,KAAA8Z,GAAAha,EAAAtC,KAAA,KACXF,EACR,CA2BC,OA3BAoE,YAAAoY,EAAA,EAAA5a,IAAA,SAAAyC,MAED,WACE,IAAM2T,EAAa7X,KAAKH,MAAMgY,WACxBE,EAAa/X,KAAKH,MAAMkY,WACxBI,EAAmBN,EAAWvW,OAC9BuG,EAAOgQ,EAAWE,GAAYlQ,KAC9B4X,EAAU,GAAA/b,OAAMmE,EAAI,MAAAnE,OAAKqU,EAAa,EAAC,KAAArU,OAAIyU,EAAgB,KAEjE,OACEpT,cAAC2a,IAAQ,CACPD,WAAYA,EACZE,QAAS9H,EAAWE,GAAYsD,IAChCuE,QAAS/H,GAAYE,EAAa,GAAKI,GAAkBkD,IACzDwE,QAAShI,GAAYE,EAAaI,EAAmB,GAAKA,GAAkBkD,IAC5EyE,eAAgB9f,KAAKH,MAAMoY,gBAC3B8H,kBAAmB/f,KAAKH,MAAMqY,gBAC9B8H,kBAAmBhgB,KAAKH,MAAMwY,gBAC9B4H,aAAc,GACdC,sBAAuBjb,aAAQ,kCAC/Bkb,UAAWlb,aAAQ,6BACnBmb,UAAWnb,aAAQ,0BACnBob,WAAYpb,aAAQ,eACpBqb,YAAarb,aAAQ,WACrBsb,aAActb,aAAQ,aAG5B,KAACoX,CAAA,CA9Bc,CAASzb,IAAMK,WAmCjBob,K,oLC9BTmE,EAAqB,SAAAre,GAAAC,YAAAoe,EAAAre,GAAA,IAAAE,EAAAC,YAAAke,GAEzB,SAAAA,EAAY3gB,GAAQ,IAADC,EAIf,OAJeyC,YAAA,KAAAie,IACjB1gB,EAAAuC,EAAAtC,KAAA,KAAMF,IAMR4gB,iBAAmB,SAACC,GAClB,IAAMpc,EAAOoc,EAAWC,YAClBtS,EAAS,CAACxG,KAAM6Y,EAAWE,UAC7BC,EAAsB,MAATvc,EAAeA,EAAOoc,EAAWE,SAAWtc,EAAO,IAAMoc,EAAWE,SACrF9gB,EAAKD,MAAM4gB,iBAAiBpS,EAAQwS,EACtC,EAAC/gB,EAEDghB,mBAAqB,SAACC,GACpB,IAAIxc,EAASzE,EAAKD,MAAM0E,OACpByc,EAAYD,EAAWhC,YAC3Brc,IAAWue,cAAc1c,EAAQyc,GAAWre,MAAK,SAAAC,GAC/C9C,EAAKohB,iBACLphB,EAAKD,MAAMshB,qBACNrhB,EAAKD,MAAM4gB,mBAAsBM,EAAWK,cAActhB,EAAK2gB,iBAAiBM,EACvF,IAAGnd,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,EAAC1M,EAMDohB,eAAiB,WACf,IAAA9c,EAA6CtE,EAAKD,MAA5C0E,EAAMH,EAANG,OAAQ8c,EAAUjd,EAAVid,WAAYtF,EAAc3X,EAAd2X,gBACZA,EACZrZ,IAAW4e,wBAAwBvF,EAAgBsF,EAAW/S,IAC9D5L,IAAW6e,gBAAgBhd,EAAQ8c,EAAW/S,KACxC3L,MAAK,SAAAC,GACX,IAAI4e,EAAiB,QACKpQ,IAA1BxO,EAAIC,KAAK4e,cACT7e,EAAIC,KAAK4e,aAAajgB,SAAQ,SAAAiG,GAC5B,IAAIsZ,EAAatZ,EACjB+Z,EAAehiB,KAAKuhB,EACtB,IACAjhB,EAAKY,SAAS,CACZ8gB,eAAgBA,GAEpB,IAAG5d,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,EAhDE1M,EAAKG,MAAQ,CACXuhB,eAAgB,IAChB1hB,CACJ,CAmFC,OAnFAmE,YAAAuc,EAAA,EAAA/e,IAAA,oBAAAyC,MAsBD,WACElE,KAAKkhB,gBACP,GAAC,CAAAzf,IAAA,SAAAyC,MAuBD,WAAU,IAADC,EAAA,KACHqd,EAAiBxhB,KAAKC,MAAMuhB,eAChC,OACE5c,eAACC,IAAK,CAAC3E,QAAQ,EAAMgH,MAAO,CAACwa,SAAU,SAAS5c,SAAA,CAC9CC,cAACC,IAAW,CAAC5E,OAAQJ,KAAKH,MAAM8hB,QAAQ7c,SAAEG,aAAQ,kBAClDF,cAACG,IAAS,CAACM,UAAU,wBAAuBV,SAC1CF,eAAA,SAAAE,SAAA,CACEC,cAAA,SAAAD,SACEF,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAIoC,MAAM,MAAM3B,UAAU,WAAUV,SAAEG,aAAQ,UAC9CF,cAAA,MAAIoC,MAAM,MAAKrC,SAAEG,aAAQ,UACzBF,cAAA,MAAIoC,MAAM,MAAKrC,SAAEG,aAAQ,iBACzBF,cAAA,MAAIoC,MAAM,YAGdpC,cAAA,SAAAD,SACG0c,EAAerY,KAAI,SAAC4X,EAAY3X,GAC/B,OACErE,cAAC2b,EAAU,CAETnc,OAAQJ,EAAKtE,MAAM0E,OACnBwc,WAAYA,EACZD,mBAAoB3c,EAAK2c,mBACzB/E,eAAgB5X,EAAKtE,MAAMkc,eAC3BC,mBAAoB7X,EAAKtE,MAAMmc,oBAL1B5S,EAQX,WAINrE,cAACiO,IAAW,CAAAlO,SACVC,cAACkO,IAAM,CAACF,MAAM,YAAYxL,QAASvH,KAAKH,MAAM6S,aAAa5N,SAAEG,aAAQ,eAI7E,KAACub,CAAA,CA1FwB,CAAS5f,IAAMK,WA+F3Buf,MAAsB,IAU/BE,EAAU,SAAAtb,GAAAhD,YAAAse,EAAAtb,GAAA,IAAAC,EAAA/C,YAAAoe,GAEd,SAAAA,EAAY7gB,GAAQ,IAADga,EAId,OAJctX,YAAA,KAAAme,IACjB7G,EAAAxU,EAAAtF,KAAA,KAAMF,IAMR+hB,aAAe,WACb/H,EAAKnZ,SAAS,CACZmhB,QAAQ,GAEZ,EAAChI,EAEDiI,aAAe,WACbjI,EAAKnZ,SAAS,CACZmhB,QAAQ,GAEZ,EAAChI,EAEDkI,WAAa,SAAChc,GACZA,EAAEC,iBACF6T,EAAKha,MAAMihB,mBAAmBjH,EAAKha,MAAMkhB,WAC3C,EApBElH,EAAK5Z,MAAS,CACZ4hB,QAAQ,GACPhI,CACL,CAoDC,OApDA5V,YAAAyc,EAAA,EAAAjf,IAAA,SAAAyC,MAmBD,WACE,IAAAkI,EAA2DpM,KAAKH,MAAxDkhB,EAAU3U,EAAV2U,WAAYhF,EAAc3P,EAAd2P,eAAgBC,EAAkB5P,EAAlB4P,mBAEhC1X,EAAOyc,EAAWJ,YAAc7c,IAAMgV,SAASiI,EAAWJ,YAAaI,EAAWH,UAAY,GAC9Fnd,EAAOsY,EACTtE,KAAW,KAAOsE,EAAiB,aAAejY,IAAM6T,WAAWrT,GACnEmT,KAAW,OAASzX,KAAKH,MAAM0E,OAAS,QAAUT,IAAM6T,WAAWrT,GAErE,OACEM,eAAA,MAAIgd,aAAc5hB,KAAK4hB,aAAcE,aAAc9hB,KAAK8hB,aAAc5D,QAASle,KAAK4hB,aAAa9c,SAAA,CAC9Fic,EAAWK,aACVrc,cAACgC,WAAQ,CAAAjC,SACPF,eAAA,MAAIkD,QAAQ,IAAItC,UAAU,OAAMV,SAAA,CAAEic,EAAWH,SAAU,IACrD7b,cAAA,QAAMmC,MAAO,CAAC6L,MAAM,OAAOjO,SAAEG,aAAQ,kBAIzCL,eAACmC,WAAQ,CAAAjC,SAAA,CACPC,cAAA,MAAAD,SAAIC,cAAA,KAAGtB,KAAMA,EAAMtC,OAAO,SAASqE,UAAU,gCAAgCsB,MAAOia,EAAWH,SAAUoB,IAAI,aAAYld,SAAEic,EAAWH,aACtI7b,cAAA,MAAAD,SAAKhB,IAAMmb,YAAY8B,EAAW3a,QAClCrB,cAAA,MAAAD,SAAKqO,IAAO8O,KAAKlB,EAAWvS,OAAO4P,eAGvCxZ,eAAA,MAAAE,SAAA,EACIiX,GACAhX,cAAA,KAAGtB,KAAK,IAAIwD,KAAK,SAAS,aAAYhC,aAAQ,UAAW6B,MAAO7B,aAAQ,UAAWO,UAAS,0BAAA9B,OAA4B1D,KAAKC,MAAM4hB,OAAS,GAAK,cAAgBta,QAASvH,KAAK+hB,aAE/KhG,GAAkBC,GAClBjX,cAAA,KAAGS,UAAS,gCAAA9B,OAAkC1D,KAAKC,MAAM4hB,OAAS,GAAK,cAAgBpe,KAAI,GAAAC,OAAKD,EAAI,SAASqD,MAAO7B,aAAQ,YAAa,aAAYA,aAAQ,mBAKvK,KAACyb,CAAA,CA3Da,CAAS9f,IAAMK,U,uMC/GhBihB,EAVb,SAAAA,EAAY3U,GAAMhL,YAAA,KAAA2f,GAChBliB,KAAKmiB,QAAU5U,EAAK6U,WACpBpiB,KAAKqiB,WAAalP,IAAQ,IAAItF,KAAKN,EAAK6U,YAAatU,WAAWkL,OAAO,oBACvEhZ,KAAKsO,GAAKf,EAAKe,GACftO,KAAKsiB,cAAgB/U,EAAKgV,eAC1BviB,KAAKwiB,aAAejV,EAAKkV,eACzBziB,KAAK0iB,cAAgBnV,EAAKoV,eAC5B,E,OCmFaC,EA9EW,SAAAzgB,GAAAC,YAAAwgB,EAAAzgB,GAAA,IAAAE,EAAAC,YAAAsgB,GAExB,SAAAA,EAAY/iB,GAAQ,IAADC,EAIf,OAJeyC,YAAA,KAAAqgB,IACjB9iB,EAAAuC,EAAAtC,KAAA,KAAMF,IAkBRgjB,kBAAoB,SAACC,GACnBC,IAAgBC,YAAYF,EAAMxU,IAAI3L,MAAK,WACzC,IAAIsgB,EAASnjB,EAAKG,MAAMgjB,OAAO7jB,QAAO,SAAAmO,GACpC,OAAOA,EAAKe,KAAOwU,EAAMxU,EAC3B,IACAxO,EAAKY,SAAS,CAACuiB,OAAQA,IACvB,IAAIvb,EAAMzC,aAAQ,yCAClByC,EAAMA,EAAIC,QAAQ,YAAamb,EAAMJ,eACrChX,IAAQoP,QAAQpT,EAClB,IAAG9D,OAAM,WACP,IAAI8D,EAAMzC,aAAQ,qCAClByC,EAAMA,EAAIC,QAAQ,YAAamb,EAAMJ,eACrChX,IAAQC,OAAOjE,EACjB,GACF,EAAC5H,EAEDM,OAAS,WACPN,EAAKD,MAAMO,QACb,EAnCEN,EAAKG,MAAQ,CACXgjB,OAAQ,IACRnjB,CACJ,CAkEC,OAlEAmE,YAAA2e,EAAA,EAAAnhB,IAAA,oBAAAyC,MAED,WAAqB,IAADC,EAAA,KAClBzB,IAAWwgB,eAAeljB,KAAKH,MAAM0E,QAAQ5B,MAAK,SAAAC,GAChD,IAAIqgB,EAASrgB,EAAIC,KAAKogB,OAAO9Z,KAAI,SAAAoE,GAE/B,OADY,IAAI2U,EAAM3U,EAExB,IACApJ,EAAKzD,SAAS,CACZuiB,OAAQA,GAEZ,GACF,GAAC,CAAAxhB,IAAA,SAAAyC,MAsBD,WAAU,IAAD2V,EAAA,KACP,OACEjV,eAACC,IAAK,CAAC3E,QAAQ,EAAK4E,SAAA,CAClBC,cAACC,IAAW,CAAC5E,OAAQJ,KAAKI,OAAO0E,SAAEG,aAAQ,YAC3CF,cAACG,IAAS,CAACM,UAAU,wBAAuBV,SAC1CF,eAAA,SAAAE,SAAA,CACEC,cAAA,SAAAD,SACEF,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAIoC,MAAM,MAAM3B,UAAU,WAAUV,SAAEG,aAAQ,UAC9CF,cAAA,MAAIoC,MAAM,MAAKrC,SAAEG,aAAQ,WACzBF,cAAA,MAAIoC,MAAM,MAAKrC,SAAEG,aAAQ,iBACzBF,cAAA,MAAIoC,MAAM,aAGdpC,cAAA,SAAAD,SACG9E,KAAKC,MAAMgjB,OAAO9Z,KAAI,SAACoE,EAAMnE,GAC5B,OACErE,cAACoe,EAAS,CAERC,UAAW7V,EACXsV,kBAAmBhJ,EAAKgJ,mBAFnBzZ,EAKX,WAINrE,cAACiO,IAAW,CAAAlO,SACVC,cAACkO,IAAM,CAACF,MAAM,YAAYxL,QAASvH,KAAKI,OAAO0E,SAAEG,aAAQ,eAIjE,KAAC2d,CAAA,CAzEuB,CAAShiB,IAAMK,WAqFnCkiB,EAAS,SAAA/d,GAAAhD,YAAA+gB,EAAA/d,GAAA,IAAAC,EAAA/C,YAAA6gB,GAEb,SAAAA,EAAYtjB,GAAQ,IAADqb,EAId,OAJc3Y,YAAA,KAAA4gB,IACjBjI,EAAA7V,EAAAtF,KAAA,KAAMF,IAMR+hB,aAAe,WACb1G,EAAKxa,SAAS,CACZmhB,QAAQ,GAEZ,EAAC3G,EAED4G,aAAe,WACb5G,EAAKxa,SAAS,CACZmhB,QAAQ,GAEZ,EAfE3G,EAAKjb,MAAS,CACZ4hB,QAAQ,GACP3G,CACL,CA8BC,OA9BAjX,YAAAkf,EAAA,EAAA1hB,IAAA,SAAAyC,MAcD,WACE,IAAMkf,EAAYpjB,KAAKH,MAAMujB,UACzB3f,EAAOgU,KAAW,UAAY2L,EAAU9U,GAAK,IAC7C9I,EAAYxF,KAAKC,MAAM4hB,OAAS,0BAA4B,6BAChE,OACEjd,eAAA,MAAIgd,aAAc5hB,KAAK4hB,aAAcE,aAAc9hB,KAAK8hB,aAAahd,SAAA,CACnEC,cAAA,MAAIS,UAAU,OAAMV,SAClBC,cAAA,KAAGtB,KAAMA,EAAMtC,OAAO,SAAQ2D,SAAEhB,IAAMuf,YAAYD,EAAUV,mBAE9D3d,cAAA,MAAAD,SAAKse,EAAUd,gBACfvd,cAAA,MAAAD,SAAKqO,IAAOiQ,EAAUf,YAAYjE,YAClCrZ,cAAA,MAAAD,SACEC,cAAA,KAAGS,UAAWA,EAAW+B,QAASvH,KAAKH,MAAMgjB,kBAAkBxiB,KAAKL,KAAMojB,SAIlF,KAACD,CAAA,CArCY,CAASviB,IAAMK,W,gBCjCfqiB,EAlDG,SAAAnhB,GAAAC,YAAAkhB,EAAAnhB,GAAA,IAAAE,EAAAC,YAAAghB,GAEhB,SAAAA,EAAYzjB,GAAQ,IAADC,EAKf,OALeyC,YAAA,KAAA+gB,IACjBxjB,EAAAuC,EAAAtC,KAAA,KAAMF,IACDI,MAAQ,CACXsjB,cAAe,KACfvgB,WAAW,GACXlD,CACJ,CAqCC,OArCAmE,YAAAqf,EAAA,EAAA7hB,IAAA,oBAAAyC,MAED,WAAqB,IAADC,EAAA,KAClBzB,IAAW8gB,oBAAoBxjB,KAAKH,MAAM0E,OAAQvE,KAAKH,MAAM4jB,UAAU9gB,MAAK,SAAAC,GAC1EF,IAAWghB,eAAe9gB,EAAIC,MAAMF,MAAK,SAAAC,GACvCuB,EAAKzD,SAAS,CACZ6iB,cAAe3gB,EAAIC,KACnBG,WAAW,GAEf,GACF,IAAGY,OAAM,SAAAC,GACP,IAAI2I,EAAa1I,IAAMC,YAAYF,GACnC6H,IAAQC,OAAOa,EACjB,GACF,GAAC,CAAA/K,IAAA,SAAAyC,MAED,WACE,OACEU,eAACC,IAAK,CAAC3E,QAAQ,EAAME,OAAQJ,KAAKH,MAAM6S,aAAclN,UAAU,gBAAgBY,KAAK,KAAItB,SAAA,CACvFF,eAACI,IAAW,CAAAF,SAAA,CAAE9E,KAAKH,MAAM+G,SACvB7B,cAAA,KAAGS,UAAU,qBAAqB/B,KAAMzD,KAAKH,MAAM4D,KAAMtC,OAAO,SAAQ2D,SAACC,cAAA,KAAGS,UAAU,0BAExFT,cAACG,IAAS,CAAAJ,SACP9E,KAAKC,MAAM+C,UACV+B,cAACQ,IAAO,IACRR,cAAC4e,IAAc,CACbC,gBAAiB5jB,KAAKC,MAAMsjB,cAC5BM,SAAS,EACTC,aAAcxI,KAAW,4BAI/BvW,cAACiO,IAAW,CAAAlO,SACVC,cAACkO,IAAM,CAACF,MAAM,YAAYxL,QAASvH,KAAKH,MAAM6S,aAAa5N,SAAEG,aAAQ,eAI7E,KAACqe,CAAA,CA7Ce,CAAS1iB,IAAMK,WCM3B4a,G,OAAW,SAAA1Z,GAAAC,YAAAyZ,EAAA1Z,GAAA,IAAAE,EAAAC,YAAAuZ,GAEf,SAAAA,EAAYhc,GAAQ,IAADC,EAOf,OAPeyC,YAAA,KAAAsZ,IACjB/b,EAAAuC,EAAAtC,KAAA,KAAMF,IASRkkB,kBAAoB,SAAC1C,GACnBvhB,EAAKY,SAAS,CACZ2gB,WAAYA,EACZ2C,sBAAuBlkB,EAAKG,MAAM+jB,sBAEtC,EAAClkB,EAEDmkB,cAAgB,WACdnkB,EAAKY,SAAS,CACZsjB,sBAAsB,GAE1B,EAAClkB,EAEDokB,aAAe,WACbpkB,EAAKY,SAAS,CACZyjB,gBAAiBrkB,EAAKG,MAAMkkB,gBAEhC,EAACrkB,EAEDskB,aAAe,WACbtkB,EAAKY,SAAS,CACZ2jB,kBAAmBvkB,EAAKG,MAAMokB,kBAElC,EA/BEvkB,EAAKG,MAAQ,CACXohB,WAAY,KACZ2C,sBAAsB,EACtBG,gBAAgB,EAChBE,kBAAkB,GAClBvkB,CACJ,CAqHC,OArHAmE,YAAA4X,EAAA,EAAApa,IAAA,SAAAyC,MA2BD,WAAU,IAADC,EAAA,KACPC,EAAoFpE,KAAKH,MAAnF0E,EAAMH,EAANG,OAAQuX,EAAW1X,EAAX0X,YAAavC,EAAYnV,EAAZmV,aAAc+K,EAAclgB,EAAdkgB,eAAgBC,EAAWngB,EAAXmgB,YAAa/e,EAASpB,EAAToB,eAG/C4L,IAAnBkT,IACFA,EAAiB,WAEClT,IAAhBmT,IACFA,EAAc,GAGhB,IAAI9gB,EAA0B,OAAnB6gB,EAA0B7M,KAAW,OAASlT,EAAS,QAAUT,IAAMgV,SAASgD,EAAawI,EAAezc,MAAS,aAAe,GAC3I4b,EAA8B,OAAnBa,EAA0BxI,EAAcwI,EAAezc,KAAO,GAC7E,OACEjD,eAAA,OAAKY,UAAS,iBAAA9B,OAAmB8B,GAAwB,IAAKV,SAAA,CAC3DyU,EAAajY,OAAS,GACrByD,cAAA,MAAIS,UAAU,gBAAeV,SAC1ByU,EAAapQ,KAAI,SAACsQ,GACjB,OACE7U,eAAA,MAAyBY,UAAU,gBAAeV,SAAA,CAChDC,cAAA,QAAMS,UAAU,WAAW0B,MAAO,CAAC2X,gBAAgBpF,EAAY1G,SAC/DhO,cAAA,QAAMS,UAAU,gBAAgBsB,MAAO2S,EAAY5R,KAAK/C,SAAE2U,EAAY5R,OACtE9C,cAAA,UAAQwJ,KAAK,SAAS/I,UAAU,yCAAyC+B,QAASpD,EAAK4f,kBAAkB1jB,KAAK8D,EAAMsV,GAAa3U,SAC9H2U,EAAYE,UAAY,EAAIF,EAAYE,UAAY,SAAWF,EAAYE,UAAY,YAJnFF,EAAYnL,GAQzB,MAGJ1J,eAAA,OAAKY,UAAY+T,EAAajY,OAAS,GAAKgjB,EAAkB,sBAAwB,iBAAiBxf,SAAA,CAChF,OAAnBwf,GAA2BtX,SAASsX,EAAele,MAAQ,GAC3DxB,eAAA,QAAMY,UAAU,YAAY+B,QAASvH,KAAKokB,aAAatf,SAAA,CACrDC,cAAA,QAAMS,UAAU,8BAChBT,cAAA,QAAMS,UAAU,gBAAeV,SAAEwf,EAAezc,UAG/B,OAAnByc,GAA2BtX,SAASsX,EAAele,MAAQ,GAC3DxB,eAAA,QAAMY,UAAU,YAAWV,SAAA,CACzBC,cAAA,QAAMS,UAAU,8BAChBT,cAAA,KAAGS,UAAU,gBAAgB/B,KAAMA,EAAMtC,OAAO,SAAS6gB,IAAI,aAAYld,SAAEwf,EAAezc,UAG7F0c,EAAc,GACb3f,eAAA,QAAMY,UAAU,YAAWV,SAAA,CACzBC,cAAA,QAAMS,UAAU,8BAChBT,cAAA,QAAMS,UAAU,gBAAeV,SAAEG,aAAQ,WACzCF,cAAA,UAAQwJ,KAAK,SAAS/I,UAAU,yCAAyC+B,QAASvH,KAAKkkB,aAAapf,SACjGyf,EAAc,EAAIA,EAAc,SAAWA,EAAc,gBAKjEvkB,KAAKC,MAAM+jB,sBACVjf,cAACkX,IAAW,CAAAnX,SACVC,cAACyb,IAAqB,CACpBjc,OAAQA,EACR8c,WAAYrhB,KAAKC,MAAMohB,WACvBM,QAAS3hB,KAAKikB,cACdvR,aAAc1S,KAAK+jB,kBACnB5C,mBAAoBnhB,KAAKH,MAAMshB,mBAC/BV,iBAAkBzgB,KAAKH,MAAM4gB,iBAC7B1E,eAAgB/b,KAAKH,MAAMkc,eAC3BC,mBAAoBhc,KAAKH,MAAMmc,uBAKpChc,KAAKC,MAAMkkB,gBACVpf,cAACkX,IAAW,CAAAnX,SACVC,cAAC6d,EAAoB,CACnBxiB,OAAQJ,KAAKkkB,aACb3f,OAAQvE,KAAKH,MAAM0E,WAKxBvE,KAAKC,MAAMokB,kBACVtf,cAACkX,IAAW,CAAAnX,SACVC,cAACue,EAAY,CACX5Q,aAAc1S,KAAKokB,aACnB7f,OAAQA,EACRkf,SAAUA,EACVhgB,KAAMA,EACNmD,SAAU0d,EAAezc,WAMrC,KAACgU,CAAA,CA/Hc,CAASjb,IAAMK,YAoIjB4a,K,4HChJTO,EAA4B,SAAAja,GAAAC,YAAAga,EAAAja,GAAA,IAAAE,EAAAC,YAAA8Z,GAAA,SAAAA,IAAA,OAAA7Z,YAAA,KAAA6Z,GAAA/Z,EAAA5C,MAAA,KAAA4B,UAAA,CA+B/B,OA/B+B4C,YAAAmY,EAAA,EAAA3a,IAAA,SAAAyC,MAEhC,WAEE,IAAAE,EAAkEpE,KAAKH,MAAjE0O,EAAInK,EAAJmK,KAAOyI,EAAsB5S,EAAtB4S,uBAAwBH,EAAwBzS,EAAxByS,yBACjC/P,EAAiB,SAATyH,EAAkBtJ,aAAQ,oBAAsBA,aAAQ,oBACpE6B,EAAQA,EAAMa,QAAQ,QAASkP,GAC/B,IAAI2N,EAAgB,CAClBrd,MAAO6P,EAAyB,IAChCyN,WAAY,OACZC,UAAW,QAEb,OACE9f,eAACC,IAAK,CAAC3E,QAAQ,EAAK4E,SAAA,CAClBC,cAACC,IAAW,CAAC5E,OAAQJ,KAAKH,MAAM0D,aAAauB,SAAEgC,IAC/C/B,cAACG,IAAS,CAACgC,MAAO,CAACyd,UAAW,QAAQ7f,SACpCC,cAAA,OAAKS,UAAU,WAAW0B,MAAO,CAAC8B,OAAQ,QAAQlE,SAChDC,cAAA,OACES,UAAU,oBACVyB,KAAK,cACLC,MAAOsd,EACP,gBAAexN,EACf,gBAAc,IACd,gBAAc,MAAKlS,SAElBkS,EAAyB,YAMtC,KAACoF,CAAA,CA/B+B,CAASxb,IAAMK,WAoClCmb,K","file":"static/js/sharedDirView.chunk.js","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from './Tooltip';\nimport { omit } from './utils';\nvar omitKeys = ['defaultOpen'];\n\nvar UncontrolledTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledTooltip, _Component);\n\n  function UncontrolledTooltip(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledTooltip.prototype;\n\n  _proto.toggle = function toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Tooltip, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledTooltip;\n}(Component);\n\nexport { UncontrolledTooltip as default };\nUncontrolledTooltip.propTypes = _objectSpread({\n  defaultOpen: PropTypes.bool\n}, Tooltip.propTypes);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext, fileServerRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../loading';\n\nconst propTypes = {\n  token: PropTypes.string,\n  path: PropTypes.string.isRequired,\n  repoID: PropTypes.string,\n  target: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array\n  ]),\n  toggleDialog: PropTypes.func.isRequired\n};\n\nlet interval;\n\nclass ZipDownloadDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      zipProgress: null\n    };\n  }\n\n  componentDidMount() {\n    const { token, path, repoID, target } = this.props;\n    let getZipTask;\n    if (token) {\n      getZipTask = target.length ?\n        seafileAPI.getShareLinkDirentsZipTask(token, path, target) :\n        seafileAPI.getShareLinkZipTask(token, path);\n    } else {\n      getZipTask = seafileAPI.zipDownload(repoID, path, target);\n    }\n    getZipTask.then((res) => {\n      const zipToken = res.data['zip_token'];\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        zipToken: zipToken\n      });\n      this.queryZipProgress();\n      interval = setInterval(this.queryZipProgress, 1000);\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  }\n\n  queryZipProgress = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.queryZipProgress(zipToken).then((res) => {\n      const data = res.data;\n      if (data.failed == 1) {\n        clearInterval(interval);\n        this.setState({\n          isLoading: false,\n          errorMsg: data.failed_reason\n        });\n      } else {\n        this.setState({\n          zipProgress: data.total == 0 ? '100%' : (data.zipped/data.total*100).toFixed(2) + '%'\n        });\n        if (data['total'] == data['zipped']) {\n          clearInterval(interval);\n          this.props.toggleDialog();\n          location.href = `${fileServerRoot}zip/${zipToken}`;\n        }\n      }\n    }).catch((error) => {\n      clearInterval(interval);\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  }\n\n  cancelZipTask = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.cancelZipTask(zipToken).then((res) => {\n    // do nothing\n    }).catch((error) => {\n    // do nothing\n    });\n  }\n\n  toggleDialog = () => {\n    const zipProgress = this.state.zipProgress;\n    if (zipProgress && zipProgress != '100%') {\n      clearInterval(interval);\n      this.cancelZipTask();\n    }\n    this.props.toggleDialog();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.toggleDialog}>\n        <ModalHeader toggle={this.toggleDialog}>{gettext('Download')}</ModalHeader>\n        <ModalBody>\n          <Content data={this.state} />\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  render() {\n    const {isLoading, errorMsg, zipProgress} = this.props.data;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-4 text-center\">{errorMsg}</p>;\n    }\n\n    return <p className=\"mt-4 text-center\">{`${gettext('Packaging...')} ${zipProgress}`}</p>;\n  }\n}\n\nZipDownloadDialog.propTypes = propTypes;\n\nexport default ZipDownloadDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  resumableFile: PropTypes.object.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n};\n\nconst UPLOAD_UPLOADING = 'uploading';\nconst UPLOAD_ERROR = 'error';\nconst UPLOAD_ISSAVING = 'isSaving';\nconst UPLOAD_UPLOADED = 'uploaded';\n\nclass UploadListItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadState: UPLOAD_UPLOADING\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { resumableFile } = nextProps;\n    let uploadState = UPLOAD_UPLOADING;\n\n    if (resumableFile.error) {\n      uploadState = UPLOAD_ERROR;\n    } else {\n      if (resumableFile.remainingTime === 0 && !resumableFile.isSaved) {\n        uploadState = UPLOAD_ISSAVING;\n      }\n\n      if (resumableFile.isSaved) {\n        uploadState = UPLOAD_UPLOADED;\n      }\n    }\n\n    this.setState({uploadState: uploadState});\n  }\n\n  onUploadCancel = (e) => {\n    e.preventDefault();\n    this.props.onUploadCancel(this.props.resumableFile);\n  }\n\n  onUploadRetry = (e) => {\n    e.preventDefault();\n    this.props.onUploadRetry(this.props.resumableFile);\n  }\n\n  formatFileSize = (size) => {\n    if (typeof size !== 'number') {\n      return '';\n    }\n    if (size >= 1000 * 1000 * 1000) {\n      return (size / (1000 * 1000 * 1000)).toFixed(1) + ' G';\n    }\n    if (size >= 1000 * 1000) {\n      return (size / (1000 * 1000)).toFixed(1) + ' M';\n    }\n    if (size >= 1000) {\n      return (size / 1000).toFixed(1) + ' K';\n    }\n    return size.toFixed(1) + ' B';\n  }\n\n  render() {\n    let { resumableFile } = this.props;\n    let progress = Math.round(resumableFile.progress() * 100);\n    let error = resumableFile.error;\n\n    const fileName = resumableFile.newFileName;\n    const size = this.formatFileSize(resumableFile.size);\n\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={fileName}>{fileName}</div>\n        </td>\n        <td className=\"ellipsis\">\n          <span className=\"file-size\" title={size}>{size}</span>\n        </td>\n        <td className=\"upload-progress ellipsis\">\n          {(this.state.uploadState === UPLOAD_UPLOADING || this.state.uploadState === UPLOAD_ISSAVING) &&\n            <Fragment>\n              {resumableFile.size >= (100 * 1000 * 1000) &&\n                <Fragment>\n                  {resumableFile.isUploading() && (\n                    <div className=\"progress-container\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                      {(resumableFile.remainingTime === -1) && <div className=\"progress-text\">{gettext('Preparing to upload...')}</div>}\n                      {(resumableFile.remainingTime > 0) && <div className=\"progress-text\">{gettext('Remaining')}{' '}{Utils.formatTime(resumableFile.remainingTime)}</div>}\n                      {(resumableFile.remainingTime === 0) && <div className=\"progress-text\">{gettext('Indexing...')}</div>}\n                    </div>\n                  )}\n                  {!resumableFile.isUploading() && (\n                    <div className=\"progress-container d-flex align-items-center\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              }\n              {(resumableFile.size < (100 * 1000 * 1000)) &&\n                <div className=\"progress-container d-flex align-items-center\">\n                  <div className=\"progress\">\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </div>\n              }\n            </Fragment>\n          }\n          {this.state.uploadState === UPLOAD_ERROR && (\n            <div className=\"message err-message ml-0\" dangerouslySetInnerHTML={{__html: error}}></div>\n          )}\n        </td>\n        <td className=\"upload-operation ellipsis\">\n          <Fragment>\n            {this.state.uploadState === UPLOAD_UPLOADING && (\n              <a href=\"#\" onClick={this.onUploadCancel}>{gettext('Cancel')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ERROR && (\n              <a href=\"#\" onClick={this.onUploadRetry}>{gettext('Retry')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ISSAVING && (\n              <span className=\"saving\">{gettext('Saving...')}</span>\n            )}\n            {this.state.uploadState === UPLOAD_UPLOADED && (\n              <span className=\"uploaded\">{gettext('Uploaded')}</span>\n            )}\n          </Fragment>\n        </td>\n      </tr>\n    );\n  }\n}\n\nUploadListItem.propTypes = propTypes;\n\nexport default UploadListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext, maxUploadFileSize } from '../../utils/constants';\n\nconst propTypes = {\n  file: PropTypes.object,\n};\n\nclass ForbidUploadListItem extends React.Component {\n\n  render() {\n    let { file } = this.props;\n    let msg = gettext('Please upload files less than {placeholder}M').replace('{placeholder}', maxUploadFileSize);\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={file.name}>{file.name}</div>\n        </td>\n\n        <td colSpan={3} className=\"error\">{msg}</td>\n      </tr>\n    );\n  }\n}\n\nForbidUploadListItem.propTypes = propTypes;\n\nexport default ForbidUploadListItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport UploadListItem from './upload-list-item';\nimport ForbidUploadListItem from './forbid-upload-list-item';\n\nconst propTypes = {\n  uploadBitrate: PropTypes.number.isRequired,\n  totalProgress: PropTypes.number.isRequired,\n  retryFileList: PropTypes.array.isRequired,\n  uploadFileList: PropTypes.array.isRequired,\n  forbidUploadFileList: PropTypes.array.isRequired,\n  onCloseUploadDialog: PropTypes.func.isRequired,\n  onCancelAllUploading: PropTypes.func.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n  onUploadRetryAll: PropTypes.func.isRequired,\n  allFilesUploaded: PropTypes.bool.isRequired,\n};\n\nclass UploadProgressDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMinimized: false\n    };\n  }\n\n  onCancelAllUploading = () => {\n    this.props.onCancelAllUploading();\n  }\n\n  onMinimizeUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({isMinimized: !this.state.isMinimized});\n  }\n\n  onCloseUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.props.onCloseUploadDialog();\n  }\n\n  render() {\n\n    let uploadBitrate = Utils.formatBitRate(this.props.uploadBitrate);\n    let uploadedMessage = gettext('File Upload');\n    let uploadingMessage = gettext('File Uploading...') + ' ' + this.props.totalProgress + '% (' + uploadBitrate + ')';\n\n    let uploadingOptions = (<span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>);\n\n    let uploadedOptions = (\n      <Fragment>\n        <span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>\n        <span className=\"sf2-icon-x1\" onClick={this.onCloseUpload}></span>\n      </Fragment>\n    );\n\n    let { totalProgress, allFilesUploaded, retryFileList } = this.props;\n\n    return (\n      <div className=\"uploader-list-view mw-100\" style={{height: this.state.isMinimized ? '2.25rem' : '20rem'}}>\n        <div className=\"uploader-list-header\">\n          <div className=\"title\">\n            {totalProgress === 100 ? uploadedMessage : uploadingMessage}\n          </div>\n          <div className=\"uploader-options\">\n            {totalProgress === 100 ||  allFilesUploaded ? uploadedOptions : uploadingOptions}\n          </div>\n        </div>\n        <div className=\"uploader-list-content\">\n          <div className=\"text-right mt-2\">\n            {retryFileList.length > 0 ?\n              <span className=\"cursor-pointer\" onClick={this.props.onUploadRetryAll}>{gettext('Retry All')}</span>\n              :\n              <span className=\"cursor-pointer disabled-link\">{gettext('Retry All')}</span>\n            }\n            {!allFilesUploaded ?\n              <span className=\"cursor-pointer ml-3\" onClick={this.onCancelAllUploading}>{gettext('Cancel All')}</span>\n              :\n              <span className=\"cursor-pointer ml-3 disabled-link\" >{gettext('Cancel All')}</span>\n            }\n          </div>\n          <table className=\"table-thead-hidden\">\n            <thead>\n              <tr>\n                <th width=\"30%\">{gettext('name')}</th>\n                <th width=\"20%\">{gettext('size')}</th>\n                <th width=\"30%\">{gettext('progress')}</th>\n                <th width=\"20%\">{gettext('state')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.props.forbidUploadFileList.map((file, index) => {\n                  return (<ForbidUploadListItem key={index} file={file} />);\n                })\n              }\n              {\n                this.props.uploadFileList.map((resumableFile, index) => {\n                  return (\n                    <UploadListItem\n                      key={index}\n                      resumableFile={resumableFile}\n                      onUploadCancel={this.props.onUploadCancel}\n                      onUploadRetry={this.props.onUploadRetry}\n                    />\n                  );\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nUploadProgressDialog.propTypes = propTypes;\n\nexport default UploadProgressDialog;\n","// the parent folder of this file is copied from components/file-uploader\n// this file is modified according to the requirements of 'file upload' in 'shared dir link'\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Resumablejs from '@seafile/resumablejs';\nimport MD5 from 'MD5';\nimport { resumableUploadFileBlockSize, maxUploadFileSize, maxNumberOfFilesForFileupload } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport { gettext } from '../../utils/constants';\nimport UploadProgressDialog from './upload-progress-dialog';\nimport toaster from '../toast';\nimport '../../css/file-uploader.css';\n\nconst propTypes = {\n  token: PropTypes.string.isRequired,\n  repoID: PropTypes.string.isRequired,\n  //direntList: PropTypes.array.isRequired,\n  filetypes: PropTypes.array,\n  chunkSize: PropTypes.number,\n  withCredentials: PropTypes.bool,\n  testMethod: PropTypes.string,\n  testChunks: PropTypes.number,\n  simultaneousUploads: PropTypes.number,\n  fileParameterName: PropTypes.string,\n  minFileSizeErrorCallback: PropTypes.func,\n  fileTypeErrorCallback: PropTypes.func,\n  dragAndDrop: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  relativePath: PropTypes.string.isRequired,\n  onFileUploadSuccess: PropTypes.func.isRequired\n};\n\nclass FileUploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      retryFileList: [],\n      uploadFileList: [],\n      forbidUploadFileList: [],\n      totalProgress: 0,\n      isUploadProgressDialogShow: false,\n      isUploadRemindDialogShow: false,\n      currentResumableFile: null,\n      uploadBitrate: 0,\n      allFilesUploaded: false,\n    };\n\n    this.uploadInput = React.createRef();\n\n    this.notifiedFolders = [];\n\n    this.timestamp = null;\n    this.loaded = 0;\n    this.bitrateInterval = 500; // Interval in milliseconds to calculate the bitrate\n    window.onbeforeunload = this.onbeforeunload;\n    this.isUploadLinkLoaded = false;\n  }\n\n  componentDidMount() {\n    this.resumable = new Resumablejs({\n      target: '',\n      query: this.setQuery || {},\n      fileType: this.props.filetypes,\n      maxFiles: maxNumberOfFilesForFileupload || undefined,\n      maxFileSize: maxUploadFileSize * 1000 * 1000 || undefined,\n      testMethod: this.props.testMethod || 'post',\n      testChunks: this.props.testChunks || false,\n      headers: this.setHeaders || {},\n      withCredentials: this.props.withCredentials || false,\n      chunkSize: parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1 * 1024 * 1024,\n      simultaneousUploads: this.props.simultaneousUploads || 1,\n      fileParameterName: this.props.fileParameterName,\n      generateUniqueIdentifier: this.generateUniqueIdentifier,\n      forceChunkSize: true,\n      maxChunkRetries: 3,\n      minFileSize: 0,\n    });\n\n    this.resumable.assignBrowse(this.uploadInput.current, true);\n\n    //Enable or Disable DragAnd Drop\n    if (this.props.dragAndDrop === true) {\n      this.resumable.enableDropOnDocument();\n    }\n\n    this.bindCallbackHandler();\n    this.bindEventHandler();\n  }\n\n  componentWillUnmount = () => {\n    window.onbeforeunload = null;\n    if (this.props.dragAndDrop === true) {\n      this.resumable.disableDropOnDocument();\n    }\n  }\n\n  onbeforeunload = () => {\n    if (window.uploader &&\n        window.uploader.isUploadProgressDialogShow &&\n        window.uploader.totalProgress !== 100) {\n      return '';\n    }\n  }\n\n  bindCallbackHandler = () => {\n    let { minFileSizeErrorCallback, fileTypeErrorCallback } = this.props;\n\n    if (this.maxFilesErrorCallback) {\n      this.resumable.opts.maxFilesErrorCallback = this.maxFilesErrorCallback;\n    }\n\n    if (minFileSizeErrorCallback) {\n      this.resumable.opts.minFileSizeErrorCallback = this.props.minFileSizeErrorCallback;\n    }\n\n    if (this.maxFileSizeErrorCallback) {\n      this.resumable.opts.maxFileSizeErrorCallback = this.maxFileSizeErrorCallback;\n    }\n\n    if (fileTypeErrorCallback) {\n      this.resumable.opts.fileTypeErrorCallback = this.props.fileTypeErrorCallback;\n    }\n\n  }\n\n  bindEventHandler = () => {\n    this.resumable.on('chunkingComplete', this.onChunkingComplete.bind(this));\n    this.resumable.on('fileAdded', this.onFileAdded.bind(this));\n    this.resumable.on('filesAddedComplete', this.filesAddedComplete.bind(this));\n    this.resumable.on('fileProgress', this.onFileProgress.bind(this));\n    this.resumable.on('fileSuccess', this.onFileUploadSuccess.bind(this));\n    this.resumable.on('progress', this.onProgress.bind(this));\n    this.resumable.on('complete', this.onComplete.bind(this));\n    this.resumable.on('pause', this.onPause.bind(this));\n    this.resumable.on('fileRetry', this.onFileRetry.bind(this));\n    this.resumable.on('fileError', this.onFileError.bind(this));\n    this.resumable.on('error', this.onError.bind(this));\n    this.resumable.on('beforeCancel', this.onBeforeCancel.bind(this));\n    this.resumable.on('cancel', this.onCancel.bind(this));\n    this.resumable.on('dragstart', this.onDragStart.bind(this));\n  }\n\n  maxFilesErrorCallback = (files, errorCount) => {\n    let maxFiles = maxNumberOfFilesForFileupload;\n    let message = gettext('Please upload no more than {maxFiles} files at a time.');\n    message = message.replace('{maxFiles}', maxFiles);\n    toaster.danger(message);\n  }\n\n  maxFileSizeErrorCallback = (file) => {\n    let { forbidUploadFileList } = this.state;\n    forbidUploadFileList.push(file);\n    this.setState({forbidUploadFileList: forbidUploadFileList});\n  }\n\n  onChunkingComplete = (resumableFile) => {\n\n    let allFilesUploaded = this.state.allFilesUploaded;\n    if (allFilesUploaded === true) {\n      this.setState({allFilesUploaded: false});\n    }\n\n    //get parent_dir relative_path\n    let path = this.props.path === '/' ? '/' : this.props.path + '/';\n    let fileName = resumableFile.fileName;\n    let relativePath = resumableFile.relativePath;\n    let isFile = fileName === relativePath;\n\n    //update formdata\n    resumableFile.formData = {};\n    if (isFile) { // upload file\n      resumableFile.formData  = {\n        parent_dir: path,\n      };\n    } else { // upload folder\n      let relative_path = relativePath.slice(0, relativePath.lastIndexOf('/') + 1);\n      resumableFile.formData  = {\n        parent_dir: path,\n        relative_path: relative_path\n      };\n    }\n  }\n\n  onFileAdded = (resumableFile, files) => {\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    // uploading is file and only upload one file\n    if (isFile && files.length === 1) {\n      let hasRepetition = false;\n      /*\n      let direntList = this.props.direntList;\n      for (let i = 0; i < direntList.length; i++) {\n        if (direntList[i].type === 'file' && direntList[i].name === resumableFile.fileName) {\n          hasRepetition = true;\n          break;\n        }\n      }\n      */\n      if (hasRepetition) {\n        this.setState({\n          isUploadRemindDialogShow: true,\n          currentResumableFile: resumableFile,\n        });\n      } else {\n        this.setUploadFileList(this.resumable.files);\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumableUpload(resumableFile);\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    } else {\n      this.setUploadFileList(this.resumable.files);\n      if (!this.isUploadLinkLoaded) {\n        this.isUploadLinkLoaded = true;\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumable.upload();\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    }\n  }\n\n  resumableUpload = (resumableFile) => {\n    let { repoID, path } = this.props;\n    seafileAPI.getFileUploadedBytes(repoID, path, resumableFile.fileName).then(res => {\n      let uploadedBytes = res.data.uploadedBytes;\n      let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n      let offset = Math.floor(uploadedBytes / blockSize);\n      resumableFile.markChunksCompleted(offset);\n      this.resumable.upload();\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  filesAddedComplete = (resumable, files) => {\n    let { forbidUploadFileList } = this.state;\n    if (forbidUploadFileList.length > 0 && files.length === 0) {\n      this.setState({\n        isUploadProgressDialogShow: true,\n        totalProgress: 100\n      });\n    }\n  }\n\n  setUploadFileList = () => {\n    let uploadFileList = this.resumable.files;\n    this.setState({\n      uploadFileList: uploadFileList,\n      isUploadProgressDialogShow: true,\n    });\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n  }\n\n  onFileProgress = (resumableFile) => {\n    let uploadBitrate = this.getBitrate();\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        if (uploadBitrate) {\n          let lastSize = (item.size - (item.size * item.progress())) * 8;\n          let time = Math.floor(lastSize / uploadBitrate);\n          item.remainingTime = time;\n        }\n      }\n      return item;\n    });\n\n    this.setState({\n      uploadBitrate: uploadBitrate,\n      uploadFileList: uploadFileList\n    });\n  }\n\n  getBitrate = () => {\n    let loaded = 0;\n    let uploadBitrate = 0;\n    let now = new Date().getTime();\n\n    this.resumable.files.forEach(file => {\n      loaded += file.progress() * file.size;\n    });\n\n    if (this.timestamp) {\n      let timeDiff = (now - this.timestamp);\n      if (timeDiff < this.bitrateInterval) {\n        return this.state.uploadBitrate;\n      }\n\n      // 1. Cancel will produce loaded greater than this.loaded\n      // 2. reset can make this.loaded to be 0\n      if (loaded < this.loaded || this.loaded === 0) {\n        this.loaded = loaded; //\n      }\n\n      uploadBitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\n    }\n\n    this.timestamp = now;\n    this.loaded = loaded;\n\n    return uploadBitrate;\n  }\n\n  onProgress = () => {\n    let progress = Math.round(this.resumable.progress() * 100);\n    this.setState({totalProgress: progress});\n    Utils.registerGlobalVariable('uploader', 'totalProgress', progress);\n  }\n\n  onFileUploadSuccess = (resumableFile, message) => {\n    let formData = resumableFile.formData;\n    let currentTime = new Date().getTime()/1000;\n    message = formData.replace ? message : JSON.parse(message)[0];\n    if (formData.relative_path) { // upload folder\n      // 'upload folder' is not supported\n      /*\n      let relative_path = formData.relative_path;\n      let dir_name = relative_path.slice(0, relative_path.indexOf('/'));\n      let dirent = {\n        id: message.id,\n        name: dir_name,\n        type: 'dir',\n        mtime: currentTime,\n      };\n\n      // update folders cache\n      let isExist = this.notifiedFolders.some(item => {return item.name === dirent.name;});\n      if (!isExist) {\n        this.notifiedFolders.push(dirent);\n        this.props.onFileUploadSuccess(dirent);\n      }\n\n      // update uploadFileList\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = relative_path + message.name;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n      */\n    }\n\n    // replacing file is not allowed in shared link with 'can_upload' permission\n    /*\n    if (formData.replace) { // upload file -- replace exist file\n      let fileName = resumableFile.fileName;\n      let dirent = {\n        id: message,\n        name: fileName,\n        type: 'file',\n        mtime: currentTime\n      };\n      this.props.onFileUploadSuccess(dirent); // this contance: just one file\n\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = fileName;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n    }\n    */\n\n    // upload file -- add files\n    let dirent = {\n      id: message.id,\n      type: 'file',\n      name: message.name,\n      size: message.size,\n      mtime: currentTime,\n    };\n    this.props.onFileUploadSuccess(dirent); // this contance:  no repetition file\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        item.newFileName = message.name;\n        item.isSaved = true;\n      }\n      return item;\n    });\n    this.setState({uploadFileList: uploadFileList});\n  }\n\n  onFileError = (resumableFile, message) => {\n    let error = '';\n    if (!message) {\n      error = gettext('Network error');\n    } else {\n      // eg: '{\"error\": \"Internal error\" \\n }'\n      let errorMessage = message.replace(/\\n/g, '');\n      errorMessage  = JSON.parse(errorMessage);\n      error = errorMessage.error;\n      if (error === 'File locked by others.') {\n        error = gettext('File is locked by others.');\n      }\n      if (error === 'Internal error.') {\n        error = gettext('Internal Server Error');\n      }\n    }\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        this.state.retryFileList.push(item);\n        item.error = error;\n      }\n      return item;\n    });\n\n    this.loaded = 0;  // reset loaded data;\n    this.setState({\n      retryFileList: this.state.retryFileList,\n      uploadFileList: uploadFileList\n    });\n\n  }\n\n  onComplete = () => {\n    this.notifiedFolders = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({allFilesUploaded: true});\n  }\n\n  onPause = () => {\n\n  }\n\n  onError = (message) => {\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    // After the error, the user can switch windows\n    Utils.registerGlobalVariable('uploader', 'totalProgress', 100);\n  }\n\n  onFileRetry = () => {\n    // todo, cancel upload file, uploded again;\n  }\n\n  onBeforeCancel = () => {\n    // todo, giving a pop message ?\n  }\n\n  onCancel = () => {\n\n  }\n\n  setHeaders = (resumableFile, resumable) => {\n    let offset = resumable.offset;\n    let chunkSize = resumable.getOpt('chunkSize');\n    let fileSize = resumableFile.size === 0 ? 1 : resumableFile.size;\n    let startByte = offset !== 0 ? offset * chunkSize : 0;\n    let endByte = Math.min(fileSize, (offset + 1) * chunkSize) - 1;\n\n    if (fileSize - resumable.endByte < chunkSize && !resumable.getOpt('forceChunkSize')) {\n      endByte = fileSize;\n    }\n\n    let headers = {\n      'Accept': 'application/json; text/javascript, */*; q=0.01',\n      'Content-Disposition': 'attachment; filename=\"' + encodeURI(resumableFile.fileName) + '\"',\n      'Content-Range': 'bytes ' + startByte + '-' + endByte + '/' + fileSize,\n    };\n\n    return headers;\n  }\n\n  setQuery = (resumableFile) => {\n    let formData = resumableFile.formData;\n    return formData;\n  }\n\n  generateUniqueIdentifier = (file) => {\n    let relativePath = file.webkitRelativePath||file.relativePath||file.fileName||file.name;\n    return MD5(relativePath + new Date()) + relativePath;\n  }\n\n  onClick = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    e.stopPropagation();\n  }\n\n  onFileUpload = () => {\n    this.uploadInput.current.removeAttribute('webkitdirectory');\n\n    this.uploadInput.current.click();\n  }\n\n  onFolderUpload = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n    this.uploadInput.current.click();\n  }\n\n  onDragStart = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n  }\n\n  onCloseUploadDialog = () => {\n    this.loaded = 0;\n    this.resumable.files = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({isUploadProgressDialogShow: false, uploadFileList: [], forbidUploadFileList: []});\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', false);\n  }\n\n  onUploadCancel = (uploadingItem) => {\n\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (item.uniqueIdentifier === uploadingItem.uniqueIdentifier) {\n        item.cancel(); // execute cancel function will delete the file at the same time\n        return false;\n      }\n      return true;\n    });\n\n    if (!this.resumable.isUploading()) {\n      this.setState({\n        totalProgress: '100',\n        allFilesUploaded: true,\n      });\n      this.loaded = 0;\n    }\n\n    this.setState({uploadFileList: uploadFileList});\n  }\n\n  onCancelAllUploading = () => {\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (Math.round(item.progress() !== 1)) {\n        item.cancel();\n        return false;\n      }\n      return true;\n    });\n\n    this.loaded = 0;\n\n    this.setState({\n      allFilesUploaded: true,\n      totalProgress: '100',\n      uploadFileList: uploadFileList\n    });\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n  }\n\n  onUploadRetry = (resumableFile) => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n\n      let retryFileList = this.state.retryFileList.filter(item => {\n        return item.uniqueIdentifier !== resumableFile.uniqueIdentifier;\n      });\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.error = null;\n          this.retryUploadFile(item);\n        }\n        return item;\n      });\n\n      this.setState({\n        retryFileList: retryFileList,\n        uploadFileList: uploadFileList\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onUploadRetryAll = () => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.state.retryFileList.forEach(item => {\n        item.error = false;\n        this.retryUploadFile(item);\n      });\n\n      let uploadFileList = this.state.uploadFileList.slice(0);\n      this.setState({\n        retryFileList: [],\n        uploadFileList: uploadFileList\n      });\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  retryUploadFile = (resumableFile) => {\n    let { repoID, path } = this.props;\n    let fileName = resumableFile.fileName;\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    if (!isFile) {\n      let relative_path = resumableFile.formData.relative_path;\n      let prefix = path === '/' ? (path + relative_path) : (path + '/' + relative_path);\n      fileName = prefix + fileName;\n    }\n\n    resumableFile.bootstrap();\n    var firedRetry = false;\n    resumableFile.resumableObj.on('chunkingComplete', () => {\n      if(!firedRetry) {\n        seafileAPI.getFileUploadedBytes(repoID, path, fileName).then(res => {\n          let uploadedBytes = res.data.uploadedBytes;\n          let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n          let offset = Math.floor(uploadedBytes / blockSize);\n          resumableFile.markChunksCompleted(offset);\n\n          resumableFile.resumableObj.upload();\n\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n      firedRetry = true;\n    });\n  }\n\n  uploadFile = () => {\n    let resumableFile = this.resumable.files[this.resumable.files.length - 1];\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.setState({\n        isUploadRemindDialogShow: false,\n        isUploadProgressDialogShow: true,\n        uploadFileList: [...this.state.uploadFileList, resumableFile]\n      }, () => {\n        this.resumable.upload();\n      });\n      Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  cancelFileUpload = () => {\n    this.resumable.files.pop(); //delete latest file；\n    this.setState({isUploadRemindDialogShow: false});\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"file-uploader-container\">\n          <div className=\"file-uploader\">\n            <input className=\"upload-input\" type=\"file\" ref={this.uploadInput} onClick={this.onClick}/>\n          </div>\n        </div>\n        {this.state.isUploadProgressDialogShow &&\n          <UploadProgressDialog\n            retryFileList={this.state.retryFileList}\n            uploadFileList={this.state.uploadFileList}\n            forbidUploadFileList={this.state.forbidUploadFileList}\n            totalProgress={this.state.totalProgress}\n            uploadBitrate={this.state.uploadBitrate}\n            allFilesUploaded={this.state.allFilesUploaded}\n            onCloseUploadDialog={this.onCloseUploadDialog}\n            onCancelAllUploading={this.onCancelAllUploading}\n            onUploadCancel={this.onUploadCancel}\n            onUploadRetry={this.onUploadRetry}\n            onUploadRetryAll={this.onUploadRetryAll}\n          />\n        }\n      </Fragment>\n    );\n  }\n}\n\nFileUploader.propTypes = propTypes;\n\nexport default FileUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport FileChooser from '../file-chooser/file-chooser';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  sharedToken: PropTypes.string.isRequired,\n  parentDir: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  handleSaveSharedDir: PropTypes.func.isRequired,\n};\n\nclass SaveSharedDirDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repo: null,\n      selectedPath: '',\n      errMessage: '',\n    };\n  }\n\n  onSaveSharedFile = () => {\n    this.props.handleSaveSharedDir(this.state.repo.repo_id, this.state.selectedPath)\n  }\n\n  onDirentItemClick = (repo, selectedPath, dirent) => {\n    if (dirent.type === 'dir') {\n      this.setState({\n        repo: repo,\n        selectedPath: selectedPath,\n      });\n    }\n    else {\n      this.setState({\n        repo: null,\n        selectedPath: '',\n      });\n    }\n  }\n\n  onRepoItemClick = (repo) => {\n    this.setState({\n      repo: repo,\n      selectedPath: '/',\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} className=\"sf-save-file\">\n        <ModalHeader toggle={this.props.toggleCancel}>{gettext('Save to:')}</ModalHeader>\n        <ModalBody>\n          <FileChooser\n            isShowFile={false}\n            onDirentItemClick={this.onDirentItemClick}\n            onRepoItemClick={this.onRepoItemClick}\n            mode=\"only_all_repos\"\n          />\n          {this.state.errMessage && <Alert color=\"danger\">{this.state.errMessage}</Alert>}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Cancel')}</Button>\n          { this.state.selectedPath ?\n            <Button color=\"primary\" onClick={this.onSaveSharedFile}>{gettext('Submit')}</Button>\n            :\n            <Button color=\"primary\" disabled>{gettext('Submit')}</Button>\n          }\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSaveSharedDirDialog.propTypes = propTypes;\n\nexport default SaveSharedDirDialog;\n","import React, { Fragment } from 'react';\nimport MD5 from 'MD5';\nimport ReactDom from 'react-dom';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, UncontrolledTooltip } from 'reactstrap';\nimport moment from 'moment';\nimport Account from './components/common/account';\nimport { useGoFileserver, fileServerRoot, gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle, thumbnailSizeForOriginal } from './utils/constants';\nimport { Utils } from './utils/utils';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport toaster from './components/toast';\nimport ModalPortal from './components/modal-portal';\nimport ZipDownloadDialog from './components/dialog/zip-download-dialog';\nimport ImageDialog from './components/dialog/image-dialog';\nimport FileUploader from './components/shared-link-file-uploader/file-uploader';\nimport SaveSharedDirDialog from './components/dialog/save-shared-dir-dialog';\nimport CopyMoveDirentProgressDialog from './components/dialog/copy-move-dirent-progress-dialog';\nimport RepoInfoBar from './components/repo-info-bar';\nimport RepoTag from './models/repo-tag';\n\nimport './css/shared-dir-view.css';\nimport './css/grid-view.css';\n\nmoment.locale(window.app.config.lang);\n\nlet loginUser = window.app.pageOptions.name;\nlet {\n  token, dirName, dirPath, sharedBy,\n  repoID, relativePath,\n  mode, thumbnailSize, zipped,\n  trafficOverLimit, canDownload,\n  noQuota, canUpload, enableVideoThumbnail\n} = window.shared.pageOptions;\n\nconst showDownloadIcon = !trafficOverLimit && canDownload;\n\nclass SharedDirView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      items: [],\n\n      isAllItemsSelected: false,\n      selectedItems: [],\n\n      sortBy: 'name', // 'name' or 'time' or 'size'\n      sortOrder: 'asc', // 'asc' or 'desc'\n\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n\n      usedRepoTags: [],\n      isRepoInfoBarShow: false,\n\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: [],\n\n      asyncCopyMoveTaskId: '',\n      asyncOperationProgress: 0,\n      asyncOperatedFilesLength: 0,\n      isCopyMoveProgressDialogShow: false,\n\n      isImagePopupOpen: false,\n      imageItems: [],\n      imageIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    if (trafficOverLimit) {\n      toaster.danger(gettext('File download is disabled: the share link traffic of owner is used up.'), {\n        duration: 3\n      });\n    }\n\n    seafileAPI.listSharedDir(token, relativePath, thumbnailSize).then((res) => {\n      const items = res.data['dirent_list'].map(item => {\n        item.isSelected = false;\n        return item;\n      });\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        items: Utils.sortDirentsInSharedDir(items, this.state.sortBy, this.state.sortOrder)\n      });\n      this.getThumbnails();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n\n    this.getShareLinkRepoTags();\n  }\n\n  sortItems = (sortBy, sortOrder) => {\n    this.setState({\n      sortBy: sortBy,\n      sortOrder: sortOrder,\n      items: Utils.sortDirentsInSharedDir(this.state.items, sortBy, sortOrder)\n    });\n  }\n\n  getThumbnails = () => {\n    let items = this.state.items.filter((item) => {\n      return !item.is_dir &&\n        (Utils.imageCheck(item.file_name) ||\n        (enableVideoThumbnail && Utils.videoCheck(item.file_name))) &&\n        !item.encoded_thumbnail_src;\n    });\n    if (items.length == 0) {\n      return ;\n    }\n\n    const len = items.length;\n    const _this = this;\n    let getThumbnail = function(i) {\n      const curItem = items[i];\n      seafileAPI.getShareLinkThumbnail(token, curItem.file_path, thumbnailSize).then((res) => {\n        curItem.encoded_thumbnail_src = res.data.encoded_thumbnail_src;\n      }).catch((error) => {\n        // do nothing\n      }).then(() => {\n        if (i < len - 1) {\n          getThumbnail(++i);\n        } else {\n          // when done, `setState()`\n          _this.setState({\n            items: _this.state.items\n          });\n        }\n      });\n    };\n    getThumbnail(0);\n  }\n\n  renderPath = () => {\n    return (\n      <React.Fragment>\n        {zipped.map((item, index) => {\n          if (index != zipped.length - 1) {\n            return (\n              <React.Fragment key={index}>\n                <a href={`?p=${encodeURIComponent(item.path)}&mode=${mode}`} className=\"mx-1 ellipsis\" title={item.name}>{item.name}</a>\n                <span> / </span>\n              </React.Fragment>\n            );\n          }\n        })\n        }\n        <span className=\"ml-1 ellipsis\" title={zipped[zipped.length - 1].name}>{zipped[zipped.length - 1].name}</span>\n      </React.Fragment>\n    );\n  }\n\n  zipDownloadFolder = (folderPath) => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: folderPath\n      });\n    }\n    else {\n      seafileAPI.getShareLinkZipTask(token, folderPath).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  }\n\n  zipDownloadSelectedItems = () => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: relativePath,\n        selectedItems: this.state.items.filter(item => item.isSelected)\n          .map(item => item.file_name || item.folder_name)\n      });\n    }\n    else {\n      let target = this.state.items.filter(item => item.isSelected).map(item => item.file_name || item.folder_name);\n      seafileAPI.getShareLinkDirentsZipTask(token, relativePath, target).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  }\n\n  async getAsyncCopyMoveProgress() {\n    let { asyncCopyMoveTaskId } = this.state;\n    try {\n      let res = await seafileAPI.queryAsyncOperationProgress(asyncCopyMoveTaskId);\n      let data = res.data;\n      if (data.failed) {\n        let message = gettext('Failed to copy files to another library.');\n        toaster.danger(message);\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        return;\n      }\n\n      if (data.successful) {\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        let message = gettext('Successfully copied files to another library.');\n        toaster.success(message);\n        return;\n      }\n      // init state: total is 0\n      let asyncOperationProgress = !data.total ? 0 : parseInt((data.done/data.total * 100).toFixed(2));\n\n      this.getAsyncCopyMoveProgress();\n      this.setState({asyncOperationProgress: asyncOperationProgress});\n    } catch (error) {\n      this.setState({\n        asyncOperationProgress: 0,\n        isCopyMoveProgressDialogShow: false,\n      });\n    }\n  }\n\n  saveSelectedItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items.filter(item => item.isSelected)\n        .map(item => item.file_name || item.folder_name)\n    });\n  }\n\n  saveAllItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items\n        .map(item => item.file_name || item.folder_name)\n    });\n  }\n\n  toggleSaveSharedDirCancel = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: []\n    });\n  }\n\n  handleSaveSharedDir = (destRepoID, dstPath) => {\n\n    const itemsForSave = this.state.itemsForSave;\n\n    seafileAPI.saveSharedDir(destRepoID, dstPath, token, relativePath, itemsForSave).then((res) => {\n      this.setState({\n        isSaveSharedDirDialogShow: false,\n        itemsForSave: [],\n        isCopyMoveProgressDialogShow: true,\n        asyncCopyMoveTaskId: res.data.task_id,\n        asyncOperatedFilesLength: itemsForSave.length,\n      }, () => {\n        this.getAsyncCopyMoveProgress();\n      });\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      this.setState({errMessage: errMessage});\n    });\n  }\n\n  onProgressDialogToggle = () => {\n    let { asyncOperationProgress } = this.state;\n    if (asyncOperationProgress !== 100) {\n      let taskId = this.state.asyncCopyMoveTaskId;\n      seafileAPI.cancelCopyMoveOperation(taskId);\n    }\n\n    this.setState({\n      asyncOperationProgress: 0,\n      isCopyMoveProgressDialogShow: false,\n    });\n  }\n\n  closeZipDialog = () => {\n    this.setState({\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n      selectedItems: []\n    });\n  }\n\n  // for image popup\n  prepareImageItem = (item) => {\n    const name = item.file_name;\n    const fileExt = name.substr(name.lastIndexOf('.') + 1).toLowerCase();\n    const isGIF = fileExt == 'gif';\n\n    let src;\n    const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n    if (!isGIF) {\n      src = `${siteRoot}thumbnail/${token}/${thumbnailSizeForOriginal}${Utils.encodePath(item.file_path)}`;\n    } else {\n      src = `${fileURL}&raw=1`;\n    }\n\n    return {\n      'name': name,\n      'url': fileURL,\n      'src': src\n    };\n  }\n\n  showImagePopup = (curItem) => {\n    const items = this.state.items.filter((item) => {\n      return !item.is_dir && Utils.imageCheck(item.file_name);\n    });\n    const imageItems = items.map((item) => {\n      return this.prepareImageItem(item);\n    });\n\n    this.setState({\n      isImagePopupOpen: true,\n      imageItems: imageItems,\n      imageIndex: items.indexOf(curItem)\n    });\n  }\n\n  closeImagePopup = () => {\n    this.setState({\n      isImagePopupOpen: false\n    });\n  }\n\n  moveToPrevImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + imageItemsLength - 1) % imageItemsLength\n    }));\n  }\n\n  moveToNextImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + 1) % imageItemsLength\n    }));\n  }\n\n  toggleAllSelected = () => {\n    this.setState((prevState) => ({\n      isAllItemsSelected: !prevState.isAllItemsSelected,\n      items: this.state.items.map((item) => {\n        item.isSelected = !prevState.isAllItemsSelected;\n        return item;\n      })\n    }));\n  }\n\n  toggleItemSelected = (targetItem, isSelected) => {\n    this.setState({\n      items: this.state.items.map((item) => {\n        if (item === targetItem) {\n          item.isSelected = isSelected;\n        }\n        return item;\n      })\n    }, () => {\n      this.setState({\n        isAllItemsSelected: !this.state.items.some(item => !item.isSelected)\n      });\n    });\n  }\n\n  onUploadFile = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.uploader.onFileUpload();\n  }\n\n  onFileUploadSuccess = (direntObject) => {\n    const { name, size } = direntObject;\n    const newItem = {\n      isSelected: false,\n      file_name: name,\n      file_path: Utils.joinPath(relativePath, name),\n      is_dir: false,\n      last_modified: moment().format(),\n      size: size\n    };\n    const folderItems = this.state.items.filter(item => { return item.is_dir; });\n    // put the new file as the first file\n    let items = Array.from(this.state.items);\n    items.splice(folderItems.length, 0, newItem);\n    this.setState({items: items});\n    seafileAPI.shareLinksUploadDone(token, Utils.joinPath(dirPath, name));\n  }\n\n  getShareLinkRepoTags = () => {\n    seafileAPI.getShareLinkRepoTags(token).then(res => {\n      let usedRepoTags = [];\n      res.data.repo_tags.forEach(item => {\n        let usedRepoTag = new RepoTag(item);\n        if (usedRepoTag.fileCount > 0) {\n          usedRepoTags.push(usedRepoTag);\n        }\n      });\n      this.setState({usedRepoTags: usedRepoTags});\n      if (usedRepoTags.length != 0 && relativePath == '/') {\n        this.setState({isRepoInfoBarShow: true});\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    const isDesktop = Utils.isDesktop();\n    const modeBaseClass = 'btn btn-secondary btn-icon sf-view-mode-btn';\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            {loginUser && <Account />}\n          </div>\n          <div className=\"o-auto\">\n            <div className=\"shared-dir-view-main\">\n              <h2 className=\"h3\">{dirName}</h2>\n              <p>{gettext('Shared by: ')}{sharedBy}</p>\n              <div className=\"d-flex justify-content-between align-items-center op-bar\">\n                <p className=\"m-0 mr-4 ellipsis d-flex align-items-center\"><span className=\"flex-none\">{gettext('Current path: ')}</span>{this.renderPath()}</p>\n                <div className=\"flex-none\">\n                  {isDesktop &&\n                  <div className=\"view-mode btn-group\">\n                    <a href={`?p=${encodeURIComponent(relativePath)}&mode=list`} className={`${modeBaseClass} sf2-icon-list-view ${mode == 'list' ? 'current-mode' : ''}`} title={gettext('List')} aria-label={gettext('List')}></a>\n                    <a href={`?p=${encodeURIComponent(relativePath)}&mode=grid`} className={`${modeBaseClass} sf2-icon-grid-view ${mode == 'grid' ? 'current-mode' : ''}`} title={gettext('Grid')} aria-label={gettext('Grid')}></a>\n                  </div>\n                  }\n                  {canUpload && (\n                    <Button disabled={noQuota}\n                      title={noQuota ? gettext('The owner of this library has run out of space.') : ''}\n                      onClick={this.onUploadFile} className=\"ml-2 shared-dir-op-btn shared-dir-upload-btn\">{gettext('Upload')}</Button>\n                  )}\n                  {showDownloadIcon &&\n                  <Fragment>\n                    {this.state.items.some(item => item.isSelected) ?\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP Selected Items')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save Selected Items')}</Button>\n                        }\n                      </Fragment>\n                      :\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadFolder.bind(this, relativePath)} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveAllItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save')}</Button>\n                        }\n                      </Fragment>\n                    }\n                  </Fragment>\n                  }\n                </div>\n              </div>\n              {!noQuota && canUpload && (\n                <FileUploader\n                  ref={uploader => this.uploader = uploader}\n                  dragAndDrop={false}\n                  token={token}\n                  path={dirPath === '/' ? dirPath : dirPath.replace(/\\/+$/, '')}\n                  relativePath={relativePath === '/' ? relativePath : relativePath.replace(/\\/+$/, '')}\n                  repoID={repoID}\n                  onFileUploadSuccess={this.onFileUploadSuccess}\n                />\n              )}\n\n              {this.state.isRepoInfoBarShow && (\n                <RepoInfoBar\n                  repoID={repoID}\n                  currentPath={'/'}\n                  usedRepoTags={this.state.usedRepoTags}\n                  shareLinkToken={token}\n                  enableFileDownload={showDownloadIcon}\n                  className=\"mx-0\"\n                />\n              )}\n\n              <Content\n                isDesktop={isDesktop}\n                isLoading={this.state.isLoading}\n                errorMsg={this.state.errorMsg}\n                items={this.state.items}\n                sortBy={this.state.sortBy}\n                sortOrder={this.state.sortOrder}\n                sortItems={this.sortItems}\n                isAllItemsSelected={this.state.isAllItemsSelected}\n                toggleAllSelected={this.toggleAllSelected}\n                toggleItemSelected={this.toggleItemSelected}\n                zipDownloadFolder={this.zipDownloadFolder}\n                showImagePopup={this.showImagePopup}\n              />\n            </div>\n          </div>\n        </div>\n        {this.state.isZipDialogOpen &&\n        <ModalPortal>\n          <ZipDownloadDialog\n            token={token}\n            path={this.state.zipFolderPath}\n            target={this.state.selectedItems}\n            toggleDialog={this.closeZipDialog}\n          />\n        </ModalPortal>\n        }\n        {this.state.isSaveSharedDirDialogShow &&\n          <SaveSharedDirDialog\n            sharedToken={token}\n            parentDir={relativePath}\n            items={this.state.itemsForSave}\n            toggleCancel={this.toggleSaveSharedDirCancel}\n            handleSaveSharedDir={this.handleSaveSharedDir}\n          />\n        }\n        {this.state.isCopyMoveProgressDialogShow && (\n          <CopyMoveDirentProgressDialog\n            type='copy'\n            asyncOperatedFilesLength={this.state.asyncOperatedFilesLength}\n            asyncOperationProgress={this.state.asyncOperationProgress}\n            toggleDialog={this.onProgressDialogToggle}\n          />\n        )}\n        {this.state.isImagePopupOpen &&\n        <ModalPortal>\n          <ImageDialog\n            imageItems={this.state.imageItems}\n            imageIndex={this.state.imageIndex}\n            closeImagePopup={this.closeImagePopup}\n            moveToPrevImage={this.moveToPrevImage}\n            moveToNextImage={this.moveToNextImage}\n          />\n        </ModalPortal>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  sortByName = (e) => {\n    e.preventDefault();\n    const sortBy = 'name';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  sortByTime = (e) => {\n    e.preventDefault();\n    const sortBy = 'time';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  sortBySize = (e) => {\n    e.preventDefault();\n    const sortBy = 'size';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  render() {\n    const {\n      isDesktop,\n      isLoading, errorMsg, items,\n      sortBy, sortOrder,\n      isAllItemsSelected\n    } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    const tbody = (\n      <tbody>\n        {items.map((item, index) => {\n          return <Item\n            key={index}\n            isDesktop={isDesktop}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n            toggleItemSelected={this.props.toggleItemSelected}\n          />;\n        })}\n      </tbody>\n    );\n\n    if (!isDesktop) {\n      return (\n        <table className=\"table-hover table-thead-hidden\">\n          <thead>\n            <tr>\n              <th width=\"12%\"></th>\n              <th width=\"80%\"></th>\n              <th width=\"8%\"></th>\n            </tr>\n          </thead>\n          {tbody}\n        </table>\n      );\n    }\n\n    const sortIcon = <span className={`fas ${sortOrder == 'asc' ? 'fa-caret-up' : 'fa-caret-down'}`}></span>;\n    return mode == 'list' ? (\n      <table className=\"table-hover\">\n        <thead>\n          <tr>\n            {showDownloadIcon &&\n            <th width=\"3%\" className=\"text-center\">\n              <input type=\"checkbox\" checked={isAllItemsSelected} onChange={this.props.toggleAllSelected} />\n            </th>\n            }\n            <th width=\"5%\"></th>\n            <th width={showDownloadIcon ? '50%' : '53%'}><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByName}>{gettext('Name')} {sortBy == 'name' && sortIcon}</a></th>\n            <th width=\"8%\"></th>\n            <th width=\"14%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortBySize}>{gettext('Size')} {sortBy == 'size' && sortIcon}</a></th>\n            <th width=\"13%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByTime}>{gettext('Last Update')} {sortBy == 'time' && sortIcon}</a></th>\n            <th width=\"7%\"></th>\n          </tr>\n        </thead>\n        {tbody}\n      </table>\n    ) : (\n      <ul className=\"grid-view\">\n        {items.map((item, index) => {\n          return <GridItem\n            key={index}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n          />;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass Item extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false,\n      isOpMenuOpen: false\n    };\n  }\n\n  toggleOpMenu = () => {\n    this.setState({isOpMenuOpen: !this.state.isOpMenuOpen});\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  }\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  }\n\n  toggleItemSelected = (e) => {\n    this.props.toggleItemSelected(this.props.item, e.target.checked);\n  }\n\n  render() {\n    const { item, isDesktop } = this.props;\n    const { isIconShown } = this.state;\n\n    let toolTipID = '';\n    let tagTitle = '';\n    if (item.file_tags && item.file_tags.length > 0) {\n      toolTipID = MD5(item.file_name).slice(0, 7);\n      tagTitle = item.file_tags.map(item => item.tag_name).join(' ');\n    }\n\n    if (item.is_dir) {\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n          </td>\n          <td></td>\n          <td></td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" onClick={this.zipDownloadFolder}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n          </td>\n          <td className=\"tag-list-title\">\n            {(item.file_tags && item.file_tags.length > 0) && (\n              <Fragment>\n                <div id={`tag-list-title-${toolTipID}`} className=\"dirent-item tag-list tag-list-stacked\">\n                  {item.file_tags.map((fileTag, index) => {\n                    let length = item.file_tags.length;\n                    return (\n                      <span className=\"file-tag\" key={fileTag.file_tag_id} style={{zIndex:length - index, backgroundColor:fileTag.tag_color}}></span>\n                    );\n                  })}\n                </div>\n                <UncontrolledTooltip target={`tag-list-title-${toolTipID}`} placement=\"bottom\">\n                  {tagTitle}\n                </UncontrolledTooltip>\n              </Fragment>\n            )}\n          </td>\n          <td>{Utils.bytesToSize(item.size)}</td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{Utils.bytesToSize(item.size)}</span>\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" tag=\"a\" href={`${fileURL}&dl=1`}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    }\n  }\n}\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  }\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  }\n\n  render() {\n    const item = this.props.item;\n    const { isIconShown } = this.state;\n\n    if (item.is_dir) {\n      const folderURL = `?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`;\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={folderURL} className=\"grid-file-img-link d-block\">\n            <img src={Utils.getFolderIconUrl(false, 192)} alt=\"\" width=\"96\" height=\"96\" />\n          </a>\n          <a href={folderURL} className=\"grid-file-name grid-file-name-link\">{item.folder_name}</a>\n          {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={fileURL} className=\"grid-file-img-link d-block\" onClick={this.handleFileClick}>\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name, 192)} alt=\"\" width=\"96\" height=\"96\" />\n            }\n          </a>\n          <a href={fileURL} className=\"grid-file-name grid-file-name-link\" onClick={this.handleFileClick}>{item.file_name}</a>\n          {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    }\n  }\n}\n\nReactDom.render(<SharedDirView />, document.getElementById('wrapper'));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\n\nimport Lightbox from '@seafile/react-image-lightbox';\nimport '@seafile/react-image-lightbox/style.css';\n\nconst propTypes = {\n  imageItems: PropTypes.array.isRequired,\n  imageIndex: PropTypes.number.isRequired,\n  closeImagePopup: PropTypes.func.isRequired,\n  moveToPrevImage: PropTypes.func.isRequired,\n  moveToNextImage: PropTypes.func.isRequired\n};\n\nclass ImageDialog extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const imageItems = this.props.imageItems;\n    const imageIndex = this.props.imageIndex;\n    const imageItemsLength = imageItems.length;\n    const name = imageItems[imageIndex].name;\n    const imageTitle = `${name} (${imageIndex + 1}/${imageItemsLength})`;\n\n    return (\n      <Lightbox\n        imageTitle={imageTitle}\n        mainSrc={imageItems[imageIndex].src}\n        nextSrc={imageItems[(imageIndex + 1) % imageItemsLength].src}\n        prevSrc={imageItems[(imageIndex + imageItemsLength - 1) % imageItemsLength].src}\n        onCloseRequest={this.props.closeImagePopup}\n        onMovePrevRequest={this.props.moveToPrevImage}\n        onMoveNextRequest={this.props.moveToNextImage}\n        imagePadding={70}\n        imageLoadErrorMessage={gettext('The image could not be loaded.')}\n        prevLabel={gettext('Previous (Left arrow key)')}\n        nextLabel={gettext('Next (Right arrow key)')}\n        closeLabel={gettext('Close (Esc)')}\n        zoomInLabel={gettext('Zoom in')}\n        zoomOutLabel={gettext('Zoom out')}\n      />\n    );\n  }\n}\n\nImageDialog.propTypes = propTypes;\n\nexport default ImageDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport moment from 'moment';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentTag: PropTypes.object.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass ListTaggedFilesDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      taggedFileList: [],\n    };\n  }\n\n  onFileTagChanged = (TaggedFile) => {\n    const path = TaggedFile.parent_path;\n    const dirent = {name: TaggedFile.filename};\n    let direntPath = path === '/' ? path + TaggedFile.filename : path + '/' + TaggedFile.filename;\n    this.props.onFileTagChanged(dirent, direntPath);\n  }\n\n  onDeleteTaggedFile = (taggedFile) => {\n    let repoID = this.props.repoID;\n    let fileTagID = taggedFile.file_tag_id;\n    seafileAPI.deleteFileTag(repoID, fileTagID).then(res => {\n      this.getTaggedFiles();\n      this.props.updateUsedRepoTags();\n      if ((this.props.onFileTagChanged) && !taggedFile.file_deleted) this.onFileTagChanged(taggedFile);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  componentDidMount() {\n    this.getTaggedFiles();\n  }\n\n  getTaggedFiles = () => {\n    let { repoID, currentTag, shareLinkToken } = this.props;\n    let request = shareLinkToken ?\n      seafileAPI.getShareLinkTaggedFiles(shareLinkToken, currentTag.id) :\n      seafileAPI.listTaggedFiles(repoID, currentTag.id);\n    request.then(res => {\n      let taggedFileList = [];\n      res.data.tagged_files !== undefined &&\n      res.data.tagged_files.forEach(file => {\n        let taggedFile = file;\n        taggedFileList.push(taggedFile);\n      });\n      this.setState({\n        taggedFileList: taggedFileList,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    let taggedFileList = this.state.taggedFileList;\n    return (\n      <Modal isOpen={true} style={{maxWidth: '678px'}}>\n        <ModalHeader toggle={this.props.onClose}>{gettext('Tagged Files')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Size')}</th>\n                <th width='22%'>{gettext('Last Update')}</th>\n                <th width='8%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {taggedFileList.map((taggedFile, index) => {\n                return (\n                  <TaggedFile\n                    key={index}\n                    repoID={this.props.repoID}\n                    taggedFile={taggedFile}\n                    onDeleteTaggedFile={this.onDeleteTaggedFile}\n                    shareLinkToken={this.props.shareLinkToken}\n                    enableFileDownload={this.props.enableFileDownload}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListTaggedFilesDialog.propTypes = propTypes;\n\nexport default ListTaggedFilesDialog;\n\nconst TaggedFilePropTypes = {\n  repoID: PropTypes.string.isRequired,\n  taggedFile: PropTypes.object,\n  onDeleteTaggedFile: PropTypes.func.isRequired,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass TaggedFile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  }\n\n  deleteFile = (e) => {\n    e.preventDefault();\n    this.props.onDeleteTaggedFile(this.props.taggedFile);\n  }\n\n  render() {\n    const { taggedFile, shareLinkToken, enableFileDownload } = this.props;\n\n    let path = taggedFile.parent_path ? Utils.joinPath(taggedFile.parent_path, taggedFile.filename) : '';\n    let href = shareLinkToken ?\n      siteRoot + 'd/' + shareLinkToken + '/files/?p=' + Utils.encodePath(path) :\n      siteRoot + 'lib/' + this.props.repoID + '/file' + Utils.encodePath(path);\n\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} onFocus={this.onMouseEnter}>\n        {taggedFile.file_deleted ?\n          <Fragment>\n            <td colSpan='3' className=\"name\">{taggedFile.filename}{' '}\n              <span style={{color:'red'}}>{gettext('deleted')}</span>\n            </td>\n          </Fragment>\n          :\n          <Fragment>\n            <td><a href={href} target='_blank' className=\"d-inline-block w-100 ellipsis\" title={taggedFile.filename} rel=\"noreferrer\">{taggedFile.filename}</a></td>\n            <td>{Utils.bytesToSize(taggedFile.size)}</td>\n            <td>{moment.unix(taggedFile.mtime).fromNow()}</td>\n          </Fragment>\n        }\n        <td>\n          {!shareLinkToken &&\n            <a href=\"#\" role=\"button\" aria-label={gettext('Delete')} title={gettext('Delete')} className={`action-icon sf2-icon-x3${this.state.active ? '' : ' invisible'}`} onClick={this.deleteFile}></a>\n          }\n          {(shareLinkToken && enableFileDownload) &&\n            <a className={`action-icon sf2-icon-download${this.state.active ? '' : ' invisible'}`} href={`${href}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n          }\n        </td>\n      </tr>\n    );\n  }\n}\n\nTaggedFile.propTypes = TaggedFilePropTypes;\n","import moment from 'moment';\n\nclass Draft {\n\n  constructor(item) {\n    this.created = item.created_at;\n    this.createdStr = moment((new Date(item.created_at)).getTime()).format('YYYY-MM-DD HH:mm');\n    this.id = item.id;\n    this.ownerNickname = item.owner_nickname;\n    this.originRepoID = item.origin_repo_id;\n    this.draftFilePath = item.draft_file_path;\n  }\n}\n\nexport default Draft;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport moment from 'moment';\nimport editorUtilities from '../../utils/editor-utilities';\nimport toaster from '../../components/toast';\nimport { Utils } from '../../utils/utils';\nimport Draft from '../../models/draft';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nclass ListRepoDraftsDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drafts: [],\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.listRepoDrafts(this.props.repoID).then(res => {\n      let drafts = res.data.drafts.map(item => {\n        let draft = new Draft(item);\n        return draft;\n      });\n      this.setState({\n        drafts: drafts\n      });\n    });\n  }\n\n  onDeleteDraftItem = (draft) => {\n    editorUtilities.deleteDraft(draft.id).then(() => {\n      let drafts = this.state.drafts.filter(item => {\n        return item.id !== draft.id;\n      });\n      this.setState({drafts: drafts});\n      let msg = gettext('Successfully deleted draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.success(msg);\n    }).catch(() => {\n      let msg = gettext('Failed to delete draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.danger(msg);\n    });\n  }\n\n  toggle = () => {\n    this.props.toggle();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.toggle}>{gettext('Drafts')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Owner')}</th>\n                <th width='20%'>{gettext('Last Update')}</th>\n                <th width='10%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.drafts.map((item, index) => {\n                return (\n                  <DraftItem\n                    key={index}\n                    draftItem={item}\n                    onDeleteDraftItem={this.onDeleteDraftItem}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggle}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListRepoDraftsDialog.propTypes = propTypes;\n\nexport default ListRepoDraftsDialog;\n\nconst DraftItemPropTypes = {\n  draftItem: PropTypes.object,\n  onDeleteDraftItem: PropTypes.func.isRequired,\n};\n\nclass DraftItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  }\n\n  render() {\n    const draftItem = this.props.draftItem;\n    let href = siteRoot + 'drafts/' + draftItem.id + '/';\n    let className = this.state.active ? 'action-icon sf2-icon-x3' : 'action-icon vh sf2-icon-x3';\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td className=\"name\">\n          <a href={href} target='_blank'>{Utils.getFileName(draftItem.draftFilePath)}</a>\n        </td>\n        <td>{draftItem.ownerNickname}</td>\n        <td>{moment(draftItem.createdStr).fromNow()}</td>\n        <td>\n          <i className={className} onClick={this.props.onDeleteDraftItem.bind(this, draftItem)}></i>\n        </td>\n      </tr>\n    );\n  }\n}\n\nDraftItem.propTypes = DraftItemPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport Loading from '../../components/loading';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, mediaUrl } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  filePath: PropTypes.string.isRequired,\n  fileName: PropTypes.string.isRequired,\n  href: PropTypes.string,\n  toggleCancel: PropTypes.func.isRequired,\n};\n\nclass ReadmeDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      readmeContent: null,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getFileDownloadLink(this.props.repoID, this.props.filePath).then(res => {\n      seafileAPI.getFileContent(res.data).then(res => {\n        this.setState({\n          readmeContent: res.data,\n          isLoading: false,\n        });\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggleCancel} className=\"readme-dialog\" size=\"lg\">\n        <ModalHeader>{this.props.fileName}\n          <a className=\"readme-dialog-edit\" href={this.props.href} target='_blank'><i className=\"fa fa-pencil-alt\"></i></a>\n        </ModalHeader>\n        <ModalBody>\n          {this.state.isLoading ?\n            <Loading />:\n            <MarkdownViewer\n              markdownContent={this.state.readmeContent}\n              showTOC={false}\n              scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n            />\n          }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nReadmeDialog.propTypes = propTypes;\n\nexport default ReadmeDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalPortal from './modal-portal';\nimport ListTaggedFilesDialog from './dialog/list-taggedfiles-dialog';\nimport ListRepoDraftsDialog from './dialog/list-repo-drafts-dialog';\nimport ReadmeDialog from './dialog/readme-dialog';\nimport { siteRoot, gettext } from '../utils/constants';\nimport { Utils } from '../utils/utils';\n\nimport '../css/repo-info-bar.css';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentPath: PropTypes.string.isRequired,\n  usedRepoTags: PropTypes.array.isRequired,\n  readmeMarkdown: PropTypes.object,\n  draftCounts: PropTypes.number,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  className: PropTypes.string,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass RepoInfoBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTag: null,\n      isListTaggedFileShow: false,\n      showRepoDrafts: false,\n      showReadmeDialog: false,\n    };\n  }\n\n  onListTaggedFiles = (currentTag) => {\n    this.setState({\n      currentTag: currentTag,\n      isListTaggedFileShow: !this.state.isListTaggedFileShow,\n    });\n  }\n\n  onCloseDialog = () => {\n    this.setState({\n      isListTaggedFileShow: false\n    });\n  }\n\n  toggleDrafts = () => {\n    this.setState({\n      showRepoDrafts: !this.state.showRepoDrafts\n    });\n  }\n\n  toggleReadme = () => {\n    this.setState({\n      showReadmeDialog: !this.state.showReadmeDialog\n    });\n  }\n\n  render() {\n    let { repoID, currentPath, usedRepoTags, readmeMarkdown, draftCounts, className } = this.props;\n\n    // to be compatible with the existing code\n    if (readmeMarkdown === undefined) {\n      readmeMarkdown = null;\n    }\n    if (draftCounts === undefined) {\n      draftCounts = 0;\n    }\n\n    let href = readmeMarkdown !== null ? siteRoot + 'lib/' + repoID + '/file' + Utils.joinPath(currentPath, readmeMarkdown.name) +  '?mode=edit' : '';\n    let filePath = readmeMarkdown !== null ? currentPath + readmeMarkdown.name : '';\n    return (\n      <div className={`repo-info-bar ${className ? className : ''}`}>\n        {usedRepoTags.length > 0 && (\n          <ul className=\"used-tag-list\">\n            {usedRepoTags.map((usedRepoTag) => {\n              return (\n                <li key={usedRepoTag.id} className=\"used-tag-item\">\n                  <span className=\"used-tag\" style={{backgroundColor:usedRepoTag.color}}></span>\n                  <span className=\"used-tag-name\" title={usedRepoTag.name}>{usedRepoTag.name}</span>\n                  <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.onListTaggedFiles.bind(this, usedRepoTag)}>\n                    {usedRepoTag.fileCount > 1 ? usedRepoTag.fileCount + ' files' : usedRepoTag.fileCount + ' file'}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <div className={(usedRepoTags.length > 0 && readmeMarkdown) ? 'file-info-list mt-1' : 'file-info-list'}>\n          {(readmeMarkdown !== null && parseInt(readmeMarkdown.size) > 1) &&\n            <span className=\"file-info\" onClick={this.toggleReadme}>\n              <span className=\"info-icon sf2-icon-readme\"></span>\n              <span className=\"used-tag-name\">{readmeMarkdown.name}</span>\n            </span>\n          }\n          {(readmeMarkdown !== null && parseInt(readmeMarkdown.size) < 2) &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-readme\"></span>\n              <a className=\"used-tag-name\" href={href} target='_blank' rel=\"noreferrer\">{readmeMarkdown.name}</a>\n            </span>\n          }\n          {draftCounts > 0 &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-drafts\"></span>\n              <span className=\"used-tag-name\">{gettext('draft')}</span>\n              <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.toggleDrafts}>\n                {draftCounts > 1 ? draftCounts + ' files' : draftCounts + ' file'}\n              </button>\n            </span>\n          }\n        </div>\n        {this.state.isListTaggedFileShow && (\n          <ModalPortal>\n            <ListTaggedFilesDialog\n              repoID={repoID}\n              currentTag={this.state.currentTag}\n              onClose={this.onCloseDialog}\n              toggleCancel={this.onListTaggedFiles}\n              updateUsedRepoTags={this.props.updateUsedRepoTags}\n              onFileTagChanged={this.props.onFileTagChanged}\n              shareLinkToken={this.props.shareLinkToken}\n              enableFileDownload={this.props.enableFileDownload}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showRepoDrafts && (\n          <ModalPortal>\n            <ListRepoDraftsDialog\n              toggle={this.toggleDrafts}\n              repoID={this.props.repoID}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showReadmeDialog && (\n          <ModalPortal>\n            <ReadmeDialog\n              toggleCancel={this.toggleReadme}\n              repoID={repoID}\n              filePath={filePath}\n              href={href}\n              fileName={readmeMarkdown.name}\n            />\n          </ModalPortal>\n        )}\n      </div>\n    );\n  }\n}\n\nRepoInfoBar.propTypes = propTypes;\n\nexport default RepoInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['move', 'copy']).isRequired,\n  asyncOperatedFilesLength: PropTypes.number.isRequired,\n  asyncOperationProgress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  toggleDialog: PropTypes.func.isRequired,\n};\n\nclass CopyMoveDirentProgressDialog extends React.Component {\n\n  render() {\n\n    let { type , asyncOperationProgress, asyncOperatedFilesLength } = this.props;\n    let title = type === 'move' ? gettext('Move {num} items') : gettext('Copy {num} items');\n    title = title.replace('{num}', asyncOperatedFilesLength);\n    let progressStyle = {\n      width: asyncOperationProgress + '%',\n      lineHeight: '40px',\n      textAlign: 'left',\n    };\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.props.toggleDialog}>{title}</ModalHeader>\n        <ModalBody style={{minHeight: '80px'}}>\n          <div className=\"progress\" style={{height: '40px'}}>\n            <div\n              className=\"progress-bar pl-2\"\n              role=\"progressbar\"\n              style={progressStyle}\n              aria-valuenow={asyncOperationProgress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              {asyncOperationProgress + '%'}\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nCopyMoveDirentProgressDialog.propTypes = propTypes;\n\nexport default CopyMoveDirentProgressDialog;\n"],"sourceRoot":""}