{"version":3,"sources":["shared-file-view-markdown.js"],"names":["window","shared","pageOptions","repoID","sharedToken","rawPath","err","SharedFileViewMarkdown","content","FileContent","React","Component","props","changeImageURL","innerNode","type","imageUrl","data","src","RegExp","serviceURL","test","imagePath","substring","length","index","indexOf","index2","Utils","encodePath","modifyValueBeforeRender","value","changeMarkdownNodes","state","markdownContent","loading","seafileAPI","getFileContent","then","res","setState","catch","error","errMessage","getErrorMsg","toaster","danger","this","className","scriptSource","mediaUrl","showTOC","ReactDOM","render","document","getElementById"],"mappings":"0TAW8CA,OAAOC,OAAOC,YAApDC,E,EAAAA,OAAQC,E,EAAAA,YAAaC,E,EAAAA,QAASC,E,EAAAA,IAEhCC,E,4JACJ,WACE,OAAO,cAAC,IAAD,CAAgBC,QAAS,cAACC,EAAD,U,GAFCC,IAAMC,WAMrCF,E,kDAEJ,WAAYG,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,eAAiB,SAACC,GAChB,GAAsB,SAAlBA,EAAUC,KAAiB,CAC7B,IAAIC,EAAWF,EAAUG,KAAKC,IAK9B,IAHW,IAAIC,OAAOC,KAAa,QAAUjB,EAAQ,gBAG7CkB,KAAKL,GACX,OAGF,IAAIM,EAAYN,EAASO,UAAUH,KAAWI,QAC1CC,EAAQH,EAAUI,QAAQ,SAC1BC,EAASL,EAAUI,QAAQ,KAC/BJ,EAAYA,EAAUC,UAAUE,EAAQ,EAAGE,GAE3Cb,EAAUG,KAAKC,IAAME,KAAa,qCAAuChB,EAAc,SAAWwB,IAAMC,WAAWP,GAErH,OAAOR,GAtCU,EAyCnBgB,wBAA0B,SAACC,GACzB,OAAOH,IAAMI,oBAAoBD,EAAO,EAAKlB,iBAxC7C,EAAKoB,MAAQ,CACXC,gBAAiB,GACjBC,SAAU7B,GAJK,E,qDAQnB,WAAqB,IAAD,OAClB8B,IAAWC,eAAehC,GAASiC,MAAK,SAACC,GACvC,EAAKC,SAAS,CACZN,gBAAiBK,EAAItB,KACrBkB,SAAS,OAEVM,OAAM,SAAAC,GACP,IAAIC,EAAaf,IAAMgB,YAAYF,GACnCG,IAAQC,OAAOH,Q,oBA6BnB,WACE,OAAIrC,EACK,cAAC,IAAD,IAGLyC,KAAKd,MAAME,QACN,cAAC,IAAD,IAIP,qBAAKa,UAAU,wBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CACEC,aAAcC,KAAW,wBACzBhB,gBAAiBa,KAAKd,MAAMC,gBAC5BiB,SAAS,EACT/B,WAAYA,KACZhB,YAAaA,EACbD,OAAQA,EACR2B,wBAAyBiB,KAAKjB,kC,GAlEhBpB,IAAMC,WA0EhCyC,IAASC,OACP,cAAC9C,EAAD,IACA+C,SAASC,eAAe,c","file":"static/js/sharedFileViewMarkdown.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { seafileAPI } from './utils/seafile-api';\nimport { Utils } from './utils/utils';\nimport { serviceURL, mediaUrl } from './utils/constants';\nimport SharedFileView from './components/shared-file-view/shared-file-view';\nimport SharedFileViewTip from './components/shared-file-view/shared-file-view-tip';\nimport Loading from './components/loading';\nimport MarkdownViewer from '@seafile/seafile-editor/dist/viewer/markdown-viewer';\nimport toaster from './components/toast';\n\nconst { repoID, sharedToken, rawPath, err } = window.shared.pageOptions;\n\nclass SharedFileViewMarkdown extends React.Component {\n  render() {\n    return <SharedFileView content={<FileContent />} />;\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdownContent: '',\n      loading: !err\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getFileContent(rawPath).then((res) => {\n      this.setState({\n        markdownContent: res.data,\n        loading: false\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  changeImageURL = (innerNode) => {\n    if (innerNode.type == 'image') {\n      let imageUrl = innerNode.data.src;\n\n      const re = new RegExp(serviceURL + '/lib/' + repoID +'/file.*raw=1');\n\n      // different repo\n      if (!re.test(imageUrl)) {\n        return;\n      }\n      // get image path\n      let imagePath = imageUrl.substring(serviceURL.length);\n      let index = imagePath.indexOf('/file');\n      let index2 = imagePath.indexOf('?');\n      imagePath = imagePath.substring(index + 5, index2);\n      // change image url\n      innerNode.data.src = serviceURL + '/view-image-via-share-link/?token=' + sharedToken + '&path=' + Utils.encodePath(imagePath);\n    }\n    return innerNode;\n  }\n\n  modifyValueBeforeRender = (value) => {\n    return Utils.changeMarkdownNodes(value, this.changeImageURL);\n  }\n\n  render() {\n    if (err) {\n      return <SharedFileViewTip />;\n    }\n\n    if (this.state.loading) {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"shared-file-view-body\">\n        <div className=\"md-view\">\n          <MarkdownViewer\n            scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n            markdownContent={this.state.markdownContent}\n            showTOC={false}\n            serviceURL={serviceURL}\n            sharedToken={sharedToken}\n            repoID={repoID}\n            modifyValueBeforeRender={this.modifyValueBeforeRender}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render (\n  <SharedFileViewMarkdown />,\n  document.getElementById('wrapper')\n);"],"sourceRoot":""}