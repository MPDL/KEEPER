{"version":3,"sources":["shared-file-view-markdown.js"],"names":["window","shared","pageOptions","repoID","sharedToken","rawPath","err","SharedFileViewMarkdown","content","FileContent","fileType","React","Component","props","changeImageURL","innerNode","type","imageUrl","data","src","RegExp","serviceURL","test","imagePath","substring","length","index","indexOf","index2","modifyValueBeforeRender","value","Utils","changeMarkdownNodes","updateForNoOutline","$outline","document","querySelector","$main","className","state","markdownContent","loading","seafileAPI","getFileContent","then","res","setState","catch","error","errMessage","getErrorMsg","toaster","danger","this","scriptSource","mediaUrl","showTOC","activeTitleIndex","ReactDOM","render","getElementById"],"mappings":"yTAW8CA,OAAOC,OAAOC,YAApDC,E,EAAAA,OAAQC,E,EAAAA,YAAaC,E,EAAAA,QAASC,E,EAAAA,IAEhCC,E,4JACJ,WACE,OAAO,cAAC,IAAD,CAAgBC,QAAS,cAACC,EAAD,IAAiBC,SAAS,W,GAFzBC,IAAMC,WAMrCH,E,kDAEJ,WAAYI,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,eAAiB,SAACC,GAChB,GAAsB,SAAlBA,EAAUC,KAAiB,CAC7B,IAAIC,EAAWF,EAAUG,KAAKC,IAK9B,IAHW,IAAIC,OAAOC,KAAa,QAAUlB,EAAQ,gBAG7CmB,KAAKL,GACX,OAGF,IAAIM,EAAYN,EAASO,UAAUH,KAAWI,QAC1CC,EAAQH,EAAUI,QAAQ,SAC1BC,EAASL,EAAUI,QAAQ,KAC/BJ,EAAYA,EAAUC,UAAUE,EAAQ,EAAGE,GAG3Cb,EAAUG,KAAKC,IAAME,KAAa,qCAAuCjB,EAAc,SAAWmB,EAEpG,OAAOR,GAvCU,EA0CnBc,wBAA0B,SAACC,GACzB,OAAOC,IAAMC,oBAAoBF,EAAO,EAAKhB,iBA3C5B,EA8CnBmB,mBAAqB,WACnB,IAAMC,EAAWC,SAASC,cAAc,sCAClCC,EAAQF,SAASC,cAAc,qBACrCF,EAASI,WAAa,UACtBD,EAAMC,WAAa,uBAhDnB,EAAKC,MAAQ,CACXC,gBAAiB,GACjBC,SAAUnC,GAJK,E,qDAQnB,WAAqB,IAAD,OAClBoC,IAAWC,eAAetC,GAASuC,MAAK,SAACC,GACvC,EAAKC,SAAS,CACZN,gBAAiBK,EAAI3B,KACrBuB,SAAS,OAEVM,OAAM,SAAAC,GACP,IAAIC,EAAalB,IAAMmB,YAAYF,GACnCG,IAAQC,OAAOH,Q,oBAqCnB,WACE,OAAI3C,EACK,cAAC,IAAD,IAGL+C,KAAKd,MAAME,QACN,cAAC,IAAD,IAIP,qBAAKH,UAAU,wBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CACEgB,aAAcC,KAAW,wBACzBf,gBAAiBa,KAAKd,MAAMC,gBAC5BgB,SAAS,EACTvB,mBAAoBoB,KAAKpB,mBACzBwB,iBAAkB,GAClBpC,WAAYA,KACZjB,YAAaA,EACbD,OAAQA,EACR0B,wBAAyBwB,KAAKxB,kC,GA5EhBlB,IAAMC,WAoFhC8C,IAASC,OACP,cAACpD,EAAD,IACA4B,SAASyB,eAAe,c","file":"static/js/sharedFileViewMarkdown.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport { seafileAPI } from './utils/seafile-api';\nimport { Utils } from './utils/utils';\nimport { serviceURL, mediaUrl } from './utils/constants';\nimport SharedFileView from './components/shared-file-view/shared-file-view';\nimport SharedFileViewTip from './components/shared-file-view/shared-file-view-tip';\nimport Loading from './components/loading';\nimport toaster from './components/toast';\n\nconst { repoID, sharedToken, rawPath, err } = window.shared.pageOptions;\n\nclass SharedFileViewMarkdown extends React.Component {\n  render() {\n    return <SharedFileView content={<FileContent />} fileType=\"md\" />;\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdownContent: '',\n      loading: !err\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getFileContent(rawPath).then((res) => {\n      this.setState({\n        markdownContent: res.data,\n        loading: false\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  changeImageURL = (innerNode) => {\n    if (innerNode.type == 'image') {\n      let imageUrl = innerNode.data.src;\n\n      const re = new RegExp(serviceURL + '/lib/' + repoID +'/file.*raw=1');\n\n      // different repo\n      if (!re.test(imageUrl)) {\n        return;\n      }\n      // get image path\n      let imagePath = imageUrl.substring(serviceURL.length);\n      let index = imagePath.indexOf('/file');\n      let index2 = imagePath.indexOf('?');\n      imagePath = imagePath.substring(index + 5, index2);\n      // change image url\n      // the image path has been encoded when inserting the image\n      innerNode.data.src = serviceURL + '/view-image-via-share-link/?token=' + sharedToken + '&path=' + imagePath;\n    }\n    return innerNode;\n  }\n\n  modifyValueBeforeRender = (value) => {\n    return Utils.changeMarkdownNodes(value, this.changeImageURL);\n  }\n\n  updateForNoOutline = () => {\n    const $outline = document.querySelector('.md-view .seafile-markdown-outline');\n    const $main = document.querySelector('.md-view .article');\n    $outline.className += ' d-none';\n    $main.className += ' article-no-outline';\n  }\n\n  render() {\n    if (err) {\n      return <SharedFileViewTip />;\n    }\n\n    if (this.state.loading) {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"shared-file-view-body\">\n        <div className=\"md-view\">\n          <MarkdownViewer\n            scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n            markdownContent={this.state.markdownContent}\n            showTOC={true}\n            updateForNoOutline={this.updateForNoOutline}\n            activeTitleIndex={''}\n            serviceURL={serviceURL}\n            sharedToken={sharedToken}\n            repoID={repoID}\n            modifyValueBeforeRender={this.modifyValueBeforeRender}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render (\n  <SharedFileViewMarkdown />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}