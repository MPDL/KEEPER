{"version":3,"sources":["shared-file-view-markdown.js"],"names":["_window$shared$pageOp","window","shared","pageOptions","repoID","sharedToken","rawPath","err","SharedFileViewMarkdown","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsx","SharedFileView","content","FileContent","fileType","React","Component","_React$Component2","_super2","props","_this","call","changeImageURL","innerNode","type","imageUrl","data","src","RegExp","serviceURL","test","imagePath","substring","length","index","indexOf","index2","modifyValueBeforeRender","Utils","changeMarkdownNodes","updateForNoOutline","$outline","document","querySelector","$main","className","state","markdownContent","loading","_this2","seafileAPI","getFileContent","then","res","setState","catch","error","errMessage","getErrorMsg","toaster","danger","SharedFileViewTip","this","Loading","children","MarkdownViewer","scriptSource","mediaUrl","showTOC","activeTitleIndex","ReactDOM","render","getElementById"],"mappings":"uTAWAA,EAA8CC,OAAOC,OAAOC,YAApDC,EAAMJ,EAANI,OAAQC,EAAWL,EAAXK,YAAaC,EAAON,EAAPM,QAASC,EAAGP,EAAHO,IAEhCC,EAAsB,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAGzB,OAHyBC,YAAAR,EAAA,EAAAS,IAAA,SAAAC,MAC1B,WACE,OAAOC,cAACC,IAAc,CAACC,QAASF,cAACG,EAAW,IAAKC,SAAS,MAC5D,KAACf,CAAA,CAHyB,CAASgB,IAAMC,WAMrCH,EAAW,SAAAI,GAAAhB,YAAAY,EAAAI,GAAA,IAAAC,EAAAf,YAAAU,GAEf,SAAAA,EAAYM,GAAQ,IAADC,EAKf,OALehB,YAAA,KAAAS,IACjBO,EAAAF,EAAAG,KAAA,KAAMF,IAmBRG,eAAiB,SAACC,GAChB,GAAsB,SAAlBA,EAAUC,KAAiB,CAC7B,IAAIC,EAAWF,EAAUG,KAAKC,IAK9B,IAHW,IAAIC,OAAOC,KAAa,QAAUlC,EAAQ,gBAG7CmC,KAAKL,GACX,OAGF,IAAIM,EAAYN,EAASO,UAAUH,KAAWI,QAC1CC,EAAQH,EAAUI,QAAQ,SAC1BC,EAASL,EAAUI,QAAQ,KAC/BJ,EAAYA,EAAUC,UAAUE,EAAQ,EAAGE,GAG3Cb,EAAUG,KAAKC,IAAME,KAAa,qCAAuCjC,EAAc,SAAWmC,CACpG,CACA,OAAOR,CACT,EAACH,EAEDiB,wBAA0B,SAAC5B,GACzB,OAAO6B,IAAMC,oBAAoB9B,EAAOW,EAAKE,eAC/C,EAACF,EAEDoB,mBAAqB,WACnB,IAAMC,EAAWC,SAASC,cAAc,sCAClCC,EAAQF,SAASC,cAAc,qBACrCF,EAASI,WAAa,UACtBD,EAAMC,WAAa,qBACrB,EAjDEzB,EAAK0B,MAAQ,CACXC,gBAAiB,GACjBC,SAAUlD,GACVsB,CACJ,CAyEC,OAzEAb,YAAAM,EAAA,EAAAL,IAAA,oBAAAC,MAED,WAAqB,IAADwC,EAAA,KAClBC,IAAWC,eAAetD,GAASuD,MAAK,SAACC,GACvCJ,EAAKK,SAAS,CACZP,gBAAiBM,EAAI3B,KACrBsB,SAAS,GAEb,IAAGO,OAAM,SAAAC,GACP,IAAIC,EAAanB,IAAMoB,YAAYF,GACnCG,IAAQC,OAAOH,EACjB,GACF,GAAC,CAAAjD,IAAA,SAAAC,MAmCD,WACE,OAAIX,EACKY,cAACmD,IAAiB,IAGvBC,KAAKhB,MAAME,QACNtC,cAACqD,IAAO,IAIfrD,cAAA,OAAKmC,UAAU,wBAAuBmB,SACpCtD,cAAA,OAAKmC,UAAU,UAASmB,SACtBtD,cAACuD,IAAc,CACbC,aAAcC,KAAW,wBACzBpB,gBAAiBe,KAAKhB,MAAMC,gBAC5BqB,SAAS,EACT5B,mBAAoBsB,KAAKtB,mBACzB6B,iBAAkB,GAClBxC,WAAYA,KACZjC,YAAaA,EACbD,OAAQA,EACR0C,wBAAyByB,KAAKzB,6BAKxC,KAACxB,CAAA,CAjFc,CAASE,IAAMC,WAoFhCsD,IAASC,OACP7D,cAACX,EAAsB,IACvB2C,SAAS8B,eAAe,W","file":"static/js/sharedFileViewMarkdown.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport { seafileAPI } from './utils/seafile-api';\nimport { Utils } from './utils/utils';\nimport { serviceURL, mediaUrl } from './utils/constants';\nimport SharedFileView from './components/shared-file-view/shared-file-view';\nimport SharedFileViewTip from './components/shared-file-view/shared-file-view-tip';\nimport Loading from './components/loading';\nimport toaster from './components/toast';\n\nconst { repoID, sharedToken, rawPath, err } = window.shared.pageOptions;\n\nclass SharedFileViewMarkdown extends React.Component {\n  render() {\n    return <SharedFileView content={<FileContent />} fileType=\"md\" />;\n  }\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdownContent: '',\n      loading: !err\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getFileContent(rawPath).then((res) => {\n      this.setState({\n        markdownContent: res.data,\n        loading: false\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  changeImageURL = (innerNode) => {\n    if (innerNode.type == 'image') {\n      let imageUrl = innerNode.data.src;\n\n      const re = new RegExp(serviceURL + '/lib/' + repoID +'/file.*raw=1');\n\n      // different repo\n      if (!re.test(imageUrl)) {\n        return;\n      }\n      // get image path\n      let imagePath = imageUrl.substring(serviceURL.length);\n      let index = imagePath.indexOf('/file');\n      let index2 = imagePath.indexOf('?');\n      imagePath = imagePath.substring(index + 5, index2);\n      // change image url\n      // the image path has been encoded when inserting the image\n      innerNode.data.src = serviceURL + '/view-image-via-share-link/?token=' + sharedToken + '&path=' + imagePath;\n    }\n    return innerNode;\n  }\n\n  modifyValueBeforeRender = (value) => {\n    return Utils.changeMarkdownNodes(value, this.changeImageURL);\n  }\n\n  updateForNoOutline = () => {\n    const $outline = document.querySelector('.md-view .seafile-markdown-outline');\n    const $main = document.querySelector('.md-view .article');\n    $outline.className += ' d-none';\n    $main.className += ' article-no-outline';\n  }\n\n  render() {\n    if (err) {\n      return <SharedFileViewTip />;\n    }\n\n    if (this.state.loading) {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"shared-file-view-body\">\n        <div className=\"md-view\">\n          <MarkdownViewer\n            scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n            markdownContent={this.state.markdownContent}\n            showTOC={true}\n            updateForNoOutline={this.updateForNoOutline}\n            activeTitleIndex={''}\n            serviceURL={serviceURL}\n            sharedToken={sharedToken}\n            repoID={repoID}\n            modifyValueBeforeRender={this.modifyValueBeforeRender}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render (\n  <SharedFileViewMarkdown />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}