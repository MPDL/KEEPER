{"version":3,"sources":["bloxberg-repo-snapshot.js"],"names":["window","app","pageOptions","repoID","repoName","checksums","transactionId","commitID","commitTime","commitDesc","commitRelativeTime","showAuthor","authorAvatarURL","authorName","authorNickName","BloxbergRepoSnapshot","props","onSearchedClick","selectedItem","is_dir","url","siteRoot","repo_id","repo_name","path","navigate","repalce","Utils","encodePath","open","location","href","renderFolder","folderPath","setState","folderItems","isLoading","seafileAPI","listCommitDir","then","res","data","dirent_list","catch","error","errorMsg","getErrorMsg","clickFolderPath","e","preventDefault","renderPath","state","pathList","split","Fragment","onClick","bind","map","item","index","length","slice","join","this","isConfirmDialogOpen","className","src","mediaUrl","logoPath","height","logoHeight","width","logoWidth","title","siteTitle","alt","dangerouslySetInnerHTML","__html","generateDialogTitle","gettext","encodeURIComponent","Content","React","Component","theadData","text","FolderItem","handleMouseOver","isIconShown","handleMouseOut","joinPath","name","type","onMouseOver","onMouseOut","getFolderIconUrl","getFileIconUrl","obj_id","target","bytesToSize","size","JSON","parse","download","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/bloxbergRepoSnapshot.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { navigate } from '@reach/router';\nimport { Utils } from './utils/utils';\nimport { gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport ModalPortal from './components/modal-portal';\nimport toaster from './components/toast';\nimport CommonToolbar from './components/toolbar/common-toolbar';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/repo-snapshot.css';\n\nconst { \n  repoID, repoName, checksums, transactionId,\n  commitID, commitTime, commitDesc, commitRelativeTime,\n  showAuthor, authorAvatarURL, authorName, authorNickName\n} = window.app.pageOptions;\n\nclass BloxbergRepoSnapshot extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      folderPath: '/',\n      folderItems: [],\n    };\n  }\n\n  componentDidMount() {\n    this.renderFolder(this.state.folderPath);\n  }\n\n  onSearchedClick = (selectedItem) => {\n    if (selectedItem.is_dir === true) {\n      let url = siteRoot + 'library/' + selectedItem.repo_id + '/' + selectedItem.repo_name + selectedItem.path;\n      navigate(url, {repalce: true});\n    } else {\n      let url = siteRoot + 'lib/' + selectedItem.repo_id + '/file' + Utils.encodePath(selectedItem.path);\n      let newWindow = window.open('about:blank');\n      newWindow.location.href = url;\n    }\n  }\n\n  renderFolder = (folderPath) => {\n    this.setState({\n      folderPath: folderPath,\n      folderItems: [],\n      isLoading: true\n    });\n\n    seafileAPI.listCommitDir(repoID, commitID, folderPath).then((res) => {\n      this.setState({\n        isLoading: false,\n        folderItems: res.data.dirent_list\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoading: false,\n        errorMsg: Utils.getErrorMsg(error, true) // true: show login tip if 403\n      }); \n    });\n  }\n\n  clickFolderPath = (folderPath, e) => {\n    e.preventDefault();\n    this.renderFolder(folderPath);\n  }\n\n  renderPath = () => {\n    const path = this.state.folderPath;\n    const pathList = path.split('/');\n\n    if (path == '/') {\n      return repoName;\n    }\n\n    return (\n      <React.Fragment>\n        <a href=\"#\" onClick={this.clickFolderPath.bind(this, '/')}>{repoName}</a>\n        <span> / </span>\n        {pathList.map((item, index) => {\n          if (index > 0 && index != pathList.length - 1) {\n            return (\n              <React.Fragment key={index}>\n                <a href=\"#\" onClick={this.clickFolderPath.bind(this, pathList.slice(0, index+1).join('/'))}>{pathList[index]}</a>\n                <span> / </span>\n              </React.Fragment>\n            );  \n          }\n        }\n        )}  \n        {pathList[pathList.length - 1]} \n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { isConfirmDialogOpen, folderPath } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <CommonToolbar onSearchedClick={this.onSearchedClick} />\n          </div>\n          <div className=\"flex-auto container-fluid pt-4 pb-6 o-auto\">\n            <div className=\"row\">\n              <div className=\"col-md-10 offset-md-1\">\n                <h2 dangerouslySetInnerHTML={{__html: Utils.generateDialogTitle(gettext('{placeholder} Snapshot'), repoName) + ` <span class=\"heading-commit-time\">(${commitTime})</span>`}}></h2>\n                {folderPath == '/' && (\n                  <div className=\"d-flex mb-2 align-items-center\">\n                    <p className=\"m-0\">{commitDesc}</p>\n                    <div className=\"ml-4 border-left pl-4 d-flex align-items-center\">\n                      {showAuthor ? (\n                        <React.Fragment>\n                          <img src={authorAvatarURL} width=\"20\" height=\"20\" alt=\"\" className=\"rounded mr-1\" />\n                          <a href={`${siteRoot}profile/${encodeURIComponent(authorName)}/`}>{authorNickName}</a>\n                        </React.Fragment>\n                      ) : <span>{gettext('Unknown')}</span>}\n                      <p className=\"m-0 ml-2\" dangerouslySetInnerHTML={{__html: commitRelativeTime}}></p>\n                    </div>\n                  </div>\n                )}\n                <div className=\"d-flex justify-content-between align-items-center op-bar\">\n                  <p className=\"m-0\">{gettext('Current path: ')}{this.renderPath()}</p>\n                </div>\n                <Content \n                  data={this.state}\n                  renderFolder={this.renderFolder}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.theadData = [\n      {width: '5%', text: ''},\n      {width: '50%', text: gettext('Name')},\n      {width: '15%', text: gettext('Size')},\n      {width: '15%', text: ''},\n      {width: '15%', text: ''}\n    ];\n  } \n\n  render() {\n    const { isLoading, errorMsg, folderPath, folderItems } = this.props.data;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    return (\n      <table className=\"table-hover\">\n        <thead>\n          <tr>\n            {this.theadData.map((item, index) => {\n              return <th key={index} width={item.width}>{item.text}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {folderItems.map((item, index) => {\n            return <FolderItem \n              key={index}\n              item={item} \n              folderPath={folderPath}\n              renderFolder={this.props.renderFolder}\n            />;\n          })\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nclass FolderItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  renderFolder = (e) => {\n    e.preventDefault();\n\n    const item = this.props.item;\n    const { folderPath } = this.props;\n    this.props.renderFolder(Utils.joinPath(folderPath, item.name));\n  }\n\n  render() {\n    const item = this.props.item;\n    const { isIconShown } = this.state;\n    const { folderPath } = this.props;\n    return item.type == 'dir' ? (\n      <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt={gettext('Directory')} width=\"24\" /></td>\n        <td><a href=\"#\" onClick={this.renderFolder}>{item.name}</a></td>\n        <td></td>\n        <td></td>\n      </tr>\n    ) : (\n      <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n        <td className=\"text-center\"><img src={Utils.getFileIconUrl(item.name)} alt={gettext('File')} width=\"24\" /></td>\n        <td><a href={`${siteRoot}repo/${repoID}/snapshot/files/?obj_id=${item.obj_id}&commit_id=${commitID}&p=${encodeURIComponent(Utils.joinPath(folderPath, item.name))}`} target=\"_blank\">{item.name}</a></td>\n        <td>{Utils.bytesToSize(item.size)}</td>\n        <td className=\"text-center\">\n          <a href={`${siteRoot}api2/bloxberg-pdf/${transactionId}/${JSON.parse(checksums)[Utils.joinPath(folderPath, item.name)]}/?p=${encodeURIComponent(Utils.joinPath(folderPath, item.name))}`} download className={`${isIconShown ? '': 'invisible'}`} title={gettext('Download Certificate')}>{gettext('Download Certificate')}</a>\n        </td>\n        <td className=\"text-center\">\n          <a href={`${siteRoot}repo/${repoID}/${item.obj_id}/download/?file_name=${encodeURIComponent(item.name)}&p=${encodeURIComponent(Utils.joinPath(folderPath, item.name))}`} className={`${isIconShown ? '': 'invisible'}`} title={gettext('Download File')}>{gettext('Download File')}</a>\n        </td>\n      </tr>\n    );\n  }\n}\n\nReactDOM.render(\n  <BloxbergRepoSnapshot />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}