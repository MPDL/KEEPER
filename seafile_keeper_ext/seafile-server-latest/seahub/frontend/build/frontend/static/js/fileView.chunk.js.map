{"version":3,"sources":["file-view.js","components/file-content-view/image.js","components/file-content-view/svg.js","components/file-content-view/pdf.js","components/file-content-view/video.js","components/file-content-view/audio.js"],"names":["_window$app$pageOptio","window","app","pageOptions","fileType","err","InnerFileView","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsx","FileView","content","FileViewTip","Image","tip","SVG","PDF","Video","Audio","React","Component","ReactDom","render","document","getElementById","previousImageUrl","nextImageUrl","repoID","repoEncrypted","fileExt","filePath","fileName","thumbnailSizeForOriginal","previousImage","nextImage","rawPath","xmindImageSrc","concat","siteRoot","Utils","encodePath","FileContent","props","_this","call","handleLoadFailure","setState","loadFailed","state","addEventListener","e","keyCode","location","href","this","thumbnailURL","includes","xmindSrc","_jsxs","className","children","id","title","gettext","src","alt","onError","PDFViewer","videoJsOptions","autoplay","controls","preload","playbackRates","sources","VideoPlayer","_objectSpread","AudioPlayer"],"mappings":"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","file":"static/js/fileView.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport FileView from './components/file-view/file-view';\nimport FileViewTip from './components/file-view/file-view-tip';\nimport Image from './components/file-content-view/image';\nimport SVG from './components/file-content-view/svg';\nimport PDF from './components/file-content-view/pdf';\nimport Video from './components/file-content-view/video';\nimport Audio from './components/file-content-view/audio';\n\nconst {\n  fileType, err\n} = window.app.pageOptions;\n\nclass InnerFileView extends React.Component {\n\n  render() {\n    if (err) {\n      return (\n        <FileView content={<FileViewTip />} />\n      );\n    }\n\n    let content;\n    switch (fileType) {\n      case 'Image':\n        content = <Image tip={<FileViewTip />} />;\n        break;\n      case 'XMind':\n        content = <Image tip={<FileViewTip />} />;\n        break;\n      case 'SVG':\n        content = <SVG />;\n        break;\n      case 'PDF':\n        content = <PDF />;\n        break;\n      case 'Video':\n        content = <Video />;\n        break;\n      case 'Audio':\n        content = <Audio />;\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <FileView content={content} />\n    );\n  }\n}\n\nReactDom.render(<InnerFileView />, document.getElementById('wrapper'));\n","import React from 'react';\nimport { Utils } from '../../utils/utils';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nimport '../../css/image-file-view.css';\n\nconst {\n  repoID, repoEncrypted,\n  fileExt, filePath, fileName,\n  thumbnailSizeForOriginal,\n  previousImage, nextImage, rawPath,\n  xmindImageSrc // for xmind file\n} = window.app.pageOptions;\n\nlet previousImageUrl, nextImageUrl;\nif (previousImage) {\n  previousImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(previousImage)}`;\n}\nif (nextImage) {\n  nextImageUrl = `${siteRoot}lib/${repoID}/file${Utils.encodePath(nextImage)}`;\n}\n\nclass FileContent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadFailed: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', (e) => {\n      if (previousImage && e.keyCode == 37) { // press '<-'\n        location.href = previousImageUrl;\n      }\n      if (nextImage && e.keyCode == 39) { // press '->'\n        location.href = nextImageUrl;\n      }\n    });\n  }\n\n  handleLoadFailure = () => {\n    this.setState({\n      loadFailed: true\n    });\n  }\n\n  render() {\n    if (this.state.loadFailed) {\n      return this.props.tip;\n    }\n\n    // request thumbnails for some files\n    // only for 'file view'. not for 'history/trash file view'\n    let thumbnailURL = '';\n    const fileExtList = ['tif', 'tiff', 'psd'];\n    if (!repoEncrypted && fileExtList.includes(fileExt)) {\n      thumbnailURL = `${siteRoot}thumbnail/${repoID}/${thumbnailSizeForOriginal}${Utils.encodePath(filePath)}`;\n    }\n\n    // for xmind file\n    const xmindSrc = xmindImageSrc ? `${siteRoot}${xmindImageSrc}` : '';\n\n    return (\n      <div className=\"file-view-content flex-1 image-file-view\">\n        {previousImage && (\n          <a href={previousImageUrl} id=\"img-prev\" title={gettext('you can also press ← ')}><span className=\"fas fa-chevron-left\"></span></a>\n        )}\n        {nextImage && (\n          <a href={nextImageUrl} id=\"img-next\" title={gettext('you can also press →')}><span className=\"fas fa-chevron-right\"></span></a>\n        )}\n        <img src={xmindSrc || thumbnailURL || rawPath} alt={fileName} id=\"image-view\" onError={this.handleLoadFailure} />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\n\nimport '../../css/svg-file-view.css';\n\nconst {\n  fileName, rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 svg-file-view\">\n        <img src={rawPath} alt={fileName} id=\"svg-view\" />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport PDFViewer from '../pdf-viewer';\n\nimport '../../css/pdf-file-view.css';\n\nclass FileContent extends React.Component {\n  render() {\n    return (\n      <div className=\"file-view-content flex-1 pdf-file-view\">\n        <PDFViewer />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport VideoPlayer from '../video-player';\n\nimport '../../css/video-file-view.css';\n\nconst {\n  rawPath\n} = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      playbackRates: [0.5, 1, 1.5, 2],\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 video-file-view\">\n        <VideoPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n","import React from 'react';\nimport AudioPlayer from '../audio-player';\n\nimport '../../css/audio-file-view.css';\n\nconst { rawPath } = window.app.pageOptions;\n\nclass FileContent extends React.Component {\n  render() {\n    const videoJsOptions = {\n      autoplay: false,\n      controls: true,\n      preload: 'auto',\n      sources: [{\n        src: rawPath\n      }]\n    };\n    return (\n      <div className=\"file-view-content flex-1 audio-file-view\">\n        <AudioPlayer { ...videoJsOptions } />\n      </div>\n    );\n  }\n}\n\nexport default FileContent;\n"],"sourceRoot":""}